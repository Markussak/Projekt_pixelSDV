!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver(e=>{for(const i of e)if("childList"===i.type)for(const e of i.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)}).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();var e=(e=>(e.Desktop="desktop",e.Mobile="mobile",e.Web="web",e.Tauri="tauri",e.Cordova="cordova",e))(e||{});const t=class{static detect(){return this.cachedPlatform?this.cachedPlatform:window.__TAURI__?(this.cachedPlatform="tauri",this.cachedPlatform):window.cordova?(this.cachedPlatform="cordova",this.cachedPlatform):this.isMobile()?(this.cachedPlatform="mobile",this.cachedPlatform):this.isDesktop()?(this.cachedPlatform="desktop",this.cachedPlatform):(this.cachedPlatform="web",this.cachedPlatform)}static getFeatures(){if(this.cachedFeatures)return this.cachedFeatures;const e=this.detect();return this.cachedFeatures={hasKeyboard:this.hasKeyboard(e),hasTouch:this.hasTouch(),hasFileSystem:this.hasFileSystem(e),hasFullscreen:this.hasFullscreen(),canVibrate:this.canVibrate(),preferredInputMethod:this.getPreferredInput(e),storageType:this.getStorageType(e)},this.cachedFeatures}static isMobile(){const e=navigator.userAgent||navigator.vendor||window.opera;if(/android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(e))return!0;const t="ontouchstart"in window||navigator.maxTouchPoints>0,i=window.innerWidth<=768||window.innerHeight<=768;return t&&i}static isDesktop(){const e=!this.isMobile(),t=window.innerWidth>768&&window.innerHeight>768,i=navigator.userAgent,s=/windows|mac|linux/i.test(i);return e&&t&&s}static hasKeyboard(e){switch(e){case"desktop":case"tauri":default:return!0;case"mobile":case"cordova":return!1;case"web":return!this.isMobile()}}static hasTouch(){return"ontouchstart"in window||navigator.maxTouchPoints>0}static hasFileSystem(e){switch(e){case"tauri":case"cordova":return!0;default:return!1}}static hasFullscreen(){return!!(document.fullscreenEnabled||document.webkitFullscreenEnabled||document.mozFullScreenEnabled||document.msFullscreenEnabled)}static canVibrate(){return"vibrate"in navigator}static getPreferredInput(e){switch(e){case"desktop":case"tauri":return"keyboard";case"mobile":case"cordova":return"touch";case"web":return this.hasTouch()?"hybrid":"keyboard";default:return"hybrid"}}static getStorageType(e){switch(e){case"tauri":case"cordova":return"fileSystem";case"desktop":case"mobile":case"web":return"indexedDB";default:return"localStorage"}}static getConfig(){const e=this.detect(),t=this.getFeatures();return{platform:e,features:t,canvas:{pixelRatio:window.devicePixelRatio||1,maxWidth:t.hasTouch?800:1024,maxHeight:t.hasTouch?600:768,scalingMode:t.hasTouch?"fit":"native"},input:{enableKeyboard:t.hasKeyboard,enableTouch:t.hasTouch,enableGamepad:"desktop"===e||"tauri"===e,touchSensitivity:t.hasTouch?1:0,keyRepeatDelay:250,keyRepeatRate:50},performance:{targetFPS:"mobile"===e?30:60,enableParticles:"mobile"!==e,enablePostProcessing:"desktop"===e||"tauri"===e,enableShadows:"desktop"===e,enableDithering:!0,renderScale:t.hasTouch?.8:1},audio:{enableAudio:!0,enableMusic:!0,enableSFX:!0,enableSpatialAudio:"desktop"===e,audioFormat:"webm",maxChannels:"mobile"===e?8:16},storage:{type:t.storageType,enableAutoSave:!0,saveInterval:3e4,maxSaveSlots:"mobile"===e?3:10,compressionEnabled:!0}}}static supports(e){return this.getFeatures()[e]}static getPlatformName(){switch(this.detect()){case"desktop":return"Desktop Browser";case"mobile":return"Mobile Browser";case"web":return"Web Browser";case"tauri":return"Desktop Application";case"cordova":return"Mobile Application";default:return"Unknown Platform"}}static reset(){this.cachedPlatform=null,this.cachedFeatures=null}};t.cachedPlatform=null,t.cachedFeatures=null;let i=t;var s=(e=>(e[e.DEBUG=0]="DEBUG",e[e.INFO=1]="INFO",e[e.WARN=2]="WARN",e[e.ERROR=3]="ERROR",e[e.CRITICAL=4]="CRITICAL",e))(s||{});const a=class e{constructor(e){this.module=e}static configure(t){void 0!==t.level&&(e.globalLevel=t.level),void 0!==t.maxEntries&&(e.maxEntries=t.maxEntries),void 0!==t.enableConsole&&(e.enableConsole=t.enableConsole),void 0!==t.enableStorage&&(e.enableStorage=t.enableStorage)}static setLevel(t){e.globalLevel=t}debug(e,t){this.log(0,e,t)}info(e,t){this.log(1,e,t)}warn(e,t){this.log(2,e,t)}error(e,t){let i,s=t;t instanceof Error&&(i=t.stack,s={name:t.name,message:t.message,stack:t.stack}),this.log(3,e,s,i)}critical(e,t){let i,s=t;t instanceof Error&&(i=t.stack,s={name:t.name,message:t.message,stack:t.stack}),this.log(4,e,s,i)}log(t,i,s,a){if(t<e.globalLevel)return;const r={timestamp:Date.now(),level:t,module:this.module,message:i,data:s,stack:a};e.addEntry(r),e.enableConsole&&e.outputToConsole(r),e.enableStorage&&e.storeEntry(r)}static addEntry(e){this.entries.push(e),this.entries.length>this.maxEntries&&this.entries.shift()}static outputToConsole(e){const t=`[${new Date(e.timestamp).toISOString()}] [${s[e.level]}] [${e.module}]`;let i,a="";switch(e.level){case 0:i="debug",a="color: #888; font-size: 11px;";break;case 1:i="log",a="color: #0f0; font-weight: bold;";break;case 2:i="warn",a="color: #ff0; font-weight: bold;";break;case 3:i="error",a="color: #f00; font-weight: bold;";break;case 4:i="error",a="color: #f00; font-weight: bold; background: #400;";break;default:i="log"}void 0!==e.data?console[i](`%c${t} ${e.message}`,a,e.data):console[i](`%c${t} ${e.message}`,a),!e.stack||3!==e.level&&4!==e.level||(console.groupCollapsed("Stack Trace"),console.error(e.stack),console.groupEnd())}static async storeEntry(e){try{const t=localStorage.getItem("spaceExplorer_logs"),i=t?JSON.parse(t):[];i.push(e),i.length>this.maxEntries&&i.splice(0,i.length-this.maxEntries),localStorage.setItem("spaceExplorer_logs",JSON.stringify(i))}catch(t){console.warn("Failed to store log entry:",t)}}static getEntries(){return[...this.entries]}static getEntriesByLevel(e){return this.entries.filter(t=>t.level===e)}static getEntriesByModule(e){return this.entries.filter(t=>t.module===e)}static clear(){if(this.entries=[],this.enableStorage)try{localStorage.removeItem("spaceExplorer_logs")}catch(e){}}static export(){return JSON.stringify({exported:(new Date).toISOString(),platform:navigator.userAgent,entries:this.entries},null,2)}static async loadFromStorage(){try{const e=localStorage.getItem("spaceExplorer_logs");if(e){const t=JSON.parse(e);this.entries=t.slice(-this.maxEntries)}}catch(e){console.warn("Failed to load logs from storage:",e)}}createPerformanceLogger(){return{start:t=>e.performance.start(`${this.module}:${t}`),end:t=>e.performance.end(`${this.module}:${t}`,this),measure:(t,i)=>e.performance.measure(`${this.module}:${t}`,i,this),measureAsync:(t,i)=>e.performance.measureAsync(`${this.module}:${t}`,i,this)}}};a.globalLevel=1,a.entries=[],a.maxEntries=1e3,a.enableConsole=!0,a.enableStorage=!1,a.performance={timers:new Map,start(e){this.timers.set(e,performance.now())},end(e,t){const i=this.timers.get(e);if(void 0===i)return console.warn(`Timer "${e}" was not started`),0;const s=performance.now()-i;return this.timers.delete(e),t&&t.debug(`Performance: ${e} took ${s.toFixed(2)}ms`),s},measure(e,t,i){this.start(e);try{const s=t();return this.end(e,i),s}catch(s){throw this.end(e,i),s}},async measureAsync(e,t,i){this.start(e);try{const s=await t();return this.end(e,i),s}catch(s){throw this.end(e,i),s}}};let r=a;r.configure({level:1,enableConsole:!1,enableStorage:!0}),r.loadFromStorage();class n{constructor(t,i){this.gl=null,this.shaderPrograms=new Map,this.colorPalette=[],this.renderStats={drawCalls:0,triangles:0,sprites:0,particles:0},this.canvas=t,this.platform=i,this.logger=new r("Renderer");const s=t.getContext("2d");if(!s)throw new Error("Failed to get 2D rendering context");this.ctx=s,this.config={pixelRatio:window.devicePixelRatio||1,enablePixelPerfect:!0,enableDithering:!0,enableCRT:i!==e.Mobile,enablePostProcessing:i===e.Desktop,backgroundColor:"#000000"},this.logger.info("üé® Renderer initialized",{canvasSize:`${t.width}x${t.height}`,platform:i,config:this.config})}async initialize(){this.logger.info("üîß Initializing renderer...");try{this.setupPixelPerfectCanvas(),this.generateColorPalette(),(this.config.enableCRT||this.config.enablePostProcessing)&&this.initializeWebGL(),this.createRenderBuffers(),this.logger.info("‚úÖ Renderer initialization completed")}catch(e){throw this.logger.error("‚ùå Renderer initialization failed",e),e}}setupPixelPerfectCanvas(){this.ctx.imageSmoothingEnabled=!1,this.ctx.webkitImageSmoothingEnabled=!1,this.ctx.mozImageSmoothingEnabled=!1,this.ctx.msImageSmoothingEnabled=!1;const e=this.config.pixelRatio;this.canvas.style.width=`${this.canvas.width}px`,this.canvas.style.height=`${this.canvas.height}px`,this.canvas.width*=e,this.canvas.height*=e,this.ctx.scale(e,e),this.logger.debug("Canvas configured for pixel-perfect rendering",{scale:e,size:`${this.canvas.width}x${this.canvas.height}`})}generateColorPalette(){this.colorPalette=[{r:0,g:0,b:0},{r:8,g:8,b:8},{r:16,g:16,b:16},{r:24,g:24,b:24},{r:4,g:12,b:4},{r:8,g:24,b:8},{r:12,g:36,b:12},{r:16,g:48,b:16},{r:24,g:16,b:4},{r:48,g:32,b:8},{r:72,g:48,b:12},{r:96,g:64,b:16},{r:32,g:16,b:4},{r:64,g:32,b:8},{r:96,g:48,b:12},{r:128,g:64,b:16},{r:24,g:8,b:8},{r:48,g:16,b:16},{r:72,g:24,b:24},{r:96,g:32,b:32},{r:8,g:12,b:20},{r:16,g:24,b:40},{r:24,g:36,b:60},{r:32,g:48,b:80},{r:8,g:20,b:16},{r:16,g:40,b:32},{r:24,g:60,b:48},{r:32,g:80,b:64},{r:16,g:8,b:24},{r:32,g:16,b:48},{r:48,g:24,b:72},{r:64,g:32,b:96},{r:32,g:32,b:32},{r:48,g:48,b:48},{r:64,g:64,b:64},{r:80,g:80,b:80}],this.logger.debug(`Generated dark retro 16-bit color palette with ${this.colorPalette.length} colors`)}initializeWebGL(){try{this.gl=this.canvas.getContext("webgl")||this.canvas.getContext("experimental-webgl"),this.gl?this.logger.info("‚úÖ WebGL context initialized for shader effects"):(this.logger.warn("‚ö†Ô∏è WebGL not available, falling back to 2D canvas only"),this.config.enableCRT=!1,this.config.enablePostProcessing=!1)}catch(e){this.logger.warn("‚ö†Ô∏è WebGL initialization failed",e),this.gl=null,this.config.enableCRT=!1,this.config.enablePostProcessing=!1}}createRenderBuffers(){const e=this.canvas.width,t=this.canvas.height;this.backBuffer=this.ctx.createImageData(e,t),this.frontBuffer=this.ctx.createImageData(e,t),this.clearBuffer(this.backBuffer,this.hexToColor(this.config.backgroundColor)),this.logger.debug("Render buffers created",{width:e,height:t})}beginFrame(){this.renderStats.drawCalls=0,this.renderStats.triangles=0,this.renderStats.sprites=0,this.renderStats.particles=0,this.ctx.fillStyle=this.config.backgroundColor,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.clearBuffer(this.backBuffer,this.hexToColor(this.config.backgroundColor))}endFrame(){this.config.enableDithering&&this.applyDithering(this.backBuffer),this.ctx.putImageData(this.backBuffer,0,0),this.config.enableCRT&&this.gl&&this.applyCRTEffect(),this.renderStats.drawCalls++}clearBuffer(e,t){const i=e.data;for(let s=0;s<i.length;s+=4)i[s]=t.r,i[s+1]=t.g,i[s+2]=t.b,i[s+3]=void 0!==t.a?t.a:255}setPixel(e,t,i){if(e=Math.floor(e),t=Math.floor(t),e<0||e>=this.canvas.width||t<0||t>=this.canvas.height)return;const s=4*(t*this.canvas.width+e),a=this.backBuffer.data;a[s]=i.r,a[s+1]=i.g,a[s+2]=i.b,a[s+3]=void 0!==i.a?i.a:255}fillRect(e,t,i,s,a){for(let r=t;r<t+s;r++)for(let t=e;t<e+i;t++)this.setPixel(t,r,a);this.renderStats.drawCalls++}drawLine(e,t,i,s,a){e=Math.floor(e),t=Math.floor(t),i=Math.floor(i),s=Math.floor(s);const r=Math.abs(i-e),n=Math.abs(s-t),o=e<i?1:-1,c=t<s?1:-1;let l=r-n,h=e,d=t;for(;this.setPixel(h,d,a),h!==i||d!==s;){const e=2*l;e>-n&&(l-=n,h+=o),e<r&&(l+=r,d+=c)}this.renderStats.drawCalls++}drawCircle(e,t,i,s,a=!1){if(e=Math.floor(e),t=Math.floor(t),i=Math.floor(i),a)for(let r=-i;r<=i;r++)for(let a=-i;a<=i;a++)a*a+r*r<=i*i&&this.setPixel(e+a,t+r,s);else{let a=0,r=i,n=3-2*i;for(;r>=a;)this.setPixel(e+a,t+r,s),this.setPixel(e-a,t+r,s),this.setPixel(e+a,t-r,s),this.setPixel(e-a,t-r,s),this.setPixel(e+r,t+a,s),this.setPixel(e-r,t+a,s),this.setPixel(e+r,t-a,s),this.setPixel(e-r,t-a,s),a++,n>0?(r--,n=n+4*(a-r)+10):n=n+4*a+6}this.renderStats.drawCalls++}renderText(e,t,i,s,a=12){this.ctx.save(),this.ctx.font=`${a}px "Courier New", monospace`,this.ctx.fillStyle=this.colorToHex(s),this.ctx.textBaseline="top",this.ctx.shadowColor=this.colorToHex(s),this.ctx.shadowBlur=2,this.ctx.fillText(e,t,i),this.ctx.restore(),this.renderStats.drawCalls++}renderDebugText(e,t,i){const s={r:0,g:255,b:0},a=8*Math.max(...e.map(e=>e.length));this.fillRect(t-2,i-2,a+4,14*e.length+4,{r:0,g:0,b:0,a:128}),e.forEach((e,a)=>{this.renderText(e,t,i+14*a,s,12)})}generateShipSprite(e,t=32){const i=this.ctx.createImageData(t,t),s=i.data;for(let o=0;o<s.length;o+=4)s[o+3]=0;let a;switch(e){case"player":a={r:0,g:255,b:0};break;case"enemy":a={r:255,g:0,b:0};break;case"ally":a={r:0,g:128,b:255}}const r=t/2,n=t/2;for(let o=0;o<t;o++)for(let e=0;e<t;e++){const i=e-r,c=o-n;if(c>.8*-n&&c<.6*n){const r=.3*(.8*n+c);if(Math.abs(i)<r){const i=4*(o*t+e);s[i]=a.r,s[i+1]=a.g,s[i+2]=a.b,s[i+3]=255}}}return this.renderStats.sprites++,{data:i,width:t,height:t}}drawSprite(e,t,i){this.ctx.putImageData(e.data,t,i),this.renderStats.sprites++}applyDithering(e){if(!this.config.enableDithering)return;const t=e.data,i=e.width,s=e.height;for(let a=0;a<s-1;a++)for(let e=1;e<i-1;e++){const s=4*(a*i+e),r=t[s],n=t[s+1],o=t[s+2],c=this.findNearestPaletteColor({r:r,g:n,b:o});t[s]=c.r,t[s+1]=c.g,t[s+2]=c.b;const l=r-c.r,h=n-c.g,d=o-c.b;this.distributeError(t,i,e+1,a,l,h,d,7/16),this.distributeError(t,i,e-1,a+1,l,h,d,3/16),this.distributeError(t,i,e,a+1,l,h,d,5/16),this.distributeError(t,i,e+1,a+1,l,h,d,1/16)}}distributeError(e,t,i,s,a,r,n,o){const c=4*(s*t+i);c>=0&&c<e.length-3&&(e[c]=Math.max(0,Math.min(255,e[c]+a*o)),e[c+1]=Math.max(0,Math.min(255,e[c+1]+r*o)),e[c+2]=Math.max(0,Math.min(255,e[c+2]+n*o)))}findNearestPaletteColor(e){let t=this.colorPalette[0],i=Number.MAX_VALUE;for(const s of this.colorPalette){const a=Math.sqrt(Math.pow(e.r-s.r,2)+Math.pow(e.g-s.g,2)+Math.pow(e.b-s.b,2));a<i&&(i=a,t=s)}return t}applyCRTEffect(){this.logger.debug("CRT effect applied (CSS-based)")}handleResize(){this.createRenderBuffers(),this.logger.debug("Renderer resized")}hexToColor(e){const t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:{r:0,g:0,b:0}}colorToHex(e){const t=e=>{const t=Math.round(e).toString(16);return 1===t.length?"0"+t:t};return`#${t(e.r)}${t(e.g)}${t(e.b)}`}getRenderStats(){return{...this.renderStats}}cleanup(){this.gl&&(this.shaderPrograms.forEach(e=>{this.gl.deleteProgram(e)}),this.shaderPrograms.clear()),this.logger.info("üßπ Renderer cleanup completed")}}class o{constructor(e,t){this.gamepads=new Map,this.touchZones=new Map,this.activeTouches=new Map,this.config={enableKeyboard:!0,enableMouse:!0,enableTouch:!0,enableGamepad:!0,touchSensitivity:1,keyRepeatDelay:250,keyRepeatRate:50},this.eventListeners=[],this.canvas=e,this.platform=t,this.logger=new r("InputManager"),this.currentState=this.createEmptyInputState(),this.previousState=this.createEmptyInputState(),this.configureForPlatform(),this.setupEventListeners(),this.config.enableTouch&&this.setupTouchZones(),this.logger.info("üéÆ Input manager initialized",{platform:t,config:this.config})}configureForPlatform(){switch(this.platform){case e.Desktop:case e.Tauri:this.config.enableKeyboard=!0,this.config.enableMouse=!0,this.config.enableTouch=!1,this.config.enableGamepad=!0;break;case e.Mobile:case e.Cordova:this.config.enableKeyboard=!1,this.config.enableMouse=!1,this.config.enableTouch=!0,this.config.enableGamepad=!1,this.config.touchSensitivity=1.5;break;case e.Web:this.config.enableKeyboard=!0,this.config.enableMouse=!0,this.config.enableTouch="ontouchstart"in window,this.config.enableGamepad="getGamepads"in navigator}}setupEventListeners(){if(this.config.enableKeyboard){const e=e=>this.handleKeyDown(e),t=e=>this.handleKeyUp(e);document.addEventListener("keydown",e),document.addEventListener("keyup",t),this.eventListeners.push(()=>{document.removeEventListener("keydown",e),document.removeEventListener("keyup",t)})}if(this.config.enableMouse){const e=e=>this.handleMouseMove(e),t=e=>this.handleMouseDown(e),i=e=>this.handleMouseUp(e),s=e=>this.handleWheel(e);this.canvas.addEventListener("mousemove",e),this.canvas.addEventListener("mousedown",t),this.canvas.addEventListener("mouseup",i),this.canvas.addEventListener("wheel",s),this.eventListeners.push(()=>{this.canvas.removeEventListener("mousemove",e),this.canvas.removeEventListener("mousedown",t),this.canvas.removeEventListener("mouseup",i),this.canvas.removeEventListener("wheel",s)})}if(this.config.enableTouch){const e=e=>this.handleTouchStart(e),t=e=>this.handleTouchMove(e),i=e=>this.handleTouchEnd(e);this.canvas.addEventListener("touchstart",e,{passive:!1}),this.canvas.addEventListener("touchmove",t,{passive:!1}),this.canvas.addEventListener("touchend",i,{passive:!1}),this.eventListeners.push(()=>{this.canvas.removeEventListener("touchstart",e),this.canvas.removeEventListener("touchmove",t),this.canvas.removeEventListener("touchend",i)})}if(this.config.enableGamepad){const e=e=>this.handleGamepadConnected(e),t=e=>this.handleGamepadDisconnected(e);window.addEventListener("gamepadconnected",e),window.addEventListener("gamepaddisconnected",t),this.eventListeners.push(()=>{window.removeEventListener("gamepadconnected",e),window.removeEventListener("gamepaddisconnected",t)})}const e=()=>this.handleFocus(),t=()=>this.handleBlur();window.addEventListener("focus",e),window.addEventListener("blur",t),this.eventListeners.push(()=>{window.removeEventListener("focus",e),window.removeEventListener("blur",t)})}setupTouchZones(){const e=this.canvas.getBoundingClientRect();this.touchZones.set("thrust",{x:0,y:0,width:e.width/2,height:e.height,type:"joystick"}),this.touchZones.set("rotation",{x:e.width/2,y:0,width:e.width/2,height:e.height,type:"joystick"}),this.logger.debug("Touch zones configured for mobile controls")}update(e){this.previousState=this.deepCopyInputState(this.currentState),this.currentState.keysPressed.clear(),this.currentState.keysReleased.clear(),this.currentState.mouseButtonsPressed.clear(),this.currentState.mouseButtonsReleased.clear(),this.currentState.mouseWheel=0,this.currentState.touchStarted=!1,this.currentState.touchEnded=!1,this.config.enableGamepad&&this.updateGamepadState(),this.config.enableTouch&&this.updateVirtualControls()}handleKeyDown(e){const t=e.code;this.currentState.keys.has(t)||(this.currentState.keysPressed.add(t),this.logger.debug(`Key pressed: ${t}`)),this.currentState.keys.add(t),this.isGameKey(t)&&e.preventDefault()}handleKeyUp(e){const t=e.code;this.currentState.keys.has(t)&&(this.currentState.keysReleased.add(t),this.logger.debug(`Key released: ${t}`)),this.currentState.keys.delete(t),this.isGameKey(t)&&e.preventDefault()}handleMouseMove(e){const t=this.canvas.getBoundingClientRect();this.currentState.mousePosition={x:e.clientX-t.left,y:e.clientY-t.top}}handleMouseDown(e){const t=e.button;this.currentState.mouseButtons.has(t)||this.currentState.mouseButtonsPressed.add(t),this.currentState.mouseButtons.add(t),e.preventDefault()}handleMouseUp(e){const t=e.button;this.currentState.mouseButtons.has(t)&&this.currentState.mouseButtonsReleased.add(t),this.currentState.mouseButtons.delete(t),e.preventDefault()}handleWheel(e){this.currentState.mouseWheel=e.deltaY,e.preventDefault()}handleTouchStart(e){this.currentState.touchStarted=!0,this.currentState.touches=Array.from(e.touches);for(let t=0;t<e.changedTouches.length;t++){const i=e.changedTouches[t];this.activeTouches.set(i.identifier,{id:i.identifier,startPosition:{x:i.clientX,y:i.clientY},currentPosition:{x:i.clientX,y:i.clientY},zone:this.getTouchZone(i.clientX,i.clientY)})}e.preventDefault()}handleTouchMove(e){this.currentState.touches=Array.from(e.touches);for(let t=0;t<e.changedTouches.length;t++){const i=e.changedTouches[t],s=this.activeTouches.get(i.identifier);s&&(s.currentPosition={x:i.clientX,y:i.clientY})}e.preventDefault()}handleTouchEnd(e){this.currentState.touchEnded=!0,this.currentState.touches=Array.from(e.touches);for(let t=0;t<e.changedTouches.length;t++){const i=e.changedTouches[t];this.activeTouches.delete(i.identifier)}e.preventDefault()}handleGamepadConnected(e){this.logger.info(`Gamepad connected: ${e.gamepad.id}`),this.gamepads.set(e.gamepad.index,{connected:!0,axes:[],buttons:[]})}handleGamepadDisconnected(e){this.logger.info(`Gamepad disconnected: ${e.gamepad.id}`),this.gamepads.delete(e.gamepad.index)}updateGamepadState(){const e=navigator.getGamepads();for(let t=0;t<e.length;t++){const i=e[t];if(i&&this.gamepads.has(t)){const e=this.gamepads.get(t);e.axes=Array.from(i.axes),e.buttons=i.buttons.map(e=>e.pressed)}}}updateVirtualControls(){this.currentState.virtualThrust=0,this.currentState.virtualRotation=0,this.currentState.virtualAction=!1;for(const[e,t]of this.activeTouches){const e=t.currentPosition.x-t.startPosition.x,i=t.currentPosition.y-t.startPosition.y;"thrust"===t.zone?(this.currentState.virtualThrust=-i/100*this.config.touchSensitivity,this.currentState.virtualThrust=Math.max(-1,Math.min(1,this.currentState.virtualThrust))):"rotation"===t.zone&&(this.currentState.virtualRotation=e/100*this.config.touchSensitivity,this.currentState.virtualRotation=Math.max(-1,Math.min(1,this.currentState.virtualRotation)))}}handleFocus(){this.logger.debug("Window focused - input enabled")}handleBlur(){this.currentState.keys.clear(),this.currentState.mouseButtons.clear(),this.activeTouches.clear(),this.logger.debug("Window blurred - input cleared")}createEmptyInputState(){return{keys:new Set,keysPressed:new Set,keysReleased:new Set,mousePosition:{x:0,y:0},mouseButtons:new Set,mouseButtonsPressed:new Set,mouseButtonsReleased:new Set,mouseWheel:0,touches:[],touchStarted:!1,touchEnded:!1,virtualThrust:0,virtualRotation:0,virtualAction:!1}}deepCopyInputState(e){return{keys:new Set(e.keys),keysPressed:new Set,keysReleased:new Set,mousePosition:{...e.mousePosition},mouseButtons:new Set(e.mouseButtons),mouseButtonsPressed:new Set,mouseButtonsReleased:new Set,mouseWheel:0,touches:[...e.touches],touchStarted:!1,touchEnded:!1,virtualThrust:e.virtualThrust,virtualRotation:e.virtualRotation,virtualAction:e.virtualAction}}isGameKey(e){return["ArrowUp","ArrowDown","ArrowLeft","ArrowRight","KeyW","KeyA","KeyS","KeyD","Space","Enter","Escape"].includes(e)}getTouchZone(e,t){for(const[i,s]of this.touchZones)if(e>=s.x&&e<s.x+s.width&&t>=s.y&&t<s.y+s.height)return i;return null}isKeyDown(e){return this.currentState.keys.has(e)}isKeyPressed(e){return this.currentState.keysPressed.has(e)}isKeyReleased(e){return this.currentState.keysReleased.has(e)}isMouseButtonDown(e){return this.currentState.mouseButtons.has(e)}isMouseButtonPressed(e){return this.currentState.mouseButtonsPressed.has(e)}getMousePosition(){return{...this.currentState.mousePosition}}getMouseWheel(){return this.currentState.mouseWheel}getTouchCount(){return this.currentState.touches.length}getVirtualThrust(){return this.currentState.virtualThrust}getVirtualRotation(){return this.currentState.virtualRotation}getThrustInput(){if(this.config.enableTouch)return this.currentState.virtualThrust;let e=0;(this.isKeyDown("ArrowUp")||this.isKeyDown("KeyW"))&&(e+=1),(this.isKeyDown("ArrowDown")||this.isKeyDown("KeyS"))&&(e-=1);for(const t of this.gamepads.values())t.connected&&t.axes.length>1&&(e+=-t.axes[1]);return Math.max(-1,Math.min(1,e))}getRotationInput(){if(this.config.enableTouch)return this.currentState.virtualRotation;let e=0;(this.isKeyDown("ArrowLeft")||this.isKeyDown("KeyA"))&&(e-=1),(this.isKeyDown("ArrowRight")||this.isKeyDown("KeyD"))&&(e+=1);for(const t of this.gamepads.values())t.connected&&t.axes.length>0&&(e+=t.axes[0]);return Math.max(-1,Math.min(1,e))}isActionPressed(){return this.isKeyPressed("Space")||this.isMouseButtonPressed(0)||this.currentState.virtualAction}isPausePressed(){return this.isKeyPressed("Escape")||this.isKeyPressed("KeyP")}cleanup(){this.eventListeners.forEach(e=>e()),this.eventListeners=[],this.activeTouches.clear(),this.gamepads.clear(),this.logger.info("üßπ Input manager cleanup completed")}}class c{constructor(){this.objects=new Map,this.gravityWells=new Map,this.GRAVITATIONAL_CONSTANT=667e-13,this.SPACE_DRAG=.999,this.MIN_VELOCITY=.01,this.MAX_VELOCITY=1e3,this.collisionPairs=[],this.logger=new r("SpacePhysics"),this.logger.info("üåå Space physics engine initialized")}addObject(e){this.objects.set(e.id,e),this.logger.debug(`Added physics object: ${e.id} (${e.type})`)}removeObject(e){const t=this.objects.delete(e);return t&&this.logger.debug(`Removed physics object: ${e}`),t}getObject(e){return this.objects.get(e)}addGravityWell(e,t){this.gravityWells.set(e,t),this.logger.debug(`Added gravity well: ${e}`)}removeGravityWell(e){return this.gravityWells.delete(e)}update(e){e=Math.min(e,1/30),this.collisionPairs=[];for(const t of this.objects.values())t.isStatic||this.updateObject(t,e);this.detectCollisions(),this.resolveCollisions()}updateObject(e,t){e.acceleration={x:0,y:0},this.applyGravity(e),this.applyDrag(e),e.velocity.x+=e.acceleration.x*t,e.velocity.y+=e.acceleration.y*t;const i=this.getVectorMagnitude(e.velocity);if(i>this.MAX_VELOCITY){const t=this.MAX_VELOCITY/i;e.velocity.x*=t,e.velocity.y*=t}i<this.MIN_VELOCITY&&(e.velocity={x:0,y:0}),e.position.x+=e.velocity.x*t,e.position.y+=e.velocity.y*t}applyGravity(e){for(const t of this.gravityWells.values()){const i=t.position.x-e.position.x,s=t.position.y-e.position.y,a=i*i+s*s,r=Math.sqrt(a);if(r<.1*t.radius)continue;const n=this.GRAVITATIONAL_CONSTANT*t.mass*e.mass/a,o=i/r*n,c=s/r*n;e.acceleration.x+=o/e.mass,e.acceleration.y+=c/e.mass}}applyDrag(e){e.velocity.x*=this.SPACE_DRAG*e.drag,e.velocity.y*=this.SPACE_DRAG*e.drag}detectCollisions(){const e=Array.from(this.objects.values());for(let t=0;t<e.length;t++)for(let i=t+1;i<e.length;i++){const s=e[t],a=e[i],r=this.checkCollision(s,a);r&&this.collisionPairs.push(r)}}checkCollision(e,t){const i=t.position.x-e.position.x,s=t.position.y-e.position.y,a=Math.sqrt(i*i+s*s),r=e.radius+t.radius;if(a<r){return{objectA:e,objectB:t,penetration:r-a,normal:a>0?{x:i/a,y:s/a}:{x:1,y:0},point:{x:e.position.x+i*(e.radius/r),y:e.position.y+s*(e.radius/r)}}}return null}resolveCollisions(){for(const e of this.collisionPairs)this.resolveCollision(e),e.objectA.onCollision&&e.objectA.onCollision(e.objectB),e.objectB.onCollision&&e.objectB.onCollision(e.objectA)}resolveCollision(e){const{objectA:t,objectB:i,penetration:s,normal:a}=e;if(t.isStatic||i.isStatic)t.isStatic?i.isStatic||(i.position.x+=a.x*s,i.position.y+=a.y*s):(t.position.x-=a.x*s,t.position.y-=a.y*s);else{const e=.5*s,r=.5*s;t.position.x-=a.x*e,t.position.y-=a.y*e,i.position.x+=a.x*r,i.position.y+=a.y*r}const r=i.velocity.x-t.velocity.x,n=i.velocity.y-t.velocity.y,o=r*a.x+n*a.y;if(o>0)return;let c=-(1+Math.min(t.restitution,i.restitution))*o;t.isStatic||i.isStatic||(c/=1/t.mass+1/i.mass);const l=c*a.x,h=c*a.y;t.isStatic||(t.velocity.x-=l/t.mass,t.velocity.y-=h/t.mass),i.isStatic||(i.velocity.x+=l/i.mass,i.velocity.y+=h/i.mass)}applyThrust(e,t,i){const s=this.objects.get(e);if(!s||s.isStatic)return;const a=this.getVectorMagnitude(t);if(0===a)return;const r=t.x/a,n=t.y/a;s.acceleration.x+=r*i/s.mass,s.acceleration.y+=n*i/s.mass}calculateOrbitalVelocity(e,t){return Math.sqrt(this.GRAVITATIONAL_CONSTANT*t/e)}calculateEscapeVelocity(e,t){return Math.sqrt(2*this.GRAVITATIONAL_CONSTANT*t/e)}getObjectsInRadius(e,t){const i=[];for(const s of this.objects.values()){this.getDistance(e,s.position)<=t&&i.push(s)}return i}raycast(e,t,i){const s=this.normalizeVector(t);for(let a=0;a<i;a+=1){const t={x:e.x+s.x*a,y:e.y+s.y*a};for(const e of this.objects.values()){if(this.getDistance(t,e.position)<=e.radius)return e}}return null}getVectorMagnitude(e){return Math.sqrt(e.x*e.x+e.y*e.y)}normalizeVector(e){const t=this.getVectorMagnitude(e);return 0===t?{x:0,y:0}:{x:e.x/t,y:e.y/t}}getDistance(e,t){const i=t.x-e.x,s=t.y-e.y;return Math.sqrt(i*i+s*s)}getStats(){return{objectCount:this.objects.size,gravityWellCount:this.gravityWells.size,collisionCount:this.collisionPairs.length,activeObjects:Array.from(this.objects.values()).filter(e=>!e.isStatic).length}}getObjectCount(){return this.objects.size}getAllObjects(){return Array.from(this.objects.values())}clear(){this.objects.clear(),this.gravityWells.clear(),this.collisionPairs=[],this.logger.debug("Physics simulation cleared")}createShip(e,t,i=1e3){return{id:e,position:{...t},velocity:{x:0,y:0},acceleration:{x:0,y:0},mass:i,radius:16,isStatic:!1,type:"ship",drag:.999,restitution:.3,friction:.1,health:100}}createPlanet(e,t,i,s){return{id:e,position:{...t},velocity:{x:0,y:0},acceleration:{x:0,y:0},mass:i,radius:s,isStatic:!0,type:"planet",drag:1,restitution:.1,friction:.9}}createProjectile(e,t,i,s=1){return{id:e,position:{...t},velocity:{...i},acceleration:{x:0,y:0},mass:s,radius:2,isStatic:!1,type:"projectile",drag:1,restitution:.8,friction:0}}}class l{constructor(t){this.context=null,this.masterGain=null,this.musicGain=null,this.sfxGain=null,this.soundEffects=new Map,this.activeSources=new Map,this.musicTrack=null,this.ambientTrack=null,this.synthNodes=new Map,this.isInitialized=!1,this.platform=t,this.logger=new r("AudioEngine"),this.config={masterVolume:1,musicVolume:.7,sfxVolume:.8,enableSpatialAudio:t===e.Desktop,maxChannels:t===e.Mobile?8:16,sampleRate:44100},this.logger.info("üîä Audio engine created",{platform:t,config:this.config})}async initialize(){this.logger.info("üîß Initializing audio engine...");try{this.context=new(window.AudioContext||window.webkitAudioContext)({sampleRate:this.config.sampleRate}),"suspended"===this.context.state&&(this.logger.info("Audio context suspended, will resume on user interaction"),this.setupUserInteractionHandler()),this.masterGain=this.context.createGain(),this.musicGain=this.context.createGain(),this.sfxGain=this.context.createGain(),this.musicGain.connect(this.masterGain),this.sfxGain.connect(this.masterGain),this.masterGain.connect(this.context.destination),this.setMasterVolume(this.config.masterVolume),this.setMusicVolume(this.config.musicVolume),this.setSfxVolume(this.config.sfxVolume),await this.generateBasicSounds(),this.isInitialized=!0,this.logger.info("‚úÖ Audio engine initialized successfully")}catch(e){throw this.logger.error("‚ùå Audio engine initialization failed",e),e}}setupUserInteractionHandler(){const e=async()=>{this.context&&"suspended"===this.context.state&&(await this.context.resume(),this.logger.info("Audio context resumed"),document.removeEventListener("click",e),document.removeEventListener("keydown",e),document.removeEventListener("touchstart",e))};document.addEventListener("click",e,{once:!0}),document.addEventListener("keydown",e,{once:!0}),document.addEventListener("touchstart",e,{once:!0})}async generateBasicSounds(){if(!this.context)return;const e=this.generateEngineSound(1);this.soundEffects.set("engine_thrust",{id:"engine_thrust",buffer:e,loop:!0,volume:.6,pitch:1,type:"engine"});const t=this.generateLaserSound();this.soundEffects.set("weapon_laser",{id:"weapon_laser",buffer:t,loop:!1,volume:.8,pitch:1,type:"weapon"});const i=this.generateExplosionSound();this.soundEffects.set("explosion",{id:"explosion",buffer:i,loop:!1,volume:1,pitch:1,type:"explosion"});const s=this.generateBeepSound(800,.1);this.soundEffects.set("ui_beep",{id:"ui_beep",buffer:s,loop:!1,volume:.5,pitch:1,type:"ui"}),this.logger.debug("Generated basic sound effects")}generateEngineSound(e){if(!this.context)throw new Error("Audio context not initialized");const t=this.context.sampleRate,i=Math.floor(t*e),s=this.context.createBuffer(1,i,t),a=s.getChannelData(0);for(let r=0;r<i;r++){const e=r/t,i=60+10*Math.sin(5*e),s=.5*Math.sin(2*Math.PI*i*e),n=.3*Math.sin(2*Math.PI*i*2*e),o=.2*Math.sin(2*Math.PI*i*3*e),c=.1*(Math.random()-.5);a[r]=.3*(s+n+o+c)}return s}generateLaserSound(){if(!this.context)throw new Error("Audio context not initialized");const e=this.context.sampleRate,t=Math.floor(.2*e),i=this.context.createBuffer(1,t,e),s=i.getChannelData(0);for(let a=0;a<t;a++){const t=a/e,i=t/.2,r=1200-800*i,n=Math.exp(8*-i);s[a]=Math.sin(2*Math.PI*r*t)*n*.5}return i}generateExplosionSound(){if(!this.context)throw new Error("Audio context not initialized");const e=this.context.sampleRate,t=Math.floor(1*e),i=this.context.createBuffer(1,t,e),s=i.getChannelData(0);for(let a=0;a<t;a++){const t=a/e,i=t/1,r=i<.1?10*i:Math.exp(5*-(i-.1)),n=2*(Math.random()-.5),o=.5*Math.sin(2*Math.PI*40*t);s[a]=(.7*n+.3*o)*r*.6}return i}generateBeepSound(e,t){if(!this.context)throw new Error("Audio context not initialized");const i=this.context.sampleRate,s=Math.floor(i*t),a=this.context.createBuffer(1,s,i),r=a.getChannelData(0);for(let n=0;n<s;n++){const t=n/i,s=Math.exp(10*-t);r[n]=Math.sin(2*Math.PI*e*t)*s*.4}return a}playSfx(e,t,i=1,s=1){if(!this.isInitialized||!this.context)return this.logger.warn("Audio engine not initialized, cannot play sound"),null;const a=this.soundEffects.get(e);if(!a)return this.logger.warn(`Sound effect not found: ${e}`),null;try{const r=this.context.createBufferSource(),n=this.context.createGain(),o=`${e}_${Date.now()}_${Math.random()}`;let c;r.buffer=a.buffer,r.loop=a.loop,r.playbackRate.value=i,n.gain.value=a.volume*s,r.connect(n),this.config.enableSpatialAudio&&t?(c=this.context.createPanner(),c.panningModel="HRTF",c.distanceModel="inverse",c.refDistance=100,c.maxDistance=1e3,c.rolloffFactor=1,c.positionX.value=t.x,c.positionY.value=t.y,c.positionZ.value=0,n.connect(c),c.connect(this.sfxGain)):n.connect(this.sfxGain);const l={id:o,node:r,gainNode:n,pannerNode:c,position:t,isPlaying:!0,loop:a.loop,startTime:this.context.currentTime};return this.activeSources.set(o,l),r.onended=()=>{this.activeSources.delete(o)},r.start(),this.logger.debug(`Playing sound: ${e} (${o})`),o}catch(r){return this.logger.error(`Failed to play sound: ${e}`,r),null}}stopSound(e){const t=this.activeSources.get(e);if(t&&t.isPlaying)try{t.node.stop(),t.isPlaying=!1,this.activeSources.delete(e),this.logger.debug(`Stopped sound: ${e}`)}catch(i){this.logger.error(`Failed to stop sound: ${e}`,i)}}updateSpatialAudio(e,t){const i=this.activeSources.get(e);i&&i.pannerNode&&(i.pannerNode.positionX.value=t.x,i.pannerNode.positionY.value=t.y,i.position=t)}setListenerPosition(e,t=0){if(!this.context||!this.config.enableSpatialAudio)return;const i=this.context.listener;i.positionX&&(i.positionX.value=e.x,i.positionY.value=e.y,i.positionZ.value=0,i.forwardX.value=Math.cos(t),i.forwardY.value=Math.sin(t),i.forwardZ.value=0,i.upX.value=0,i.upY.value=0,i.upZ.value=1)}setMasterVolume(e){this.config.masterVolume=Math.max(0,Math.min(1,e)),this.masterGain&&(this.masterGain.gain.value=this.config.masterVolume)}setMusicVolume(e){this.config.musicVolume=Math.max(0,Math.min(1,e)),this.musicGain&&(this.musicGain.gain.value=this.config.musicVolume)}setSfxVolume(e){this.config.sfxVolume=Math.max(0,Math.min(1,e)),this.sfxGain&&(this.sfxGain.gain.value=this.config.sfxVolume)}playEngineSound(){return this.playSfx("engine_thrust",void 0,1,.6)}playLaserSound(e){return this.playSfx("weapon_laser",e,1+.2*(Math.random()-.5))}playExplosion(e){return this.playSfx("explosion",e,1,.8)}playUIBeep(){return this.playSfx("ui_beep")}update(e){for(const[t,i]of this.activeSources)i.isPlaying||i.loop||this.activeSources.delete(t)}pauseAll(){this.context&&"running"===this.context.state&&(this.context.suspend(),this.logger.debug("Audio paused"))}resumeAll(){this.context&&"suspended"===this.context.state&&(this.context.resume(),this.logger.debug("Audio resumed"))}stopAll(){for(const[t,i]of this.activeSources)if(i.isPlaying)try{i.node.stop()}catch(e){}this.activeSources.clear(),this.logger.debug("All audio stopped")}getStats(){return{isInitialized:this.isInitialized,contextState:this.context?.state||"none",activeSources:this.activeSources.size,soundEffects:this.soundEffects.size,config:{...this.config}}}cleanup(){this.stopAll(),this.context&&this.context.close(),this.soundEffects.clear(),this.synthNodes.clear(),this.logger.info("üßπ Audio engine cleanup completed")}}var h=(e=>(e.Engine="engine",e.Laser="laser",e.Explosion="explosion",e.Beep="beep",e.Warning="warning",e.Warp="warp",e.Shield="shield",e.Impact="impact",e.Communication="communication",e.Ambient="ambient",e.UI="ui",e.Thrust="thrust",e))(h||{});class d{constructor(e={}){this.audioContext=null,this.masterGain=null,this.soundEffectsGain=null,this.musicGain=null,this.currentTrack=null,this.ambientLayers=new Map,this.activeSounds=new Set,this.noiseBuffer=null,this.convolver=null,this.reverbBuffer=null,this.masterVolume=.7,this.musicVolume=.5,this.sfxVolume=.8,this.logger=new r("ProceduralAudio"),this.events=e}async initialize(){try{this.audioContext=new(window.AudioContext||window.webkitAudioContext),"suspended"===this.audioContext.state&&await this.audioContext.resume(),this.masterGain=this.audioContext.createGain(),this.soundEffectsGain=this.audioContext.createGain(),this.musicGain=this.audioContext.createGain(),this.soundEffectsGain.connect(this.masterGain),this.musicGain.connect(this.masterGain),this.masterGain.connect(this.audioContext.destination),this.masterGain.gain.value=this.masterVolume,this.soundEffectsGain.gain.value=this.sfxVolume,this.musicGain.gain.value=this.musicVolume,await this.createNoiseBuffer(),await this.createReverbBuffer(),this.logger.info("üîä Procedural audio system initialized")}catch(e){this.logger.error("Failed to initialize audio system",e),this.events.onAudioError?.(e)}}async createNoiseBuffer(){if(!this.audioContext)return;const e=2*this.audioContext.sampleRate;this.noiseBuffer=this.audioContext.createBuffer(1,e,this.audioContext.sampleRate);const t=this.noiseBuffer.getChannelData(0);for(let i=0;i<e;i++)t[i]=2*Math.random()-1}async createReverbBuffer(){if(!this.audioContext)return;const e=3*this.audioContext.sampleRate;this.reverbBuffer=this.audioContext.createBuffer(2,e,this.audioContext.sampleRate);for(let t=0;t<2;t++){const i=this.reverbBuffer.getChannelData(t);for(let t=0;t<e;t++){const s=Math.pow(1-t/e,2);i[t]=(2*Math.random()-1)*s}}this.convolver=this.audioContext.createConvolver(),this.convolver.buffer=this.reverbBuffer}playSound(e){if(this.audioContext&&this.soundEffectsGain)try{const t=this.audioContext.currentTime;let i,s,a,r,n;i="white"===e.waveform?this.createNoiseSource():this.createOscillatorSource(e),s=this.audioContext.createGain(),s.gain.value=0,e.filter&&(a=this.audioContext.createBiquadFilter(),a.type=e.filter.type,a.frequency.value=e.filter.frequency,a.Q.value=e.filter.resonance),e.distortion&&e.distortion>0&&(r=this.createDistortion(e.distortion)),e.position&&(n=this.audioContext.createPanner(),n.panningModel="HRTF",n.positionX.value=e.position.x,n.positionY.value=e.position.y,n.positionZ.value=e.position.z,n.maxDistance=e.maxDistance||1e3);let o=i;a&&(o.connect(a),o=a),r&&(o.connect(r),o=r),o.connect(s),n?(s.connect(n),n.connect(this.soundEffectsGain)):s.connect(this.soundEffectsGain),this.applyEnvelope(s.gain,e,t),e.frequencyModulation&&i instanceof OscillatorNode&&this.applyFrequencyModulation(i,e.frequencyModulation,t),i.start(t),i.stop(t+e.duration),this.activeSounds.add(i),i.addEventListener("ended",()=>{this.activeSounds.delete(i)}),this.events.onSoundPlayed?.(e.type,e)}catch(t){this.logger.error("Failed to play sound",t)}else this.logger.warn("Audio system not initialized")}createOscillatorSource(e){const t=this.audioContext.createOscillator();return t.type=e.waveform,t.frequency.value=e.frequency,e.harmonics&&e.harmonics.forEach((t,i)=>{if(t>0){const s=this.audioContext.createOscillator(),a=this.audioContext.createGain();s.type=e.waveform,s.frequency.value=e.frequency*(i+2),a.gain.value=t,s.connect(a)}}),t}createNoiseSource(){const e=this.audioContext.createBufferSource();return e.buffer=this.noiseBuffer,e.loop=!0,e}createDistortion(e){const t=this.audioContext.createWaveShaper(),i=44100,s=new Float32Array(i),a=Math.PI/180;for(let r=0;r<i;r++){const t=2*r/i-1;s[r]=(3+e)*t*20*a/(Math.PI+e*Math.abs(t))}return t.curve=s,t.oversample="4x",t}applyEnvelope(e,t,i){const{attack:s,decay:a,sustain:r,release:n,volume:o,duration:c}=t;e.setValueAtTime(0,i),e.linearRampToValueAtTime(o,i+s),e.linearRampToValueAtTime(o*r,i+s+a);const l=Math.max(i+s+a,i+c-n);e.setValueAtTime(o*r,l),e.linearRampToValueAtTime(0,i+c)}applyFrequencyModulation(e,t,i){const s=this.audioContext.createOscillator(),a=this.audioContext.createGain();s.type=t.waveform,s.frequency.value=t.rate,a.gain.value=t.depth,s.connect(a),a.connect(e.frequency),s.start(i),s.stop(i+10)}playRetroSound(e,t=1){const i={engine:{type:"engine",frequency:60+40*t,duration:.5,volume:.3*t,waveform:"sawtooth",attack:.1,decay:.1,sustain:.7,release:.3,filter:{type:"lowpass",frequency:800+400*t,resonance:2}},laser:{type:"laser",frequency:800,duration:.15,volume:.4*t,waveform:"square",attack:.01,decay:.05,sustain:.3,release:.09,frequencyModulation:{rate:30,depth:200,waveform:"sine"}},explosion:{type:"explosion",frequency:120,duration:.8,volume:.6*t,waveform:"white",attack:.01,decay:.3,sustain:.2,release:.49,filter:{type:"lowpass",frequency:2e3-500*t,resonance:1},distortion:.5},beep:{type:"beep",frequency:1e3,duration:.1,volume:.3*t,waveform:"square",attack:.01,decay:.02,sustain:.8,release:.07},warning:{type:"warning",frequency:800,duration:.5,volume:.5*t,waveform:"square",attack:.05,decay:.1,sustain:.6,release:.35,frequencyModulation:{rate:8,depth:100,waveform:"triangle"}},warp:{type:"warp",frequency:200,duration:2,volume:.4*t,waveform:"sine",attack:.5,decay:.5,sustain:.8,release:1,frequencyModulation:{rate:.5,depth:400,waveform:"sine"},reverb:{roomSize:.8,dampening:.3,wetness:.6}},shield:{type:"shield",frequency:400,duration:.3,volume:.3*t,waveform:"triangle",attack:.1,decay:.1,sustain:.5,release:.1,filter:{type:"bandpass",frequency:600,resonance:5}},impact:{type:"impact",frequency:80,duration:.2,volume:.5*t,waveform:"white",attack:.01,decay:.05,sustain:.3,release:.14,filter:{type:"lowpass",frequency:500,resonance:2},distortion:.3},communication:{type:"communication",frequency:1200,duration:.4,volume:.25*t,waveform:"sine",attack:.1,decay:.1,sustain:.6,release:.2,frequencyModulation:{rate:5,depth:50,waveform:"triangle"}},ambient:{type:"ambient",frequency:200,duration:5,volume:.2*t,waveform:"sine",attack:2,decay:1,sustain:.8,release:2},ui:{type:"ui",frequency:600,duration:.08,volume:.2*t,waveform:"square",attack:.01,decay:.02,sustain:.5,release:.05},thrust:{type:"thrust",frequency:100+50*t,duration:.3,volume:.4*t,waveform:"sawtooth",attack:.05,decay:.1,sustain:.8,release:.15,filter:{type:"lowpass",frequency:400+200*t,resonance:1}}};this.playSound(i[e])}startAmbientTrack(e){if(this.currentTrack===e)return;this.stopAmbientTrack();const t={deep_space:{name:"Deep Space",fadeInTime:3,fadeOutTime:2,crossfadeTime:1,layers:[{id:"bass_drone",waveform:"sine",baseFrequency:40,volume:.3,pan:0,frequencyVariation:.1,volumeVariation:.2,frequency:{min:35,max:45,speed:.1},filter:{type:"lowpass",minFreq:200,maxFreq:800,speed:.05,resonance:2}},{id:"cosmic_wind",waveform:"white",baseFrequency:200,volume:.15,pan:-.3,frequencyVariation:.3,volumeVariation:.4,frequency:{min:150,max:300,speed:.2},filter:{type:"bandpass",minFreq:800,maxFreq:3e3,speed:.3,resonance:1}},{id:"stellar_harmonics",waveform:"triangle",baseFrequency:220,volume:.2,pan:.4,frequencyVariation:.2,volumeVariation:.3,frequency:{min:200,max:440,speed:.15},filter:{type:"highpass",minFreq:400,maxFreq:1200,speed:.1,resonance:.5}}]},nebula_drift:{name:"Nebula Drift",fadeInTime:4,fadeOutTime:3,crossfadeTime:2,layers:[{id:"nebula_wash",waveform:"sine",baseFrequency:80,volume:.25,pan:0,frequencyVariation:.3,volumeVariation:.5,frequency:{min:60,max:120,speed:.08},filter:{type:"lowpass",minFreq:300,maxFreq:1500,speed:.12,resonance:3}},{id:"particle_shimmer",waveform:"triangle",baseFrequency:800,volume:.1,pan:-.6,frequencyVariation:.4,volumeVariation:.6,frequency:{min:600,max:1200,speed:.4},filter:{type:"bandpass",minFreq:1e3,maxFreq:4e3,speed:.5,resonance:2}}]},void_silence:{name:"Void Silence",fadeInTime:5,fadeOutTime:4,crossfadeTime:3,layers:[{id:"quantum_whisper",waveform:"sine",baseFrequency:30,volume:.15,pan:0,frequencyVariation:.05,volumeVariation:.8,frequency:{min:25,max:35,speed:.02},filter:{type:"lowpass",minFreq:100,maxFreq:400,speed:.03,resonance:1}}]}}[e];t?(this.currentTrack=e,this.createAmbientLayers(t),this.events.onTrackChanged?.(e),this.logger.info(`üéµ Started ambient track: ${e}`)):this.logger.warn(`Unknown ambient track: ${e}`)}createAmbientLayers(e){if(!this.audioContext||!this.musicGain)return;const t=this.audioContext.currentTime;e.layers.forEach(i=>{let s;if("white"===i.waveform)s=this.audioContext.createBufferSource(),s.buffer=this.noiseBuffer,s.loop=!0;else{const e=this.audioContext.createOscillator();e.type=i.waveform,e.frequency.value=i.baseFrequency,s=e}const a=this.audioContext.createGain();a.gain.value=0;const r=this.audioContext.createStereoPanner();let n;r.pan.value=i.pan,i.filter&&(n=this.audioContext.createBiquadFilter(),n.type=i.filter.type,n.frequency.value=i.filter.minFreq,n.Q.value=i.filter.resonance);let o=s;n&&(o.connect(n),o=n),o.connect(a),a.connect(r),r.connect(this.musicGain),a.gain.linearRampToValueAtTime(i.volume,t+e.fadeInTime),s.start(t),this.ambientLayers.set(i.id,{oscillator:s,gain:a,filter:n,panner:r}),s instanceof OscillatorNode&&this.startLayerModulation(s,i,n)})}startLayerModulation(e,t,i){if(!this.audioContext)return;const s=this.audioContext.createOscillator(),a=this.audioContext.createGain();if(s.type="sine",s.frequency.value=t.frequency.speed,a.gain.value=(t.frequency.max-t.frequency.min)/2,s.connect(a),a.connect(e.frequency),s.start(),i&&t.filter){const e=this.audioContext.createOscillator(),s=this.audioContext.createGain();e.type="triangle",e.frequency.value=t.filter.speed,s.gain.value=(t.filter.maxFreq-t.filter.minFreq)/2,e.connect(s),s.connect(i.frequency),e.start()}}stopAmbientTrack(){if(!this.currentTrack||!this.audioContext)return;const e=this.audioContext.currentTime;this.ambientLayers.forEach(t=>{t.gain.gain.linearRampToValueAtTime(0,e+2),t.oscillator.stop(e+2+.1)}),setTimeout(()=>{this.ambientLayers.clear()},2200),this.currentTrack=null,this.logger.info("üéµ Stopped ambient track")}setMasterVolume(e){this.masterVolume=Math.max(0,Math.min(1,e)),this.masterGain&&(this.masterGain.gain.value=this.masterVolume)}setMusicVolume(e){this.musicVolume=Math.max(0,Math.min(1,e)),this.musicGain&&(this.musicGain.gain.value=this.musicVolume)}setSFXVolume(e){this.sfxVolume=Math.max(0,Math.min(1,e)),this.soundEffectsGain&&(this.soundEffectsGain.gain.value=this.sfxVolume)}getAudioStats(){return{contextState:this.audioContext?.state||"not_initialized",activeSounds:this.activeSounds.size,currentTrack:this.currentTrack,ambientLayers:this.ambientLayers.size,masterVolume:this.masterVolume,musicVolume:this.musicVolume,sfxVolume:this.sfxVolume}}stopAllSounds(){this.activeSounds.forEach(e=>{if(e instanceof AudioScheduledSourceNode)try{e.stop()}catch(t){}}),this.activeSounds.clear(),this.stopAmbientTrack()}dispose(){this.stopAllSounds(),this.audioContext&&(this.audioContext.close(),this.audioContext=null),this.logger.info("üîä Audio system disposed")}}class u{constructor(e,t,i){this.currentState="main_menu",this.previousState=null,this.buttons=[],this.selectedButtonIndex=0,this.animationTime=0,this.transitionProgress=0,this.isTransitioning=!1,this.backgroundParticles=[],this.titleGlow=0,this.screenFlicker=0,this.saveSlots=[],this.audio=null,this.particles=null,this.logger=new r("MainMenu"),this.events=e,this.audio=t||null,this.particles=i||null,this.newGameSettings=this.getDefaultNewGameSettings(),this.gameSettings=this.getDefaultGameSettings(),this.loadSaveSlots(),this.initializeMainMenu(),this.startBackgroundEffects(),this.logger.info("üéÆ Main menu system initialized")}update(e,t){this.animationTime+=e,this.updateVisualEffects(e),this.isTransitioning?this.updateTransition(e):(this.handleInput(t),this.updateParticleEffects(e))}handleInput(e){switch(e.isKeyPressed("ArrowUp")||e.isKeyPressed("KeyW")?this.navigateUp():(e.isKeyPressed("ArrowDown")||e.isKeyPressed("KeyS"))&&this.navigateDown(),(e.isKeyPressed("Enter")||e.isKeyPressed("Space"))&&this.selectButton(),e.isKeyPressed("Escape")&&this.goBack(),this.currentState){case"new_game":this.handleNewGameInput(e);break;case"settings":this.handleSettingsInput(e)}this.handleHotkeys(e)}navigateUp(){if(0!==this.buttons.length){this.playUISound("navigation");do{this.selectedButtonIndex=(this.selectedButtonIndex-1+this.buttons.length)%this.buttons.length}while(!this.buttons[this.selectedButtonIndex].enabled);this.updateButtonHighlights()}}navigateDown(){if(0!==this.buttons.length){this.playUISound("navigation");do{this.selectedButtonIndex=(this.selectedButtonIndex+1)%this.buttons.length}while(!this.buttons[this.selectedButtonIndex].enabled);this.updateButtonHighlights()}}selectButton(){if(0===this.buttons.length||this.selectedButtonIndex>=this.buttons.length)return;const e=this.buttons[this.selectedButtonIndex];e.enabled&&(this.playUISound("select"),e.action())}goBack(){if(this.playUISound("back"),"main_menu"===this.currentState)this.events.onExit?.();else this.transitionToState("main_menu")}initializeMainMenu(){this.buttons=[{id:"new_game",text:"NEW GAME",x:0,y:0,width:200,height:40,enabled:!0,highlighted:!1,action:()=>this.transitionToState("new_game"),hotkey:"KeyN"},{id:"load_game",text:"LOAD GAME",x:0,y:0,width:200,height:40,enabled:this.hasSaveGames(),highlighted:!1,action:()=>this.transitionToState("load_game"),hotkey:"KeyL"},{id:"settings",text:"SETTINGS",x:0,y:0,width:200,height:40,enabled:!0,highlighted:!1,action:()=>this.transitionToState("settings"),hotkey:"KeyS"},{id:"credits",text:"CREDITS",x:0,y:0,width:200,height:40,enabled:!0,highlighted:!1,action:()=>this.transitionToState("credits"),hotkey:"KeyC"},{id:"exit",text:"EXIT",x:0,y:0,width:200,height:40,enabled:!0,highlighted:!1,action:()=>this.events.onExit?.(),hotkey:"KeyQ"}],this.selectedButtonIndex=0,this.updateButtonPositions(),this.updateButtonHighlights()}initializeNewGameMenu(){this.buttons=[{id:"player_name",text:`CAPTAIN NAME: ${this.newGameSettings.playerName}`,x:0,y:0,width:400,height:30,enabled:!0,highlighted:!1,action:()=>this.editPlayerName()},{id:"difficulty",text:`DIFFICULTY: ${this.newGameSettings.difficulty.toUpperCase()}`,x:0,y:0,width:400,height:30,enabled:!0,highlighted:!1,action:()=>this.cycleDifficulty()},{id:"galaxy_size",text:`GALAXY SIZE: ${this.newGameSettings.galaxySize.toUpperCase()}`,x:0,y:0,width:400,height:30,enabled:!0,highlighted:!1,action:()=>this.cycleGalaxySize()},{id:"enemy_frequency",text:`HOSTILES: ${this.newGameSettings.enemyFrequency.toUpperCase()}`,x:0,y:0,width:400,height:30,enabled:!0,highlighted:!1,action:()=>this.cycleEnemyFrequency()},{id:"permadeath",text:"PERMADEATH: "+(this.newGameSettings.enablePermadeath?"ON":"OFF"),x:0,y:0,width:400,height:30,enabled:!0,highlighted:!1,action:()=>this.togglePermadeath()},{id:"tutorial",text:"TUTORIAL: "+(this.newGameSettings.enableTutorial?"ON":"OFF"),x:0,y:0,width:400,height:30,enabled:!0,highlighted:!1,action:()=>this.toggleTutorial()},{id:"start_game",text:"START MISSION",x:0,y:0,width:300,height:40,enabled:!0,highlighted:!1,action:()=>this.startNewGame()},{id:"back",text:"BACK",x:0,y:0,width:200,height:40,enabled:!0,highlighted:!1,action:()=>this.transitionToState("main_menu")}],this.selectedButtonIndex=0,this.updateButtonPositions(),this.updateButtonHighlights()}initializeLoadGameMenu(){this.buttons=[];for(let e=0;e<this.saveSlots.length;e++){const t=this.saveSlots[e];this.buttons.push({id:`save_slot_${t.slot}`,text:t.exists?`SLOT ${t.slot}: ${t.name} - ${t.system} (${t.playtime})`:`SLOT ${t.slot}: EMPTY`,x:0,y:0,width:600,height:40,enabled:t.exists,highlighted:!1,action:()=>this.loadGame(t.slot)})}this.buttons.push({id:"back",text:"BACK",x:0,y:0,width:200,height:40,enabled:!0,highlighted:!1,action:()=>this.transitionToState("main_menu")}),this.selectedButtonIndex=0,this.updateButtonPositions(),this.updateButtonHighlights()}initializeSettingsMenu(){this.buttons=[{id:"render_scale",text:`RENDER QUALITY: ${Math.round(100*this.gameSettings.renderScale)}%`,x:0,y:0,width:400,height:30,enabled:!0,highlighted:!1,action:()=>this.adjustRenderScale()},{id:"master_volume",text:`MASTER VOLUME: ${Math.round(100*this.gameSettings.masterVolume)}%`,x:0,y:0,width:400,height:30,enabled:!0,highlighted:!1,action:()=>this.adjustMasterVolume()},{id:"music_volume",text:`MUSIC VOLUME: ${Math.round(100*this.gameSettings.musicVolume)}%`,x:0,y:0,width:400,height:30,enabled:!0,highlighted:!1,action:()=>this.adjustMusicVolume()},{id:"sfx_volume",text:`SFX VOLUME: ${Math.round(100*this.gameSettings.sfxVolume)}%`,x:0,y:0,width:400,height:30,enabled:!0,highlighted:!1,action:()=>this.adjustSfxVolume()},{id:"show_fps",text:"SHOW FPS: "+(this.gameSettings.showFPS?"ON":"OFF"),x:0,y:0,width:400,height:30,enabled:!0,highlighted:!1,action:()=>this.toggleShowFPS()},{id:"vsync",text:"VSYNC: "+(this.gameSettings.vsync?"ON":"OFF"),x:0,y:0,width:400,height:30,enabled:!0,highlighted:!1,action:()=>this.toggleVSync()},{id:"apply_settings",text:"APPLY CHANGES",x:0,y:0,width:300,height:40,enabled:!0,highlighted:!1,action:()=>this.applySettings()},{id:"reset_defaults",text:"RESET TO DEFAULTS",x:0,y:0,width:300,height:40,enabled:!0,highlighted:!1,action:()=>this.resetToDefaults()},{id:"back",text:"BACK",x:0,y:0,width:200,height:40,enabled:!0,highlighted:!1,action:()=>this.transitionToState("main_menu")}],this.selectedButtonIndex=0,this.updateButtonPositions(),this.updateButtonHighlights()}initializeCreditsMenu(){this.buttons=[{id:"back",text:"BACK",x:400,y:500,width:200,height:40,enabled:!0,highlighted:!1,action:()=>this.transitionToState("main_menu")}],this.selectedButtonIndex=0,this.updateButtonHighlights()}updateButtonPositions(){for(let e=0;e<this.buttons.length;e++){const t=this.buttons[e];t.x=400-t.width/2,t.y=250+50*e}}updateButtonHighlights(){for(let e=0;e<this.buttons.length;e++)this.buttons[e].highlighted=e===this.selectedButtonIndex}handleNewGameInput(e){e.isKeyPressed("KeyR")&&this.generateRandomSeed()}handleSettingsInput(e){const t=this.buttons[this.selectedButtonIndex];t&&(e.isKeyPressed("ArrowLeft")?this.adjustSettingDown(t.id):e.isKeyPressed("ArrowRight")&&this.adjustSettingUp(t.id))}handleHotkeys(e){if("main_menu"===this.currentState)for(const t of this.buttons)if(t.hotkey&&e.isKeyPressed(t.hotkey)&&t.enabled){this.playUISound("select"),t.action();break}}transitionToState(e){this.isTransitioning||(this.previousState=this.currentState,this.isTransitioning=!0,this.transitionProgress=0,this.playUISound("transition"),this.createTransitionEffect(),setTimeout(()=>{this.currentState=e,this.initializeMenuForState(e)},150))}initializeMenuForState(e){switch(e){case"main_menu":this.initializeMainMenu();break;case"new_game":this.initializeNewGameMenu();break;case"load_game":this.initializeLoadGameMenu();break;case"settings":this.initializeSettingsMenu();break;case"credits":this.initializeCreditsMenu()}}updateTransition(e){this.transitionProgress+=e/300,this.transitionProgress>=1&&(this.transitionProgress=1,this.isTransitioning=!1)}updateVisualEffects(e){this.titleGlow=.5*(Math.sin(.003*this.animationTime)+1),this.screenFlicker=.05*Math.random(),this.updateBackgroundParticles(e)}updateParticleEffects(e){if(this.particles&&(this.particles.update(e),Math.random()<.01)){const e=800*Math.random(),t=600*Math.random();this.particles.createExplosion({x:e,y:t},.1)}}startBackgroundEffects(){if(this.particles){for(let e=0;e<20;e++){const e=800*Math.random(),t=600*Math.random(),i=this.particles.createThrustTrail({x:e,y:t},Math.random()*Math.PI*2,.2);this.backgroundParticles.push(i)}this.audio&&this.audio.startAmbientTrack("void_silence")}}updateBackgroundParticles(e){}createTransitionEffect(){if(this.particles)for(let e=0;e<50;e++){const e=800*Math.random(),t=600*Math.random();this.particles.createExplosion({x:e,y:t},.3)}}playUISound(e){if(this.audio)switch(e){case"navigation":this.audio.playRetroSound(h.Beep,.3);break;case"select":this.audio.playRetroSound(h.UI,.5);break;case"back":this.audio.playRetroSound(h.UI,.3);break;case"transition":this.audio.playRetroSound(h.Communication,.4);break;case"error":this.audio.playRetroSound(h.Warning,.6)}}editPlayerName(){const e=["COMMANDER","CAPTAIN","ADMIRAL","PILOT","EXPLORER"],t=e.indexOf(this.newGameSettings.playerName);this.newGameSettings.playerName=e[(t+1)%e.length],this.updateNewGameMenuText()}cycleDifficulty(){const e=["easy","normal","hard","nightmare"],t=e.indexOf(this.newGameSettings.difficulty);this.newGameSettings.difficulty=e[(t+1)%e.length],this.updateNewGameMenuText()}cycleGalaxySize(){const e=["small","medium","large","huge"],t=e.indexOf(this.newGameSettings.galaxySize);this.newGameSettings.galaxySize=e[(t+1)%e.length],this.updateNewGameMenuText()}cycleEnemyFrequency(){const e=["low","normal","high","extreme"],t=e.indexOf(this.newGameSettings.enemyFrequency);this.newGameSettings.enemyFrequency=e[(t+1)%e.length],this.updateNewGameMenuText()}togglePermadeath(){this.newGameSettings.enablePermadeath=!this.newGameSettings.enablePermadeath,this.updateNewGameMenuText()}toggleTutorial(){this.newGameSettings.enableTutorial=!this.newGameSettings.enableTutorial,this.updateNewGameMenuText()}generateRandomSeed(){this.newGameSettings.galaxySeed=Math.random().toString(36).substring(2,8).toUpperCase(),this.updateNewGameMenuText()}startNewGame(){this.playUISound("select"),this.events.onNewGame?.(this.newGameSettings),this.transitionToState("game_start")}adjustSettingDown(e){switch(e){case"render_scale":this.gameSettings.renderScale=Math.max(.5,this.gameSettings.renderScale-.1);break;case"master_volume":this.gameSettings.masterVolume=Math.max(0,this.gameSettings.masterVolume-.1);break;case"music_volume":this.gameSettings.musicVolume=Math.max(0,this.gameSettings.musicVolume-.1);break;case"sfx_volume":this.gameSettings.sfxVolume=Math.max(0,this.gameSettings.sfxVolume-.1)}this.updateSettingsMenuText()}adjustSettingUp(e){switch(e){case"render_scale":this.gameSettings.renderScale=Math.min(2,this.gameSettings.renderScale+.1);break;case"master_volume":this.gameSettings.masterVolume=Math.min(1,this.gameSettings.masterVolume+.1);break;case"music_volume":this.gameSettings.musicVolume=Math.min(1,this.gameSettings.musicVolume+.1);break;case"sfx_volume":this.gameSettings.sfxVolume=Math.min(1,this.gameSettings.sfxVolume+.1)}this.updateSettingsMenuText()}adjustRenderScale(){this.gameSettings.renderScale=this.gameSettings.renderScale>=2?.5:this.gameSettings.renderScale+.25,this.updateSettingsMenuText()}adjustMasterVolume(){this.gameSettings.masterVolume=(this.gameSettings.masterVolume+.2)%1.2,this.gameSettings.masterVolume>1&&(this.gameSettings.masterVolume=0),this.updateSettingsMenuText()}adjustMusicVolume(){this.gameSettings.musicVolume=(this.gameSettings.musicVolume+.2)%1.2,this.gameSettings.musicVolume>1&&(this.gameSettings.musicVolume=0),this.updateSettingsMenuText()}adjustSfxVolume(){this.gameSettings.sfxVolume=(this.gameSettings.sfxVolume+.2)%1.2,this.gameSettings.sfxVolume>1&&(this.gameSettings.sfxVolume=0),this.updateSettingsMenuText()}toggleShowFPS(){this.gameSettings.showFPS=!this.gameSettings.showFPS,this.updateSettingsMenuText()}toggleVSync(){this.gameSettings.vsync=!this.gameSettings.vsync,this.updateSettingsMenuText()}applySettings(){this.playUISound("select"),this.events.onSettings?.(this.gameSettings),this.saveSettings()}resetToDefaults(){this.gameSettings=this.getDefaultGameSettings(),this.updateSettingsMenuText(),this.playUISound("select")}loadGame(e){this.playUISound("select"),this.events.onLoadGame?.(e),this.transitionToState("game_start")}updateNewGameMenuText(){if("new_game"!==this.currentState)return;[{id:"player_name",text:`CAPTAIN NAME: ${this.newGameSettings.playerName}`},{id:"difficulty",text:`DIFFICULTY: ${this.newGameSettings.difficulty.toUpperCase()}`},{id:"galaxy_size",text:`GALAXY SIZE: ${this.newGameSettings.galaxySize.toUpperCase()}`},{id:"enemy_frequency",text:`HOSTILES: ${this.newGameSettings.enemyFrequency.toUpperCase()}`},{id:"permadeath",text:"PERMADEATH: "+(this.newGameSettings.enablePermadeath?"ON":"OFF")},{id:"tutorial",text:"TUTORIAL: "+(this.newGameSettings.enableTutorial?"ON":"OFF")}].forEach(e=>{const t=this.buttons.find(t=>t.id===e.id);t&&(t.text=e.text)})}updateSettingsMenuText(){if("settings"!==this.currentState)return;[{id:"render_scale",text:`RENDER QUALITY: ${Math.round(100*this.gameSettings.renderScale)}%`},{id:"master_volume",text:`MASTER VOLUME: ${Math.round(100*this.gameSettings.masterVolume)}%`},{id:"music_volume",text:`MUSIC VOLUME: ${Math.round(100*this.gameSettings.musicVolume)}%`},{id:"sfx_volume",text:`SFX VOLUME: ${Math.round(100*this.gameSettings.sfxVolume)}%`},{id:"show_fps",text:"SHOW FPS: "+(this.gameSettings.showFPS?"ON":"OFF")},{id:"vsync",text:"VSYNC: "+(this.gameSettings.vsync?"ON":"OFF")}].forEach(e=>{const t=this.buttons.find(t=>t.id===e.id);t&&(t.text=e.text)})}getDefaultNewGameSettings(){return{playerName:"COMMANDER",difficulty:"normal",galaxySeed:Math.random().toString(36).substring(2,8).toUpperCase(),galaxySize:"medium",startingResources:"standard",enemyFrequency:"normal",enablePermadeath:!1,enableTutorial:!0}}getDefaultGameSettings(){return{renderScale:1,vsync:!0,fullscreen:!1,masterVolume:.7,musicVolume:.5,sfxVolume:.8,mouseSensitivity:1,showFPS:!1,autoSave:!0,autoSaveInterval:300,colorblindMode:"none",subtitles:!1,reducedMotion:!1,keyBindings:{forward:"KeyW",backward:"KeyS",left:"KeyA",right:"KeyD",fire:"Space",warp:"KeyW"}}}hasSaveGames(){return this.saveSlots.some(e=>e.exists)}loadSaveSlots(){this.saveSlots=[{slot:1,name:"Captain Nova",date:"2024-01-15",playtime:"12h 34m",level:15,system:"Alpha Centauri",exists:!0},{slot:2,name:"Commander Rex",date:"2024-01-10",playtime:"8h 22m",level:8,system:"Sol System",exists:!0},{slot:3,name:"",date:"",playtime:"",level:0,system:"",exists:!1}]}saveSettings(){try{localStorage.setItem("gameSettings",JSON.stringify(this.gameSettings)),this.logger.info("‚öôÔ∏è Settings saved")}catch(e){this.logger.error("Failed to save settings",e)}}loadSettings(){try{const e=localStorage.getItem("gameSettings");e&&(this.gameSettings={...this.getDefaultGameSettings(),...JSON.parse(e)},this.logger.info("‚öôÔ∏è Settings loaded"))}catch(e){this.logger.warn("Failed to load settings, using defaults",e)}}render(e){switch(e.fillRect(0,0,800,600,{r:8,g:8,b:8}),this.screenFlicker>.03&&(this.screenFlicker,e.fillRect(0,0,800,600,{r:16,g:16,b:16})),this.currentState){case"main_menu":this.renderMainMenu(e);break;case"new_game":this.renderNewGameMenu(e);break;case"load_game":this.renderLoadGameMenu(e);break;case"settings":this.renderSettingsMenu(e);break;case"credits":this.renderCreditsMenu(e);break;case"game_start":this.renderGameStart(e)}this.isTransitioning&&this.renderTransition(e),this.particles&&this.particles.render(e)}renderMainMenu(e){const t={r:72+Math.floor(24*this.titleGlow),g:48+Math.floor(16*this.titleGlow),b:12+Math.floor(8*this.titleGlow)};if(this.renderText(e,"STELLAR ODYSSEY",400,100,"large",t,"center"),this.renderText(e,"DEEP SPACE EXPLORATION",400,140,"medium",{r:48,g:48,b:48},"center"),this.renderText(e,"v1.0.0 ALPHA",780,580,"small",{r:32,g:32,b:32},"right"),this.renderButtons(e),"main_menu"===this.currentState){["N - New Game    L - Load Game    S - Settings    C - Credits    Q - Exit","Use ARROW KEYS or WASD to navigate, ENTER to select, ESC to go back"].forEach((t,i)=>{this.renderText(e,t,400,520+20*i,"small",{r:24,g:24,b:24},"center")})}}renderNewGameMenu(e){this.renderText(e,"NEW MISSION SETUP",400,80,"large",{r:72,g:48,b:12},"center"),this.renderButtons(e),this.renderText(e,`GALAXY SEED: ${this.newGameSettings.galaxySeed}`,400,480,"medium",{r:48,g:48,b:48},"center"),this.renderText(e,"Press R to generate random seed",400,500,"small",{r:32,g:32,b:32},"center")}renderLoadGameMenu(e){this.renderText(e,"LOAD MISSION",400,80,"large",{r:72,g:48,b:12},"center");for(let t=0;t<this.saveSlots.length;t++){const i=this.saveSlots[t],s=150+70*t;i.exists?(this.renderText(e,`SLOT ${i.slot}: ${i.name}`,50,s,"medium",{r:48,g:48,b:48},"left"),this.renderText(e,`Location: ${i.system}`,50,s+20,"small",{r:32,g:32,b:32},"left"),this.renderText(e,`Playtime: ${i.playtime}`,400,s+20,"small",{r:32,g:32,b:32},"left"),this.renderText(e,`Date: ${i.date}`,600,s+20,"small",{r:32,g:32,b:32},"left")):this.renderText(e,`SLOT ${i.slot}: EMPTY`,50,s,"medium",{r:24,g:24,b:24},"left")}this.renderButtons(e)}renderSettingsMenu(e){this.renderText(e,"SYSTEM CONFIGURATION",400,80,"large",{r:72,g:48,b:12},"center"),this.renderButtons(e),this.renderText(e,"Use LEFT/RIGHT arrows to adjust values",400,500,"small",{r:32,g:32,b:32},"center")}renderCreditsMenu(e){this.renderText(e,"STELLAR ODYSSEY",400,100,"large",{r:72,g:48,b:12},"center");["","AI-DRIVEN GAME DEVELOPMENT","","Game Design & Programming:","Claude Sonnet 4 (Anthropic)","","Technology Stack:","TypeScript + HTML5 Canvas + WebGL","Web Audio API + Performance Monitoring","Procedural Generation + Advanced AI","","Special Thanks:","The TypeScript Community","Web Standards Contributors","Space Exploration Pioneers","","¬© 2024 AI-Powered Game Development","Created entirely through AI collaboration"].forEach((t,i)=>{const s=150+20*i,a=""===t?{r:0,g:0,b:0}:t.includes(":")?{r:48,g:48,b:48}:{r:32,g:32,b:32};""!==t&&this.renderText(e,t,400,s,"small",a,"center")}),this.renderButtons(e)}renderGameStart(e){this.renderText(e,"INITIALIZING STELLAR DRIVE...",400,250,"large",{r:72,g:48,b:12},"center");const t=this.animationTime%3e3/3e3;e.drawRect(200,300,400,20,{r:32,g:32,b:32});const i=400*t;e.fillRect(200,300,i,20,{r:72,g:48,b:12});const s=["Generating galaxy...","Calculating stellar positions...","Initializing quantum drive...","Loading mission parameters...","Calibrating sensors...","Establishing communications...","Mission ready!"],a=Math.floor(t*s.length),r=s[Math.min(a,s.length-1)];this.renderText(e,r,400,350,"medium",{r:48,g:48,b:48},"center"),t>=.95&&setTimeout(()=>this.events.onGameStart?.(),500)}renderTransition(e){const t=600*(this.transitionProgress<.5?2*this.transitionProgress:2*(1-this.transitionProgress));e.fillRect(0,0,800,t,{r:16,g:16,b:16}),e.fillRect(0,600-t,800,t,{r:16,g:16,b:16})}renderButtons(e){for(const t of this.buttons)this.renderButton(e,t)}renderButton(e,t){const i=t.highlighted?{r:72,g:48,b:12}:t.enabled?{r:48,g:48,b:48}:{r:24,g:24,b:24};if(t.highlighted&&(e.fillRect(t.x-5,t.y-5,t.width+10,t.height+10,{r:16,g:16,b:16}),e.drawRect(t.x-5,t.y-5,t.width+10,t.height+10,i)),this.renderText(e,t.text,t.x+t.width/2,t.y+t.height/2,"medium",i,"center"),t.hotkey&&t.enabled){const i=`[${t.hotkey.replace("Key","")}]`;this.renderText(e,i,t.x+t.width+10,t.y+t.height/2,"small",{r:32,g:32,b:32},"left")}}renderText(e,t,i,s,a,r,n){const o="small"===a?12:"medium"===a?16:24;let c=i;"center"===n?c=i-t.length*o*.3:"right"===n&&(c=i-t.length*o*.6);for(let l=0;l<t.length;l++){const i=c+l*o*.6;" "!==t[l]&&e.fillRect(i,s-o/2,.5*o,o,r)}}getCurrentState(){return this.currentState}getGameSettings(){return{...this.gameSettings}}setNewGameSettings(e){Object.assign(this.newGameSettings,e),"new_game"===this.currentState&&this.updateNewGameMenuText()}dispose(){this.particles&&this.backgroundParticles.forEach(e=>{this.particles.removeEmitter(e)}),this.logger.info("üéÆ Main menu system disposed")}}var g=(e=>(e.MainMenu="main_menu",e.Loading="loading",e.Playing="playing",e.Paused="paused",e.Inventory="inventory",e.Research="research",e.Navigation="navigation",e.Diplomacy="diplomacy",e.Settings="settings",e.Credits="credits",e.NewGame="new_game",e.LoadGame="load_game",e.Error="error",e))(g||{});class m{constructor(e,t){this.currentState="main_menu",this.previousState="main_menu",this.stateStack=[],this.transitions=new Map,this.stateStartTime=Date.now(),this.mainMenu=null,this.demoShip=null,this.demoPlanets=[],this.isInitialized=!1,this.saveInterval=3e4,this.gameTimeStarted=!1,this.logger=new r("GameStateManager"),this.gameData=this.createDefaultGameData(),this.initializeMenuSystem(e,t),this.setupStateTransitions(),this.logger.info("üéØ Game state manager created")}initializeMenuSystem(e,t){const i={onNewGame:async e=>{await this.handleNewGame(e)},onLoadGame:async e=>{await this.handleLoadGame(e)},onSettings:e=>{this.handleSettingsChange(e)},onExit:()=>{this.handleExit()},onGameStart:async()=>{await this.setState("playing")}};this.mainMenu=new u(i,e,t),this.logger.info("üéÆ Menu system initialized")}async initialize(){this.logger.info("üîß Initializing game state manager...");try{try{await this.loadGameData(),this.logger.info("Existing save data loaded")}catch(e){this.logger.info("No existing save data found, creating new game data"),this.gameData=this.createDefaultGameData()}this.setupDemoContent(),this.isInitialized=!0,this.logger.info("‚úÖ Game state manager initialized")}catch(e){throw this.logger.error("‚ùå Game state manager initialization failed",e),e}}createDefaultGameData(){return{playerShip:{id:"player_ship",position:{x:512,y:384},velocity:{x:0,y:0},health:100,fuel:1e3,resources:new Map([["credits",1e3],["fuel",1e3],["metal",50],["crystals",10]])},currentSystem:{id:"sol_system",name:"Sol System",type:"star_system"},gameTime:0,level:1,experience:0,discoveries:[],technologies:["basic_engines","basic_weapons"],settings:{masterVolume:1,musicVolume:.7,sfxVolume:.8,difficulty:"normal"},stats:{timePlayedSeconds:0,systemsVisited:1,aliensEncountered:0,battlesWon:0,resourcesCollected:0}}}setupStateTransitions(){this.addTransition("loading",g.Menu),this.addTransition(g.Menu,"playing"),this.addTransition("playing",g.Menu),this.addTransition("playing","paused"),this.addTransition("paused","playing"),this.addTransition("playing","inventory"),this.addTransition("playing","research"),this.addTransition("playing","navigation"),this.addTransition("playing","diplomacy"),this.addTransition("inventory","playing"),this.addTransition("research","playing"),this.addTransition("navigation","playing"),this.addTransition("diplomacy","playing"),this.addTransition("playing","error"),this.addTransition("error",g.Menu),this.logger.debug("State transitions configured")}addTransition(e,t,i,s){const a=`${e}->${t}`;this.transitions.set(a,{from:e,to:t,condition:i,action:s})}setupDemoContent(){this.logger.debug("Demo content setup prepared")}async setState(e){const t=`${this.currentState}->${e}`,i=this.transitions.get(t);i?!i.condition||i.condition()?(this.logger.info(`State transition: ${this.currentState} ‚Üí ${e}`),this.previousState=this.currentState,i.action&&i.action(),this.currentState=e,await this.onStateEnter(e)):this.logger.debug(`Transition condition not met: ${t}`):this.logger.warn(`Invalid state transition: ${this.currentState} ‚Üí ${e}`)}pushState(e){this.stateStack.push(this.currentState),this.currentState=e,this.logger.debug(`Pushed state: ${e} (stack depth: ${this.stateStack.length})`)}popState(){if(0===this.stateStack.length)return this.logger.warn("Cannot pop state: stack is empty"),null;const e=this.currentState;return this.currentState=this.stateStack.pop(),this.logger.debug(`Popped state: ${e} ‚Üí ${this.currentState}`),e}async onStateEnter(e){switch(e){case"playing":this.startGameTimeTracking();break;case"paused":this.pauseGameTimeTracking();break;case g.Menu:await this.save();break;case"error":this.logger.error("Entered error state")}}update(e,t){if(this.isInitialized)switch("playing"===this.currentState&&(this.gameData.gameTime+=e,this.gameData.stats.timePlayedSeconds+=e),this.currentState){case"main_menu":case"new_game":case"load_game":case"settings":case"credits":this.mainMenu&&t&&this.mainMenu.update(e,t);break;case"playing":this.updatePlayingState(e);break;case"loading":this.updateLoadingState(e)}}updatePlayingState(e){this.demoShip&&(this.gameData.playerShip.position={...this.demoShip.position},this.gameData.playerShip.velocity={...this.demoShip.velocity},void 0!==this.demoShip.health&&(this.gameData.playerShip.health=this.demoShip.health))}updateLoadingState(e){Date.now()-this.stateStartTime>2e3&&this.setState("playing").catch(e=>{this.logger.error("Failed to transition to playing state",e)})}render(e){if(this.isInitialized)switch(this.currentState){case"main_menu":case"new_game":case"load_game":case"settings":case"credits":this.mainMenu&&this.mainMenu.render(e);break;case"loading":this.renderLoadingState(e);break;case"playing":this.renderPlayingState(e);break;case"paused":this.renderPausedState(e);break;case"error":this.renderErrorState(e);break;default:this.renderDefaultState(e)}else this.renderLoadingState(e)}renderLoadingState(e){e.renderText("INITIALIZING SPACE EXPLORER...",362,334,{r:0,g:255,b:0},16);const t=".".repeat(Math.floor(Date.now()/500)%4);e.renderText(`LOADING${t}`,462,384,{r:0,g:128,b:0},14)}renderMenuState(e){e.renderText("SPACE EXPLORER 16-BIT",372,284,{r:0,g:255,b:0},20);["CONTINUE EXPLORATION","NEW EXPEDITION","SETTINGS","EXIT"].forEach((t,i)=>{const s=364+30*i,a=0===i?{r:255,g:255,b:0}:{r:0,g:192,b:0};e.renderText(t,432,s,a,14)}),e.renderText("USE ARROW KEYS TO NAVIGATE, ENTER TO SELECT",332,534,{r:0,g:128,b:0},12)}renderPlayingState(e){if(this.renderSpaceBackground(e),this.demoShip){const t=e.generateShipSprite("player",32);e.drawSprite(t,this.demoShip.position.x-16,this.demoShip.position.y-16)}this.demoPlanets.forEach(t=>{e.drawCircle(t.position.x,t.position.y,t.radius,{r:64,g:128,b:192},!0)}),this.renderBasicHUD(e)}renderPausedState(e){this.renderPlayingState(e);e.fillRect(412,334,200,100,{r:0,g:0,b:0,a:128}),e.renderText("GAME PAUSED",452,364,{r:255,g:255,b:0},16),e.renderText("PRESS ESC TO RESUME",432,394,{r:0,g:192,b:0},12)}renderErrorState(e){e.fillRect(0,0,1024,768,{r:64,g:0,b:0}),e.renderText("SYSTEM ERROR",452,334,{r:255,g:0,b:0},20),e.renderText("CRITICAL SYSTEM FAILURE DETECTED",372,374,{r:255,g:64,b:64},14),e.renderText("PRESS ENTER TO RETURN TO MAIN MENU",352,414,{r:192,g:192,b:192},12)}renderDefaultState(e){e.renderText(`UNKNOWN STATE: ${this.currentState}`,412,384,{r:255,g:0,b:255},16)}renderSpaceBackground(e){for(let t=0;t<100;t++){const i=73*t%1024,s=149*t%768,a=t%3+1,r={r:64*a,g:64*a,b:96*a};e.setPixel(i,s,r)}}renderBasicHUD(e){const t=this.gameData.playerShip.health,i=this.gameData.playerShip.fuel;e.renderText(`HEALTH: ${t.toFixed(0)}%`,10,10,t>50?{r:0,g:255,b:0}:{r:255,g:0,b:0},12),e.renderText(`FUEL: ${i.toFixed(0)}`,10,30,i>200?{r:0,g:255,b:0}:{r:255,g:255,b:0},12),e.renderText(`CREDITS: ${this.gameData.playerShip.resources.get("credits")||0}`,10,50,{r:255,g:255,b:0},12);const s=Math.floor(this.gameData.gameTime/60),a=Math.floor(this.gameData.gameTime%60);e.renderText(`TIME: ${s}:${a.toString().padStart(2,"0")}`,10,70,{r:0,g:192,b:192},12),e.renderText(`SYSTEM: ${this.gameData.currentSystem.name}`,10,90,{r:0,g:255,b:255},12),e.renderText(`EXPLORATION: ${this.gameData.stats.systemsVisited||0} systems`,10,110,{r:192,g:192,b:192},12)}startGameTimeTracking(){this.gameTimeStarted=!0,this.logger.debug("Game time tracking started")}pauseGameTimeTracking(){this.gameTimeStarted=!1,this.logger.debug("Game time tracking paused")}async save(){try{const e={version:"1.0.0",timestamp:Date.now(),gameData:this.gameData},t=JSON.stringify(e);localStorage.setItem("spaceExplorer_save",t),this.logger.debug("Game saved successfully")}catch(e){throw this.logger.error("Failed to save game",e),e}}async load(){try{await this.loadGameData(),this.logger.info("Game loaded successfully")}catch(e){this.logger.warn("Failed to load game, using defaults",e),this.gameData=this.createDefaultGameData()}}async loadGameData(){const e=localStorage.getItem("spaceExplorer_save");if(!e)throw new Error("No save data found");const t=JSON.parse(e);if(!t.gameData)throw new Error("Invalid save data format");if(t.gameData.playerShip.resources){const e=t.gameData.playerShip.resources;Array.isArray(e)?t.gameData.playerShip.resources=new Map(e):t.gameData.playerShip.resources=new Map(Object.entries(e))}this.gameData=t.gameData,this.logger.debug("Game data loaded from storage")}async handleNewGame(e){switch(this.logger.info("üÜï Starting new game",e),this.gameData=this.createDefaultGameData(),this.gameData.playerShip.id=`ship_${e.playerName.toLowerCase()}`,e.difficulty){case"easy":this.gameData.playerShip.health=150,this.gameData.playerShip.fuel=200;break;case"hard":this.gameData.playerShip.health=75,this.gameData.playerShip.fuel=100;break;case"nightmare":this.gameData.playerShip.health=50,this.gameData.playerShip.fuel=75;break;default:this.gameData.playerShip.health=100,this.gameData.playerShip.fuel=150}this.gameData.currentSystem.name=`Galaxy_${e.galaxySeed}`,await this.setState("loading")}async handleLoadGame(e){this.logger.info(`üìÅ Loading game from slot ${e}`);try{const t=`stellarOdyssey_save_${e}`,i=localStorage.getItem(t);i?(this.gameData=JSON.parse(i),await this.setState("loading")):this.logger.warn("Save slot is empty")}catch(t){this.logger.error("Failed to load game",t)}}handleSettingsChange(e){this.logger.info("‚öôÔ∏è Applying settings",e),this.gameData.settings={masterVolume:e.masterVolume,musicVolume:e.musicVolume,effectsVolume:e.sfxVolume,renderScale:e.renderScale,showFPS:e.showFPS};try{localStorage.setItem("stellarOdyssey_settings",JSON.stringify(e))}catch(t){this.logger.error("Failed to save settings",t)}}handleExit(){this.logger.info("üëã Exiting game"),this.saveGameData(),"close"in window&&window.close()}getCurrentState(){return this.currentState}getPreviousState(){return this.previousState}getGameData(){return this.gameData}isInState(e){return this.currentState===e}setDemoShip(e){this.demoShip=e}setDemoPlanets(e){this.demoPlanets=[...e]}canPause(){return"playing"===this.currentState}canResume(){return"paused"===this.currentState}isGameActive(){return"playing"===this.currentState}isInMenu(){return this.currentState===g.Menu}cleanup(){this.save().catch(e=>{this.logger.error("Failed to save during cleanup",e)}),this.logger.info("üßπ Game state manager cleanup completed")}}var p=(e=>(e.Bow="bow",e.Stern="stern",e.Port="port",e.Starboard="starboard",e.Core="core",e.Bridge="bridge",e.Engineering="engineering",e.Weapons="weapons",e))(p||{}),y=(e=>(e.Engines="engines",e.Shields="shields",e.Weapons="weapons",e.LifeSupport="life_support",e.Sensors="sensors",e.Navigation="navigation",e.Communications="communications",e.WarpDrive="warp_drive",e))(y||{});class f{constructor(e={},t={}){this.damage=new Map,this.heatGeneration=0,this.powerConsumption=0,this.fuelConsumption=0,this.updateTimer=0,this.lastUpdateTime=0,this.events={},this.logger=new r("ShipSystems"),this.events=t,this.config={maxHull:100,maxShields:100,maxPower:100,maxFuel:1e3,maxHeat:100,enginePower:5e3,engineEfficiency:.8,shieldRegenRate:2,shieldPowerDrain:5,weaponCount:2,weaponPower:25,weaponHeatGeneration:15,...e},this.status={hull:100,shields:100,power:100,fuel:100,heat:0,enginesOnline:!0,shieldsOnline:!0,weaponsOnline:!0,lifeSupport:!0,warpDrive:!0,engineEfficiency:1,shieldStrength:1,weaponAccuracy:1,sensorRange:1},this.powerAllocation={engines:30,shields:25,weapons:20,lifeSupport:15,sensors:10},Object.values(p).forEach(e=>{this.damage.set(e,[])}),this.logger.info("üõ∏ Ship systems initialized",{config:this.config,status:this.status})}update(e){this.lastUpdateTime=e,this.updatePowerConsumption(),this.updateThermalManagement(e),this.updateShields(e),this.updateFuelConsumption(e),this.updateSystemEfficiency(),this.checkCriticalSystems(),this.updatePerformanceModifiers()}updatePowerConsumption(){let e=0;e+=this.powerAllocation.lifeSupport/100*10,this.status.enginesOnline&&(e+=this.powerAllocation.engines/100*20),this.status.shieldsOnline&&(e+=this.powerAllocation.shields/100*this.config.shieldPowerDrain),this.status.weaponsOnline&&(e+=this.powerAllocation.weapons/100*15),e+=this.powerAllocation.sensors/100*5,this.powerConsumption=e,this.status.power=Math.max(0,this.status.power-e*this.lastUpdateTime),this.status.power<10&&this.handlePowerFailure()}updateThermalManagement(e){this.heatGeneration=0,this.status.enginesOnline&&(this.heatGeneration+=this.powerAllocation.engines/100*8),this.status.shieldsOnline&&(this.heatGeneration+=this.powerAllocation.shields/100*3),this.status.weaponsOnline&&(this.heatGeneration+=this.powerAllocation.weapons/100*5),this.status.heat=Math.min(this.config.maxHeat,this.status.heat+this.heatGeneration*e);this.status.heat=Math.max(0,this.status.heat-15*e),this.status.heat>90&&this.handleOverheat()}updateShields(e){if(this.status.shieldsOnline&&this.status.power>5){const t=this.config.shieldRegenRate*(this.powerAllocation.shields/100);this.status.shields=Math.min(this.config.maxShields,this.status.shields+t*e)}}updateFuelConsumption(e){if(this.status.enginesOnline){let t=.5;t+=this.powerAllocation.engines/100*2,t*=2-this.status.engineEfficiency,this.fuelConsumption=t,this.status.fuel=Math.max(0,this.status.fuel-t*e),0===this.status.fuel&&this.emergencyShutdown()}}updateSystemEfficiency(){const e=this.getSectionDamageLevel("engineering");this.status.engineEfficiency=Math.max(.1,1-.8*e);const t=this.getSectionDamageLevel("core");this.status.shieldStrength=Math.max(.1,1-.9*t);const i=this.getSectionDamageLevel("weapons");this.status.weaponAccuracy=Math.max(.1,1-.7*i);const s=this.getSectionDamageLevel("bridge");this.status.sensorRange=Math.max(.2,1-.6*s)}updatePerformanceModifiers(){const e=Math.max(0,(this.status.heat-70)/30);this.status.engineEfficiency*=1-.3*e,this.status.shieldStrength*=1-.2*e,this.status.weaponAccuracy*=1-.4*e;const t=this.status.power/100;if(t<.5){const e=2*(.5-t);this.status.engineEfficiency*=1-.5*e,this.status.shieldStrength*=1-.7*e,this.status.weaponAccuracy*=1-.3*e}}checkCriticalSystems(){this.status.hull<20&&(this.logger.warn("‚ö†Ô∏è Critical hull damage detected"),this.events.onCriticalDamage?.("core")),(!this.status.lifeSupport||this.status.power<5)&&this.logger.error("üíÄ Life support critical"),Object.entries(p).forEach(([e,t])=>{this.getSectionDamageLevel(t)>.8&&(this.logger.warn(`‚ö†Ô∏è Critical damage in ${t} section`),this.events.onCriticalDamage?.(t))})}handlePowerFailure(){this.logger.error("‚ö° Power failure - emergency protocols activated"),this.status.weaponsOnline=!1,this.powerAllocation.weapons=0,this.powerAllocation.sensors=5,this.powerAllocation.engines=Math.min(this.powerAllocation.engines,20),this.powerAllocation.shields=Math.min(this.powerAllocation.shields,15),this.events.onPowerFailure?.()}handleOverheat(){this.logger.error("üî• System overheat - emergency cooling"),this.powerAllocation.engines*=.7,this.powerAllocation.weapons*=.5,this.status.heat>95&&(this.status.weaponsOnline=!1,this.powerAllocation.weapons=0),this.events.onOverheat?.()}emergencyShutdown(){this.logger.error("üõë Emergency shutdown - no fuel"),this.status.enginesOnline=!1,this.status.weaponsOnline=!1,this.status.shieldsOnline=!1,this.powerAllocation={engines:0,shields:0,weapons:0,lifeSupport:100,sensors:0}}applyDamage(e,t,i="kinetic"){let s=t;if(this.status.shieldsOnline&&this.status.shields>0){const e=Math.min(this.status.shields,t*this.status.shieldStrength);this.status.shields-=e,s-=e,this.logger.debug(`Shields absorbed ${e.toFixed(1)} damage`)}s>0&&(this.status.hull=Math.max(0,this.status.hull-s),this.addDamageReport(e,s),this.logger.warn(`${e} section took ${s.toFixed(1)} ${i} damage`))}addDamageReport(e,t){const i=this.calculateDamageSeverity(t),s=this.getAffectedSystems(e),a={section:e,severity:i,systemsAffected:s,repairCost:this.calculateRepairCost(i),repairTime:this.calculateRepairTime(i)},r=this.damage.get(e)||[];r.push(a),this.damage.set(e,r),s.forEach(e=>{this.events.onSystemDamage?.(e,i)})}calculateDamageSeverity(e){return e>=50?"critical":e>=30?"major":e>=15?"moderate":"minor"}getAffectedSystems(e){return{bow:["sensors","navigation"],stern:["engines"],port:[],starboard:[],core:["life_support","shields"],bridge:["navigation","communications","sensors"],engineering:["engines","warp_drive"],weapons:["weapons"]}[e]||[]}calculateRepairCost(e){return{minor:{metal:5,electronics:2,crystals:1},moderate:{metal:15,electronics:8,crystals:3},major:{metal:30,electronics:20,crystals:8},critical:{metal:60,electronics:40,crystals:20,nanobots:5},destroyed:{metal:100,electronics:80,crystals:40,nanobots:15}}[e]}calculateRepairTime(e){return{minor:30,moderate:120,major:300,critical:600,destroyed:1800}[e]}getSectionDamageLevel(e){const t=this.damage.get(e)||[];let i=0;return t.forEach(e=>{i+={minor:.1,moderate:.25,major:.5,critical:.8,destroyed:1}[e.severity]}),Math.min(1,i)}repairDamage(e,t,i){const s=this.damage.get(e);if(!s||!s[t])return!1;const a=s[t];return!!this.hasEnoughResources(i,a.repairCost)&&(s.splice(t,1),this.damage.set(e,s),this.status.hull=Math.min(this.config.maxHull,this.status.hull+10),a.systemsAffected.forEach(e=>{this.events.onSystemRepaired?.(e)}),this.logger.info(`Repaired ${a.severity} damage in ${e} section`),!0)}hasEnoughResources(e,t){return e.metal>=t.metal&&e.electronics>=t.electronics&&e.crystals>=t.crystals&&(void 0===t.nanobots||(e.nanobots||0)>=t.nanobots)}setPowerAllocation(e){this.powerAllocation={...this.powerAllocation,...e};const t=Object.values(this.powerAllocation).reduce((e,t)=>e+t,0);if(t>100){const e=100/t;Object.keys(this.powerAllocation).forEach(t=>{this.powerAllocation[t]*=e})}this.logger.debug("Power allocation updated",this.powerAllocation)}toggleSystem(e,t){const i=void 0!==t?t:!this.getSystemState(e);switch(e){case"engines":this.status.enginesOnline=i;break;case"shields":this.status.shieldsOnline=i;break;case"weapons":this.status.weaponsOnline=i;break;case"life_support":this.status.lifeSupport=i;break;case"warp_drive":this.status.warpDrive=i}this.logger.debug(`${e} ${i?"enabled":"disabled"}`)}getSystemState(e){switch(e){case"engines":return this.status.enginesOnline;case"shields":return this.status.shieldsOnline;case"weapons":return this.status.weaponsOnline;case"life_support":return this.status.lifeSupport;case"warp_drive":return this.status.warpDrive;default:return!0}}getStatus(){return{...this.status}}getPowerAllocation(){return{...this.powerAllocation}}getDamageReports(){return new Map(this.damage)}getDiagnostics(){return{powerConsumption:this.powerConsumption,heatGeneration:this.heatGeneration,fuelConsumption:this.fuelConsumption,totalDamageReports:Array.from(this.damage.values()).reduce((e,t)=>e+t.length,0),criticalSystems:this.getCriticalSystems()}}getCriticalSystems(){const e=[];return this.status.hull<25&&e.push("life_support"),this.status.power<15&&e.push("engines"),this.status.heat>85&&e.push("weapons"),this.status.enginesOnline||e.push("engines"),this.status.lifeSupport||e.push("life_support"),e}addFuel(e){this.status.fuel=Math.min(this.config.maxFuel,this.status.fuel+e)}addPower(e){this.status.power=Math.min(this.config.maxPower,this.status.power+e)}emergencyRepair(){this.status.hull=Math.max(this.status.hull,25),this.status.power=Math.max(this.status.power,30),this.status.heat=Math.min(this.status.heat,50),this.status.enginesOnline=!0,this.status.lifeSupport=!0,this.logger.info("üîß Emergency repair completed")}}class v{constructor(e={},t={}){this.state="idle",this.stateTimer=0,this.isCharging=!1,this.isActive=!1,this.particles=[],this.accretionParticles=[],this.blackHoleRadius=0,this.distortion={intensity:0,radius:0,center:{x:0,y:0}},this.shipPosition={x:0,y:0},this.shipSize=20,this.originalSpeed=1,this.PHASE_PARTICLE_ABSORPTION=5,this.PHASE_BLACK_HOLE_GROWTH=2,this.PHASE_ACCRETION_FORMATION=5,this.PHASE_SHUTDOWN=6,this.particleIntensity=0,this.blackHoleIntensity=0,this.accretionIntensity=0,this.distortionIntensity=0,this.logger=new r("WarpDrive"),this.events=t,this.config={speedMultiplier:20,energyCost:10,particleCount:50,maxRange:1e4,cooldownTime:30,...e},this.logger.info("üåå Warp drive system initialized",{speedMultiplier:this.config.speedMultiplier,particleCount:this.config.particleCount})}activateWarp(e,t){return"idle"!==this.state?(this.logger.warn("‚ö†Ô∏è Warp already active or charging"),!1):(this.shipPosition={...e},this.shipSize=t,this.state="charging",this.stateTimer=0,this.isCharging=!0,this.initializeParticles(),this.logger.info("üöÄ Warp drive activation sequence started"),this.events.onWarpStart?.(),!0)}deactivateWarp(){"active"===this.state&&(this.state="deactivating",this.stateTimer=0,this.isActive=!1,this.logger.info("üõë Warp drive deactivation sequence started"))}initializeParticles(){this.particles=[];for(let e=0;e<this.config.particleCount;e++){const t=2*Math.PI*e/this.config.particleCount+.5*Math.random(),i=150+50*Math.random(),s={x:this.shipPosition.x+Math.cos(t)*i,y:this.shipPosition.y+Math.sin(t)*i},a=[{r:72,g:24,b:24},{r:72,g:48,b:12},{r:48,g:48,b:48},{r:48,g:24,b:72},{r:64,g:64,b:64},{r:64,g:32,b:16}];this.particles.push({position:{...s},velocity:{x:0,y:0},color:a[Math.floor(Math.random()*a.length)],life:1,size:3*Math.random()+1,absorbed:!1})}}update(e,t){switch(this.shipPosition={...t},this.stateTimer+=e,this.state){case"charging":this.updateChargingPhase(e);break;case"growth":this.updateBlackHoleGrowth(e);break;case"accretion":this.updateAccretionFormation(e);break;case"active":this.updateActiveWarp(e);break;case"deactivating":this.updateDeactivation(e)}return this.updateParticles(e),this.updateAccretionDisk(e),this.updateSpaceDistortion(e),this.isActive?this.config.speedMultiplier:1}updateChargingPhase(e){const t=this.stateTimer/this.PHASE_PARTICLE_ABSORPTION;this.particleIntensity=Math.min(1,t),this.particles.forEach(i=>{if(!i.absorbed){const s={x:this.shipPosition.x-i.position.x,y:this.shipPosition.y-i.position.y},a=Math.sqrt(s.x*s.x+s.y*s.y);if(a>5){const r=50+200*t;i.velocity.x=s.x/a*r,i.velocity.y=s.y/a*r,i.position.x+=i.velocity.x*e,i.position.y+=i.velocity.y*e}else i.absorbed=!0}}),this.stateTimer>=this.PHASE_PARTICLE_ABSORPTION&&(this.state="growth",this.stateTimer=0,this.logger.debug("üï≥Ô∏è Black hole formation phase started"))}updateBlackHoleGrowth(e){const t=this.stateTimer/this.PHASE_BLACK_HOLE_GROWTH;this.blackHoleIntensity=Math.min(1,t),this.blackHoleRadius=this.shipSize/3*this.blackHoleIntensity,this.stateTimer>=this.PHASE_BLACK_HOLE_GROWTH&&(this.state="accretion",this.stateTimer=0,this.initializeAccretionDisk(),this.logger.debug("üí´ Accretion disk formation phase started"))}updateAccretionFormation(e){const t=this.stateTimer/this.PHASE_ACCRETION_FORMATION;this.accretionIntensity=Math.min(1,t);const i=(this.PHASE_BLACK_HOLE_GROWTH+this.stateTimer)/(this.PHASE_BLACK_HOLE_GROWTH+this.PHASE_ACCRETION_FORMATION);this.blackHoleRadius=this.shipSize*i,this.stateTimer>=this.PHASE_ACCRETION_FORMATION&&(this.state="active",this.stateTimer=0,this.isActive=!0,this.isCharging=!1,this.distortion.center={...this.shipPosition},this.distortion.radius=200,this.logger.info("üåå Warp drive fully active - space distortion engaged"),this.events.onBlackHoleFormed?.(),this.events.onSpaceDistorted?.())}updateActiveWarp(e){this.particleIntensity=1,this.blackHoleIntensity=1,this.accretionIntensity=1,this.distortionIntensity=1,this.distortion.center={...this.shipPosition}}updateDeactivation(e){const t=this.stateTimer/this.PHASE_SHUTDOWN,i=1-t;this.distortionIntensity=i,this.blackHoleIntensity=Math.max(0,i-.3),this.accretionIntensity=Math.max(0,i-.1),this.particleIntensity=Math.max(0,i-.5),t>.3&&Math.random()<.3&&this.addDissolutionParticles(),this.stateTimer>=this.PHASE_SHUTDOWN&&(this.state="idle",this.stateTimer=0,this.clearAllEffects(),this.logger.info("‚úÖ Warp drive deactivation complete"),this.events.onWarpEnd?.())}initializeAccretionDisk(){this.accretionParticles=[];for(let e=0;e<40;e++)this.accretionParticles.push({angle:Math.random()*Math.PI*2,radius:15+25*Math.random(),speed:2+4*Math.random(),color:this.getAccretionColor(),size:2*Math.random()+1,life:1})}getAccretionColor(){const e=[{r:96,g:32,b:32},{r:96,g:48,b:16},{r:96,g:64,b:16},{r:80,g:80,b:80}];return e[Math.floor(Math.random()*e.length)]}updateParticles(e){this.particles.forEach(t=>{if("deactivating"===this.state&&!t.absorbed){const i={x:t.position.x-this.shipPosition.x,y:t.position.y-this.shipPosition.y},s=Math.sqrt(i.x*i.x+i.y*i.y);if(s>0){const a=100;t.velocity.x=i.x/s*a,t.velocity.y=i.y/s*a,t.position.x+=t.velocity.x*e,t.position.y+=t.velocity.y*e}t.life-=2*e}})}updateAccretionDisk(e){this.accretionParticles.forEach(t=>{t.angle+=t.speed*e*(.5+.5*Math.random()),t.radius+=2*Math.sin(3*t.angle)*e,"deactivating"===this.state&&(t.radius+=50*e,t.life-=1.5*e)}),this.accretionParticles=this.accretionParticles.filter(e=>e.life>0)}updateSpaceDistortion(e){this.distortionIntensity>0&&(this.distortion.intensity=this.distortionIntensity*(.8+.2*Math.sin(3*this.stateTimer)))}addDissolutionParticles(){for(let e=0;e<5;e++){const e=Math.random()*Math.PI*2,t=30*Math.random();this.particles.push({position:{x:this.shipPosition.x+Math.cos(e)*t,y:this.shipPosition.y+Math.sin(e)*t},velocity:{x:50*Math.cos(e),y:50*Math.sin(e)},color:{r:32,g:32,b:32},life:.5,size:2*Math.random()+1,absorbed:!1})}}clearAllEffects(){this.particles=[],this.accretionParticles=[],this.blackHoleRadius=0,this.particleIntensity=0,this.blackHoleIntensity=0,this.accretionIntensity=0,this.distortionIntensity=0}render(e){"idle"!==this.state&&(this.distortionIntensity>0&&this.renderSpaceDistortion(e),this.particleIntensity>0&&this.renderParticles(e),this.accretionIntensity>0&&this.renderAccretionDisk(e),this.blackHoleIntensity>0&&this.renderBlackHole(e))}renderParticles(e){this.particles.forEach(t=>{if(t.life>0){const i=t.life*this.particleIntensity,s={r:Math.floor(t.color.r*i),g:Math.floor(t.color.g*i),b:Math.floor(t.color.b*i)};e.fillRect(t.position.x-t.size/2,t.position.y-t.size/2,t.size,t.size,s)}})}renderBlackHole(e){const t=this.blackHoleRadius*this.blackHoleIntensity;if(t>0){e.drawCircle(this.shipPosition.x,this.shipPosition.y,t,{r:0,g:0,b:0},!0);const i=1.2*t,s={r:8,g:8,b:8};e.drawCircle(this.shipPosition.x,this.shipPosition.y,i,s,!1)}}renderAccretionDisk(e){this.accretionParticles.forEach(t=>{if(t.life>0){const i=this.shipPosition.x+Math.cos(t.angle)*t.radius,s=this.shipPosition.y+Math.sin(t.angle)*t.radius,a=t.life*this.accretionIntensity,r={r:Math.floor(t.color.r*a),g:Math.floor(t.color.g*a),b:Math.floor(t.color.b*a)};e.fillRect(i-t.size/2,s-t.size/2,t.size,t.size,r)}})}renderSpaceDistortion(e){const t=this.distortion.intensity;if(t>0){const i=8;for(let s=0;s<i;s++){const a=2*Math.PI*s/i,r=this.distortion.radius;for(let i=.5*r;i<1.5*r;i+=10){const s=Math.sin(2*this.stateTimer+.1*i)*t*5,n=this.distortion.center.x+Math.cos(a)*(i+s),o=this.distortion.center.y+Math.sin(a)*(i+s),c=.3*t*(1-(i-.5*r)/r),l={r:Math.floor(16*c),g:Math.floor(24*c),b:Math.floor(32*c)};e.fillRect(n-1,o-1,2,2,l)}}}}getState(){return this.state}isWarpActive(){return this.isActive}isWarpCharging(){return this.isCharging}getWarpProgress(){switch(this.state){case"charging":return this.stateTimer/this.PHASE_PARTICLE_ABSORPTION;case"growth":return this.stateTimer/this.PHASE_BLACK_HOLE_GROWTH;case"accretion":return this.stateTimer/this.PHASE_ACCRETION_FORMATION;case"deactivating":return 1-this.stateTimer/this.PHASE_SHUTDOWN;case"active":return 1;default:return 0}}getSpaceDistortion(){return{...this.distortion}}emergencyShutdown(){"idle"!==this.state&&(this.state="deactivating",this.stateTimer=0,this.isActive=!1,this.isCharging=!1,this.logger.warn("üö® Emergency warp shutdown initiated"))}}class b{constructor(e,t,i,s,a){this.rotation=0,this.thrustLevel=0,this.engineSoundId=null,this.thrustParticles=[],this.physics=e,this.input=t,this.audio=i,this.logger=new r("PlayerShip"),this.stats={maxHealth:100,maxFuel:1e3,thrustPower:5e3,rotationSpeed:3,maxVelocity:500,mass:1e3,...a},this.currentFuel=this.stats.maxFuel,this.physicsObject=this.physics.createShip("player_ship",s,this.stats.mass),this.physicsObject.health=this.stats.maxHealth,this.physicsObject.onCollision=e=>this.handleCollision(e),this.physics.addObject(this.physicsObject),this.shipSystems=new f({maxHull:this.stats.maxHealth,maxFuel:this.stats.maxFuel,enginePower:this.stats.thrustPower,engineEfficiency:.85},{onSystemDamage:(e,t)=>{this.logger.warn(`‚ö†Ô∏è ${e} system damaged: ${t}`),this.audio.playUIBeep()},onCriticalDamage:e=>{this.logger.error(`üí• Critical damage in ${e} section!`)},onPowerFailure:()=>{this.logger.error("‚ö° Power failure - emergency protocols activated")},onOverheat:()=>{this.logger.warn("üî• Ship overheating - reducing power")}}),this.warpDrive=new v({speedMultiplier:20,energyCost:15,particleCount:50},{onWarpStart:()=>{this.logger.info("üåå Warp drive activation sequence initiated")},onWarpEnd:()=>{this.logger.info("‚úÖ Warp drive deactivation complete")},onBlackHoleFormed:()=>{this.logger.info("üï≥Ô∏è Black hole formation complete")},onSpaceDistorted:()=>{this.logger.info("üåÄ Space-time distortion field active")}}),this.logger.info("üöÄ Player ship created",{position:s,stats:this.stats})}update(e){this.shipSystems.update(e);const t=this.warpDrive.update(e,this.physicsObject.position);this.handleInput(e),this.updateRotation(e),this.updateMovement(e,t),this.updateThrustParticles(e),this.updateAudio(),this.consumeFuel(e)}handleInput(e){(this.input.isKeyPressed("KeyW")||this.input.isActionPressed("warp"))&&this.handleWarpInput();const t=this.input.getThrustInput(),i=this.input.getRotationInput();for(this.thrustLevel=Math.max(0,t),this.rotation+=i*this.stats.rotationSpeed*e;this.rotation<0;)this.rotation+=2*Math.PI;for(;this.rotation>2*Math.PI;)this.rotation-=2*Math.PI}updateRotation(e){}handleWarpInput(){const e=this.shipSystems.getStatus();e.warpDrive?e.power<20?this.logger.warn("‚ö†Ô∏è Insufficient power for warp drive"):this.warpDrive.isWarpActive()?this.warpDrive.deactivateWarp():this.warpDrive.isWarpCharging()||this.warpDrive.activateWarp(this.physicsObject.position,20):this.logger.warn("‚ö†Ô∏è Warp drive offline")}updateMovement(e,t=1){if(this.thrustLevel>0&&this.currentFuel>0){const e={x:Math.cos(this.rotation-Math.PI/2),y:Math.sin(this.rotation-Math.PI/2)},i=this.thrustLevel*this.stats.thrustPower*t;this.physics.applyThrust(this.physicsObject.id,e,i),this.createThrustParticles()}const i=Math.sqrt(this.physicsObject.velocity.x**2+this.physicsObject.velocity.y**2);if(i>this.stats.maxVelocity){const e=this.stats.maxVelocity/i;this.physicsObject.velocity.x*=e,this.physicsObject.velocity.y*=e}}updateThrustParticles(e){for(let t=this.thrustParticles.length-1;t>=0;t--){const i=this.thrustParticles[t];i.position.x+=i.velocity.x*e,i.position.y+=i.velocity.y*e,i.life-=e,i.life<=0&&this.thrustParticles.splice(t,1)}}createThrustParticles(){if(this.thrustParticles.length>20)return;const e={position:{x:this.physicsObject.position.x-20*Math.cos(this.rotation-Math.PI/2),y:this.physicsObject.position.y-20*Math.sin(this.rotation-Math.PI/2)},velocity:{x:100*-Math.cos(this.rotation-Math.PI/2)+50*(Math.random()-.5),y:100*-Math.sin(this.rotation-Math.PI/2)+50*(Math.random()-.5)},life:.5,maxLife:.5};this.thrustParticles.push(e)}updateAudio(){this.thrustLevel>0&&this.currentFuel>0?this.engineSoundId||(this.engineSoundId=this.audio.playEngineSound()):this.engineSoundId&&(this.audio.stopSound(this.engineSoundId),this.engineSoundId=null)}consumeFuel(e){if(this.thrustLevel>0){const t=10*this.thrustLevel*e;this.currentFuel=Math.max(0,this.currentFuel-t),0===this.currentFuel&&this.logger.warn("Ship out of fuel!")}}handleCollision(e){switch(this.logger.debug(`Ship collision with ${e.type}: ${e.id}`),e.type){case"planet":case"asteroid":const e=10;this.takeDamage(e),this.audio.playExplosion(this.physicsObject.position);break;case"projectile":this.takeDamage(5)}}takeDamage(e){this.physicsObject.health&&(this.physicsObject.health=Math.max(0,this.physicsObject.health-e),this.logger.debug(`Ship took ${e} damage, health: ${this.physicsObject.health}`),0===this.physicsObject.health&&this.destroy())}heal(e){this.physicsObject.health&&(this.physicsObject.health=Math.min(this.stats.maxHealth,this.physicsObject.health+e),this.logger.debug(`Ship healed ${e}, health: ${this.physicsObject.health}`))}addFuel(e){this.currentFuel=Math.min(this.stats.maxFuel,this.currentFuel+e),this.logger.debug(`Added ${e} fuel, current: ${this.currentFuel}`)}fireWeapon(){if(this.input.isActionPressed()){const e=25,t=this.physicsObject.position.x+Math.cos(this.rotation-Math.PI/2)*e,i=this.physicsObject.position.y+Math.sin(this.rotation-Math.PI/2)*e,s=800,a={x:Math.cos(this.rotation-Math.PI/2)*s+this.physicsObject.velocity.x,y:Math.sin(this.rotation-Math.PI/2)*s+this.physicsObject.velocity.y},r=this.physics.createProjectile(`projectile_${Date.now()}`,{x:t,y:i},a);this.physics.addObject(r),this.audio.playLaserSound(this.physicsObject.position),this.logger.debug("Weapon fired")}}destroy(){this.logger.warn("Ship destroyed!"),this.audio.playExplosion(this.physicsObject.position),this.engineSoundId&&(this.audio.stopSound(this.engineSoundId),this.engineSoundId=null),this.physics.removeObject(this.physicsObject.id)}renderThrustParticles(e){this.thrustParticles.forEach(t=>{const i=t.life/t.maxLife,s={r:255,g:Math.floor(255*i),b:0,a:Math.floor(255*i)};e.setPixel(Math.floor(t.position.x),Math.floor(t.position.y),s)})}getShipData(){return{position:{...this.physicsObject.position},velocity:{...this.physicsObject.velocity},rotation:this.rotation,health:this.physicsObject.health||0,fuel:this.currentFuel,thrustLevel:this.thrustLevel,maxHealth:this.stats.maxHealth,maxFuel:this.stats.maxFuel}}getPhysicsObject(){return this.physicsObject}getPosition(){return{...this.physicsObject.position}}getRotation(){return this.rotation}isAlive(){return this.shipSystems.getStatus().hull>0}getSystemStatus(){return this.shipSystems.getStatus()}getShipSystems(){return this.shipSystems}applyDamage(e,t=p.Core,i="kinetic"){this.shipSystems.applyDamage(t,e,i),this.physicsObject.health=this.shipSystems.getStatus().hull}setPowerAllocation(e){this.shipSystems.setPowerAllocation(e)}toggleSystem(e,t){this.shipSystems.toggleSystem(e,t)}getWarpDrive(){return this.warpDrive}isWarpActive(){return this.warpDrive.isWarpActive()}getWarpState(){return this.warpDrive.getState()}renderWarpEffects(e){this.warpDrive.render(e)}cleanup(){this.engineSoundId&&this.audio.stopSound(this.engineSoundId),this.physics.removeObject(this.physicsObject.id),this.logger.info("üßπ Player ship cleanup completed")}}var S=(e=>(e.Terrestrial="terrestrial",e.GasGiant="gas_giant",e.IceGiant="ice_giant",e.Desert="desert",e.Ocean="ocean",e.Volcanic="volcanic",e.Frozen="frozen",e.Toxic="toxic",e))(S||{});class x{constructor(e={}){this.stars=new Map,this.starSystems=new Map,this.galaxyMap=[],this.logger=new r("GalaxyGenerator"),this.config={seed:42,size:5e4,starCount:1e3,spiralArms:4,armTightness:.3,coreSize:5e3,starDensity:.1,...e},this.random=new w(this.config.seed),this.logger.info("üåå Galaxy generator initialized",{seed:this.config.seed,size:this.config.size,starCount:this.config.starCount})}async generateGalaxy(){this.logger.info("üîÑ Generating galaxy...");const e=performance.now();try{this.generateStarPositions(),this.generateStarProperties(),await this.generateStarSystems(),this.generateAnomalies();const t=performance.now();this.logger.info(`‚úÖ Galaxy generated in ${(t-e).toFixed(2)}ms`,{stars:this.stars.size,systems:this.starSystems.size})}catch(t){throw this.logger.error("‚ùå Galaxy generation failed",t),t}}generateStarPositions(){this.logger.debug("Generating star positions...");for(let e=0;e<this.config.starCount;e++){const t=this.generateSpiralPosition(e),i=`star_${e.toString().padStart(4,"0")}`,s={id:i,name:this.generateStarName(e),position:t,type:"G",mass:1,luminosity:1,temperature:5778,age:4600,metallicity:.02,color:{r:255,g:255,b:255},brightness:1,radius:1};this.stars.set(i,s),this.galaxyMap.push(s)}this.logger.debug(`Generated ${this.stars.size} star positions`)}generateSpiralPosition(e){const t=Math.pow(this.random.next(),.7),i=t*this.config.size,s=2*Math.floor(this.random.next()*this.config.spiralArms)*Math.PI/this.config.spiralArms+t*this.config.armTightness*4*Math.PI,a=.5*(this.random.next()-.5),r=.2*(this.random.next()-.5)*i,n=s+a,o=Math.max(0,i+r);return{x:Math.cos(n)*o,y:Math.sin(n)*o}}generateStarName(e){const t=["Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa"],i=["Centauri","Draconis","Lyrae","Cygni","Aquilae","Orionis","Ursae","Cassiopeiae"],s=t[e%t.length],a=i[Math.floor(e/t.length)%i.length],r=Math.floor(e/(t.length*i.length))+1;return r>1?`${s} ${a} ${r}`:`${s} ${a}`}generateStarProperties(){this.logger.debug("Generating star properties...");for(const e of this.stars.values()){const t=Math.sqrt(e.position.x**2+e.position.y**2),i=Math.max(0,1-t/this.config.coreSize);e.metallicity=Math.max(.001,.02*(.5+.5*i)*this.random.range(.5,1.5)),e.mass=this.generateStellarMass(),e.type=this.getStarTypeFromMass(e.mass),e.luminosity=this.calculateLuminosity(e.mass,e.type),e.temperature=this.calculateTemperature(e.mass,e.type),e.radius=this.calculateRadius(e.mass,e.luminosity,e.temperature),e.age=this.generateStellarAge(e.mass,e.type),e.color=this.getStarColor(e.temperature),e.brightness=Math.min(1,e.luminosity/100)}this.logger.debug("Star properties generated")}generateStellarMass(){const e=this.random.next();return e<.8?.1+.7*Math.pow(e/.8,2):e<.95?.8+2.2*Math.pow((e-.8)/.15,1.5):3+47*Math.pow((e-.95)/.05,3)}getStarTypeFromMass(e){return e>30?"O":e>10?"B":e>2.5?"A":e>1.4?"F":e>.8?"G":e>.5?"K":"M"}calculateLuminosity(e,t){let i=3.5;switch(t){case"O":case"B":case"G":i=4;break;case"A":case"F":i=3.5;break;case"K":case"M":i=2.3}return Math.pow(e,i)}calculateTemperature(e,t){return({O:35e3,B:2e4,A:8500,F:6500,G:5500,K:4e3,M:3e3}[t]||5500)*this.random.range(.9,1.1)}calculateRadius(e,t,i){return Math.sqrt(t)*Math.pow(5778/i,2)}generateStellarAge(e,t){const i=1e4*Math.pow(e,-2.5);return this.random.next()*i}getStarColor(e){return e>25e3?{r:155,g:176,b:255}:e>1e4?{r:202,g:215,b:255}:e>7500?{r:248,g:247,b:255}:e>6e3?{r:255,g:244,b:234}:e>5e3?{r:255,g:214,b:170}:{r:255,g:204,b:111}}async generateStarSystems(){this.logger.debug("Generating star systems...");let e=0;for(const t of this.stars.values())if(this.random.next()<.7){const i=await this.generateStarSystem(t);this.starSystems.set(t.id,i),e++}this.logger.debug(`Generated ${e} star systems`)}async generateStarSystem(e){const t={id:e.id,name:`${e.name} System`,position:e.position,star:e,planets:[],asteroidBelts:[],habitableZoneInner:0,habitableZoneOuter:0,systemAge:e.age,metallicity:e.metallicity},i=e.luminosity;t.habitableZoneInner=Math.sqrt(i/1.1),t.habitableZoneOuter=Math.sqrt(i/.53);const s=Math.floor(this.random.range(0,8));let a=this.random.range(.1,.5);for(let r=0;r<s;r++){const i=this.generatePlanet(e,t,r,a);t.planets.push(i),a*=this.random.range(1.4,2)}return this.random.next()<.3&&t.asteroidBelts.push({id:`${e.id}_belt_1`,innerRadius:a,outerRadius:1.5*a,density:this.random.range(.3,.8),composition:this.random.choice(["rocky","metallic","icy"])}),t}generatePlanet(e,t,i,s){const a=`${e.id}_planet_${i}`;let r;r=s<.5*t.habitableZoneInner?"volcanic":s>2*t.habitableZoneOuter?this.random.choice(["gas_giant","ice_giant","frozen"]):s>=t.habitableZoneInner&&s<=t.habitableZoneOuter?this.random.choice(["terrestrial","ocean","desert"]):this.random.choice(["terrestrial","desert","frozen"]);const n=this.generatePlanetMass(r),o=this.calculatePlanetRadius(n,r),c=this.calculatePlanetTemperature(e,s),l={id:a,name:`${e.name} ${this.numberToRoman(i+1)}`,starId:e.id,orbitDistance:s,orbitPeriod:this.calculateOrbitPeriod(s,e.mass),radius:o,mass:n,type:r,temperature:c,hasAtmosphere:this.determineAtmosphere(r,n,c),hasRings:this.random.next()<.1,moons:[],surfaceType:this.determineSurfaceType(r,c),surfaceColor:this.generateSurfaceColor(r),hasWater:c>273&&c<373&&"gas_giant"!==r,hasLife:!1};l.hasAtmosphere&&(l.atmosphereType=this.determineAtmosphereType(r,c));const h=this.generateMoonCount(r,n);for(let d=0;d<h;d++)l.moons.push(this.generateMoon(l,d));return l}generatePlanetMass(e){switch(e){case"gas_giant":return this.random.range(50,500);case"ice_giant":return this.random.range(10,50);case"terrestrial":case"ocean":case"desert":case"volcanic":case"frozen":case"toxic":return this.random.range(.1,3);default:return 1}}calculatePlanetRadius(e,t){return Math.pow(e,.27)}calculatePlanetTemperature(e,t){const i=e.luminosity/(t*t);return 278.5*Math.pow(i,.25)*this.random.range(.8,1.2)}calculateOrbitPeriod(e,t){return 365.25*Math.sqrt(Math.pow(e,3)/t)}determineAtmosphere(e,t,i){return"gas_giant"===e||"ice_giant"===e||!(t<.1)&&(!(i>2e3)&&this.random.next()<.7)}determineSurfaceType(e,t){switch(e){case"ocean":return"ocean";case"desert":return"desert";case"volcanic":return"lava";case"frozen":return"ice";case"gas_giant":case"ice_giant":return"gas";case"toxic":return"toxic";default:return"rocky"}}generateSurfaceColor(e){switch(e){case"ocean":return{r:0,g:100,b:200};case"desert":return{r:200,g:150,b:100};case"volcanic":return{r:150,g:50,b:0};case"frozen":return{r:200,g:220,b:255};case"gas_giant":return{r:180,g:140,b:100};case"ice_giant":return{r:100,g:150,b:200};case"toxic":return{r:100,g:150,b:50};default:return{r:120,g:100,b:80}}}determineAtmosphereType(e,t){return t>1e3?"toxic":"gas_giant"===e?"hydrogen":"ice_giant"===e?"methane":t<200?"thin":"carbon_dioxide"}generateMoonCount(e,t){return"gas_giant"===e?Math.floor(this.random.range(5,20)):"ice_giant"===e?Math.floor(this.random.range(2,10)):t>1?Math.floor(this.random.range(0,3)):this.random.next()<.3?1:0}generateMoon(e,t){return{id:`${e.id}_moon_${t}`,name:`${e.name} ${String.fromCharCode(97+t)}`,planetId:e.id,orbitDistance:this.random.range(3,20),orbitPeriod:this.random.range(12,168),radius:this.random.range(.1,.5),mass:this.random.range(.01,.2),type:this.random.choice(["rocky","icy","captured_asteroid"]),tidallyLocked:this.random.next()<.8}}generateAnomalies(){}numberToRoman(e){const t=[10,9,5,4,1],i=["X","IX","V","IV","I"];let s="";for(let a=0;a<t.length;a++)for(;e>=t[a];)s+=i[a],e-=t[a];return s}getStarsInRadius(e,t){return this.galaxyMap.filter(i=>Math.sqrt(Math.pow(i.position.x-e.x,2)+Math.pow(i.position.y-e.y,2))<=t)}getStarSystem(e){return this.starSystems.get(e)}getAllStars(){return[...this.galaxyMap]}getAllSystems(){return Array.from(this.starSystems.values())}getGalaxyConfig(){return{...this.config}}}class w{constructor(e){this.seed=e}next(){return this.seed=(9301*this.seed+49297)%233280,this.seed/233280}range(e,t){return e+this.next()*(t-e)}choice(e){return e[Math.floor(this.next()*e.length)]}integer(e,t){return Math.floor(this.range(e,t+1))}}class M{constructor(){this.cachedSaveData=null,this.loadedChunks=new Map,this.platform=i.detect(),this.logger=new r("GalaxyPersistence"),this.compressionEnabled=!0,this.logger.info("üíæ Galaxy persistence system initialized",{platform:this.platform,compressionEnabled:this.compressionEnabled})}async saveGalaxy(e,t,i){this.logger.info("üíæ Saving galaxy data...");const s=performance.now();try{const a={version:"2.0.0",timestamp:Date.now(),config:e.getGalaxyConfig(),playerData:{...t},stars:[],systems:[],exploredSystems:[...i.exploredSystems],discoveredPlanets:[...i.discoveredPlanets],visitedLocations:[...i.visitedLocations],reputation:new Map,tradeRoutes:[]};a.stars=this.compressStarData(e.getAllStars()),a.systems=this.compressSystemData(e.getAllSystems()),this.cachedSaveData=a,await this.saveToStorage(a);const r=performance.now();this.logger.info(`‚úÖ Galaxy saved successfully in ${(r-s).toFixed(2)}ms`,{stars:a.stars.length,systems:a.systems.length,size:this.calculateSaveSize(a)})}catch(a){throw this.logger.error("‚ùå Failed to save galaxy",a),a}}async loadGalaxy(){this.logger.info("üìÅ Loading galaxy data...");const e=performance.now();try{const t=await this.loadFromStorage();if(!t)return this.logger.warn("No galaxy save data found"),null;this.validateSaveData(t);const i=new x(t.config);await this.restoreGalaxyData(i,t);const s=performance.now();return this.logger.info(`‚úÖ Galaxy loaded successfully in ${(s-e).toFixed(2)}ms`),{generator:i,playerData:t.playerData,explorationData:{exploredSystems:t.exploredSystems,discoveredPlanets:t.discoveredPlanets,visitedLocations:t.visitedLocations}}}catch(t){return this.logger.error("‚ùå Failed to load galaxy",t),null}}async loadGalaxyChunk(e,t){const i=this.getChunkKey(t.center,t.radius);if(this.loadedChunks.has(i))return this.loadedChunks.get(i);this.logger.debug(`Loading galaxy chunk: ${i}`);try{const s=e.getStarsInRadius(t.center,t.radius).slice(0,t.maxSystems),a=[];for(const i of s){const s=e.getStarSystem(i.id);s&&(t.includeUnexplored||this.isSystemExplored(s.id))&&a.push(s)}return this.loadedChunks.set(i,a),this.logger.debug(`Loaded chunk with ${a.length} systems`),a}catch(s){return this.logger.error(`Failed to load galaxy chunk: ${i}`,s),[]}}compressStarData(e){return e.map(e=>({id:e.id,name:e.name,pos:[Math.round(e.position.x),Math.round(e.position.y)],type:e.type,mass:Math.round(100*e.mass)/100,temp:Math.round(e.temperature),color:[e.color.r,e.color.g,e.color.b]}))}compressSystemData(e){return e.map(e=>({id:e.id,planets:this.compressPlanetData(e.planets),explored:this.isSystemExplored(e.id)}))}compressPlanetData(e){return e.map(e=>({id:e.id,name:e.name,type:e.type,orbit:Math.round(100*e.orbitDistance)/100,radius:Math.round(100*e.radius)/100,temp:Math.round(e.temperature),hasAtmo:e.hasAtmosphere,moons:e.moons.length,color:[e.surfaceColor.r,e.surfaceColor.g,e.surfaceColor.b]}))}async restoreGalaxyData(e,t){this.logger.debug("Restoring galaxy data from compressed format..."),await e.generateGalaxy(),this.logger.debug("Galaxy data restoration completed")}async saveToStorage(t){const i=JSON.stringify(t);switch(this.platform){case e.Desktop:case e.Web:case e.Mobile:await this.saveToWebStorage(i);break;case e.Tauri:await this.saveToFileSystem(i);break;case e.Cordova:await this.saveToCordovaFile(i);break;default:throw new Error(`Unsupported platform for saving: ${this.platform}`)}}async loadFromStorage(){switch(this.platform){case e.Desktop:case e.Web:case e.Mobile:return await this.loadFromWebStorage();case e.Tauri:return await this.loadFromFileSystem();case e.Cordova:return await this.loadFromCordovaFile();default:throw new Error(`Unsupported platform for loading: ${this.platform}`)}}async saveToWebStorage(e){try{"indexedDB"in window?await this.saveToIndexedDB(e):localStorage.setItem("spaceExplorer_galaxy",e)}catch(t){try{localStorage.setItem("spaceExplorer_galaxy",e)}catch(i){throw new Error("Failed to save to both IndexedDB and localStorage")}}}async loadFromWebStorage(){try{if("indexedDB"in window){const e=await this.loadFromIndexedDB();if(e)return e}const e=localStorage.getItem("spaceExplorer_galaxy");return e?JSON.parse(e):null}catch(e){return this.logger.error("Failed to load from web storage",e),null}}async saveToIndexedDB(e){return new Promise((t,i)=>{const s=indexedDB.open("SpaceExplorerDB",1);s.onerror=()=>i(s.error),s.onupgradeneeded=()=>{const e=s.result;e.objectStoreNames.contains("galaxy")||e.createObjectStore("galaxy")},s.onsuccess=()=>{const a=s.result.transaction(["galaxy"],"readwrite").objectStore("galaxy").put(e,"galaxyData");a.onsuccess=()=>t(),a.onerror=()=>i(a.error)}})}async loadFromIndexedDB(){return new Promise((e,t)=>{const i=indexedDB.open("SpaceExplorerDB",1);i.onerror=()=>e(null),i.onsuccess=()=>{const t=i.result;if(!t.objectStoreNames.contains("galaxy"))return void e(null);const s=t.transaction(["galaxy"],"readonly").objectStore("galaxy").get("galaxyData");s.onsuccess=()=>{const t=s.result;e(t?JSON.parse(t):null)},s.onerror=()=>e(null)}})}async saveToFileSystem(e){throw this.logger.warn("File system save not implemented yet"),new Error("File system save not implemented")}async loadFromFileSystem(){return this.logger.warn("File system load not implemented yet"),null}async saveToCordovaFile(e){throw this.logger.warn("Cordova file save not implemented yet"),new Error("Cordova file save not implemented")}async loadFromCordovaFile(){return this.logger.warn("Cordova file load not implemented yet"),null}validateSaveData(e){if(!e.version)throw new Error("Invalid save data: missing version");if(!e.config||!e.stars||!e.systems)throw new Error("Invalid save data: missing core data");const[t]=e.version.split(".").map(Number);if(2!==t)throw new Error(`Incompatible save version: ${e.version}`)}calculateSaveSize(e){const t=JSON.stringify(e),i=new Blob([t]).size;return i<1024?`${i} B`:i<1048576?`${(i/1024).toFixed(1)} KB`:`${(i/1048576).toFixed(1)} MB`}getChunkKey(e,t){return`chunk_${1e3*Math.round(e.x/1e3)}_${1e3*Math.round(e.y/1e3)}_${100*Math.round(t/100)}`}isSystemExplored(e){return!!this.cachedSaveData&&this.cachedSaveData.exploredSystems.includes(e)}clearCache(){this.cachedSaveData=null,this.loadedChunks.clear(),this.logger.debug("Galaxy persistence cache cleared")}getStorageStats(){return{cacheSize:this.cachedSaveData?1:0,loadedChunks:this.loadedChunks.size,lastSaveTime:this.cachedSaveData?.timestamp}}async exportGalaxy(){if(!this.cachedSaveData)throw new Error("No galaxy data to export");return JSON.stringify(this.cachedSaveData,null,2)}async importGalaxy(e){try{const t=JSON.parse(e);this.validateSaveData(t),await this.saveToStorage(t),this.cachedSaveData=t,this.logger.info("Galaxy data imported successfully")}catch(t){throw this.logger.error("Failed to import galaxy data",t),t}}}class P{constructor(e={}){this.isInitialized=!1,this.loadedSystems=new Map,this.nearbyStars=[],this.currentSystem=null,this.autoSaveTimer=null,this.logger=new r("GalaxyManager"),this.config={enableAutoSave:!0,autoSaveInterval:6e4,chunkLoadRadius:500,maxLoadedSystems:100,galaxyConfig:{seed:Math.floor(1e6*Math.random()),starCount:800,size:3e4},...e},this.generator=new x(this.config.galaxyConfig),this.persistence=new M,this.explorationData={exploredSystems:new Set,discoveredPlanets:new Set,visitedLocations:[],currentSystemId:"",homeSystemId:""},this.playerData={currentSystemId:"",homeSystemId:"",totalSystemsVisited:0,totalPlanetsExplored:0,totalDistanceTraveled:0,galaxyDiscoveryProgress:0},this.logger.info("üåå Galaxy manager initialized",{config:this.config})}async initialize(){this.logger.info("üöÄ Initializing galaxy...");try{const e=await this.persistence.loadGalaxy();e?(this.logger.info("üìÅ Loading existing galaxy..."),this.generator=e.generator,this.playerData=e.playerData,this.explorationData={exploredSystems:new Set(e.explorationData.exploredSystems),discoveredPlanets:new Set(e.explorationData.discoveredPlanets),visitedLocations:e.explorationData.visitedLocations,currentSystemId:e.playerData.currentSystemId,homeSystemId:e.playerData.homeSystemId}):(this.logger.info("üîÑ Generating new galaxy..."),await this.generator.generateGalaxy(),await this.setupNewGame()),await this.loadCurrentArea(),this.config.enableAutoSave&&this.setupAutoSave(),this.isInitialized=!0,this.logger.info("‚úÖ Galaxy initialization completed")}catch(e){throw this.logger.error("‚ùå Galaxy initialization failed",e),e}}async setupNewGame(){const e=this.generator.getStarsInRadius({x:0,y:0},5e3);let t=null;for(const i of e)if("G"===i.type){const e=this.generator.getStarSystem(i.id);if(e&&e.planets.length>0){t=e;break}}if(!t)for(const i of e){const e=this.generator.getStarSystem(i.id);if(e&&e.planets.length>0){t=e;break}}if(!t)throw new Error("Could not find suitable starting system");this.explorationData.currentSystemId=t.id,this.explorationData.homeSystemId=t.id,this.playerData.currentSystemId=t.id,this.playerData.homeSystemId=t.id,this.exploreSystem(t.id),this.logger.info(`üè† Starting system set: ${t.name}`)}async loadCurrentArea(){if(!this.explorationData.currentSystemId)return;if(this.currentSystem=this.generator.getStarSystem(this.explorationData.currentSystemId),!this.currentSystem)return void this.logger.error("Current system not found");const e={center:this.currentSystem.position,radius:this.config.chunkLoadRadius,maxSystems:this.config.maxLoadedSystems,includeUnexplored:!0},t=await this.persistence.loadGalaxyChunk(this.generator,e);this.loadedSystems.clear();for(const i of t)this.loadedSystems.set(i.id,i);this.nearbyStars=this.generator.getStarsInRadius(this.currentSystem.position,this.config.chunkLoadRadius/2),this.logger.debug(`Loaded ${t.length} systems and ${this.nearbyStars.length} stars`)}async travelToSystem(e){const t=this.generator.getStarSystem(e);if(!t)return this.logger.error(`System not found: ${e}`),!1;const i=this.currentSystem?.position||{x:0,y:0},s=Math.sqrt(Math.pow(t.position.x-i.x,2)+Math.pow(t.position.y-i.y,2));return this.explorationData.currentSystemId=e,this.playerData.currentSystemId=e,this.playerData.totalDistanceTraveled+=s,this.explorationData.exploredSystems.has(e)||this.playerData.totalSystemsVisited++,this.exploreSystem(e),this.explorationData.visitedLocations.push({systemId:e,timestamp:Date.now(),coordinates:t.position}),await this.loadCurrentArea(),this.logger.info(`üöÄ Traveled to ${t.name} (${s.toFixed(1)} LY)`),!0}exploreSystem(e){if(!this.explorationData.exploredSystems.has(e)){this.explorationData.exploredSystems.add(e);const t=this.generator.getStarSystem(e);if(t)for(const e of t.planets)this.discoverPlanet(e.id);this.updateExplorationProgress(),this.logger.debug(`System explored: ${e}`)}}discoverPlanet(e){this.explorationData.discoveredPlanets.has(e)||(this.explorationData.discoveredPlanets.add(e),this.playerData.totalPlanetsExplored++,this.logger.debug(`Planet discovered: ${e}`))}updateExplorationProgress(){const e=this.generator.getAllSystems().length,t=this.explorationData.exploredSystems.size;this.playerData.galaxyDiscoveryProgress=e>0?t/e:0}getNearbyStars(){return[...this.nearbyStars]}getLoadedSystems(){return Array.from(this.loadedSystems.values())}getCurrentSystem(){return this.currentSystem}getSystem(e){return this.loadedSystems.get(e)||this.generator.getStarSystem(e)}findSystemsInRadius(e,t){const i=this.generator.getStarsInRadius(e,t),s=[];for(const a of i){const e=this.generator.getStarSystem(a.id);e&&s.push(e)}return s}isSystemExplored(e){return this.explorationData.exploredSystems.has(e)}isPlanetDiscovered(e){return this.explorationData.discoveredPlanets.has(e)}getGalaxyStats(){const e=this.generator.getAllStars().length,t=this.generator.getAllSystems(),i=t.length;return t.reduce((e,t)=>e+t.planets.length,0),{totalStars:e,totalSystems:i,exploredSystems:this.explorationData.exploredSystems.size,discoveredPlanets:this.explorationData.discoveredPlanets.size,systemsVisited:this.playerData.totalSystemsVisited,distanceTraveled:this.playerData.totalDistanceTraveled,currentSystemName:this.currentSystem?.name||"Unknown",galaxySize:this.generator.getGalaxyConfig().size,explorationProgress:this.playerData.galaxyDiscoveryProgress}}async saveGalaxy(){if(this.isInitialized)try{const e={exploredSystems:Array.from(this.explorationData.exploredSystems),discoveredPlanets:Array.from(this.explorationData.discoveredPlanets),visitedLocations:this.explorationData.visitedLocations};await this.persistence.saveGalaxy(this.generator,this.playerData,e),this.logger.debug("Galaxy saved successfully")}catch(e){this.logger.error("Failed to save galaxy",e)}}setupAutoSave(){this.autoSaveTimer&&clearInterval(this.autoSaveTimer),this.autoSaveTimer=window.setInterval(async()=>{await this.saveGalaxy()},this.config.autoSaveInterval),this.logger.debug(`Auto-save enabled (${this.config.autoSaveInterval}ms interval)`)}getPlayerData(){return{...this.playerData}}getExplorationData(){return{exploredSystems:new Set(this.explorationData.exploredSystems),discoveredPlanets:new Set(this.explorationData.discoveredPlanets),visitedLocations:[...this.explorationData.visitedLocations],currentSystemId:this.explorationData.currentSystemId,homeSystemId:this.explorationData.homeSystemId}}async exportGalaxy(){return await this.persistence.exportGalaxy()}async importGalaxy(e){await this.persistence.importGalaxy(e),this.isInitialized=!1,await this.initialize()}getStorageStats(){return this.persistence.getStorageStats()}searchSystems(e){const t=this.generator.getAllSystems(),i=e.toLowerCase();return t.filter(e=>e.name.toLowerCase().includes(i)||e.star.name.toLowerCase().includes(i)).slice(0,20)}getSystemDistance(e,t){const i=this.getSystem(e),s=this.getSystem(t);return i&&s?Math.sqrt(Math.pow(s.position.x-i.position.x,2)+Math.pow(s.position.y-i.position.y,2)):-1}getHomeSystem(){return this.explorationData.homeSystemId&&this.getSystem(this.explorationData.homeSystemId)||null}updateConfig(e){this.config={...this.config,...e},e.autoSaveInterval&&this.config.enableAutoSave&&this.setupAutoSave(),this.logger.debug("Galaxy manager configuration updated")}async cleanup(){await this.saveGalaxy(),this.autoSaveTimer&&(clearInterval(this.autoSaveTimer),this.autoSaveTimer=null),this.loadedSystems.clear(),this.nearbyStars=[],this.persistence.clearCache(),this.logger.info("üßπ Galaxy manager cleanup completed")}isGalaxyInitialized(){return this.isInitialized}}class C{constructor(e={},t={}){this.panels=[],this.interactiveElements=new Map,this.flickerTimer=0,this.scanlineOffset=0,this.glitchTimer=0,this.hoveredElement=null,this.selectedElement=null,this.isDragging=!1,this.damageReports=new Map,this.cargoLoad=0,this.radarZoom=1,this.radarMode="system",this.logger=new r("CockpitStatusBar"),this.interactions=t,this.config={screenWidth:1024,screenHeight:768,panelHeight:115,panelSpacing:5,enableInteraction:!0,crtEffects:!0,...e},this.systemStatus={hull:100,shields:100,power:100,fuel:100,heat:0,enginesOnline:!0,shieldsOnline:!0,weaponsOnline:!0,lifeSupport:!0,warpDrive:!0,engineEfficiency:1,shieldStrength:1,weaponAccuracy:1,sensorRange:1},this.setupPanels(),this.setupInteractiveElements(),this.logger.info("üñ•Ô∏è Cockpit status bar initialized",{panels:this.panels.length,interactiveElements:this.interactiveElements.size})}setupPanels(){const e=(this.config.screenWidth-6*this.config.panelSpacing)/5,t=this.config.screenHeight-this.config.panelHeight;this.panels=[{x:this.config.panelSpacing,y:t,width:e,height:this.config.panelHeight,title:"SHIP SYSTEMS"},{x:this.config.panelSpacing+1*(e+this.config.panelSpacing),y:t,width:e,height:this.config.panelHeight,title:"SHIP CONTROL"},{x:this.config.panelSpacing+2*(e+this.config.panelSpacing),y:t,width:e,height:this.config.panelHeight,title:"DAMAGE & CARGO"},{x:this.config.panelSpacing+3*(e+this.config.panelSpacing),y:t,width:e,height:this.config.panelHeight,title:"WEAPONS"},{x:this.config.panelSpacing+4*(e+this.config.panelSpacing),y:t,width:e,height:this.config.panelHeight,title:"RADAR & NAV"}]}setupInteractiveElements(){this.setupSystemsPanel(),this.setupControlPanel(),this.setupDamagePanel(),this.setupWeaponsPanel(),this.setupRadarPanel()}setupSystemsPanel(){const e=this.panels[0];this.addElement("hull_indicator",e.x+10,e.y+20,25,8,"monitor","HULL"),this.addElement("shields_indicator",e.x+10,e.y+35,25,8,"monitor","SHIELDS"),this.addElement("power_indicator",e.x+10,e.y+50,25,8,"monitor","POWER"),this.addElement("fuel_indicator",e.x+10,e.y+65,25,8,"monitor","FUEL"),this.addElement("heat_indicator",e.x+10,e.y+80,25,8,"monitor","HEAT"),this.addElement("reactor_warning",e.x+80,e.y+20,12,12,"button","RCTR"),this.addElement("hull_warning",e.x+80,e.y+35,12,12,"button","HULL"),this.addElement("shield_warning",e.x+80,e.y+50,12,12,"button","SHLD"),this.addElement("warp_warning",e.x+80,e.y+65,12,12,"button","WARP")}setupControlPanel(){const e=this.panels[1];this.addElement("engines_toggle",e.x+10,e.y+20,30,15,"toggle","ENGINES"),this.addElement("shields_toggle",e.x+50,e.y+20,30,15,"toggle","SHIELDS"),this.addElement("weapons_toggle",e.x+90,e.y+20,30,15,"toggle","WEAPONS"),this.addElement("warp_toggle",e.x+130,e.y+20,30,15,"toggle","WARP"),this.addElement("thrust_slider",e.x+10,e.y+45,60,10,"slider","THRUST"),this.addElement("shield_slider",e.x+80,e.y+45,60,10,"slider","SHIELDS"),this.addElement("autodestruct",e.x+60,e.y+70,40,20,"button","AUTO-DESTRUCT")}setupDamagePanel(){const e=this.panels[2];this.addElement("damage_monitor",e.x+10,e.y+20,80,50,"monitor","DAMAGE"),this.addElement("cargo_indicator",e.x+100,e.y+20,60,15,"monitor","CARGO"),this.addElement("inventory_btn",e.x+10,e.y+80,35,15,"button","INV"),this.addElement("codex_btn",e.x+50,e.y+80,35,15,"button","CODEX"),this.addElement("research_btn",e.x+90,e.y+80,35,15,"button","RSCH"),this.addElement("crew_btn",e.x+130,e.y+80,35,15,"button","CREW")}setupWeaponsPanel(){const e=this.panels[3];this.addElement("weapon1_btn",e.x+10,e.y+20,40,15,"button","LASER"),this.addElement("weapon2_btn",e.x+55,e.y+20,40,15,"button","PLASMA"),this.addElement("weapon3_btn",e.x+100,e.y+20,40,15,"button","MISSILE"),this.addElement("weapon_monitor",e.x+10,e.y+40,130,25,"monitor","WEAPON INFO"),this.addElement("overheat_warning",e.x+10,e.y+75,15,15,"button","HOT"),this.addElement("ammo_warning",e.x+30,e.y+75,15,15,"button","AMMO"),this.addElement("energy_warning",e.x+50,e.y+75,15,15,"button","PWR"),this.addElement("warp_button",e.x+80,e.y+75,50,15,"button","WARP")}setupRadarPanel(){const e=this.panels[4];this.addElement("radar_display",e.x+10,e.y+20,80,50,"monitor","RADAR"),this.addElement("zoom_in",e.x+100,e.y+20,20,15,"button","Z+"),this.addElement("zoom_out",e.x+125,e.y+20,20,15,"button","Z-"),this.addElement("radar_mode",e.x+100,e.y+40,45,15,"toggle","MODE"),this.addElement("galaxy_map",e.x+100,e.y+60,45,15,"button","GALAXY")}addElement(e,t,i,s,a,r,n){this.interactiveElements.set(e,{x:t,y:i,width:s,height:a,type:r,id:e,label:n,value:"slider"===r?50:void 0,state:"toggle"===r||void 0})}update(e,t){this.updateVisualEffects(e),this.config.enableInteraction&&this.handleInput(t)}updateVisualEffects(e){this.flickerTimer+=e,this.scanlineOffset+=100*e,this.glitchTimer+=e,this.flickerTimer>10&&(this.flickerTimer=0),this.scanlineOffset>1e3&&(this.scanlineOffset=0),this.glitchTimer>5&&(this.glitchTimer=0)}handleInput(e){const t=e.getMousePosition();this.hoveredElement=null;for(const[i,s]of this.interactiveElements)if(this.isPointInElement(t,s)){this.hoveredElement=i;break}if(e.isMouseButtonPressed(0)&&this.hoveredElement&&this.handleElementClick(this.hoveredElement),e.isMouseButtonDown(0)&&this.selectedElement){const e=this.interactiveElements.get(this.selectedElement);e&&"slider"===e.type&&this.handleSliderDrag(e,t)}else this.selectedElement=null,this.isDragging=!1}isPointInElement(e,t){return e.x>=t.x&&e.x<=t.x+t.width&&e.y>=t.y&&e.y<=t.y+t.height}handleElementClick(e){const t=this.interactiveElements.get(e);if(t)switch(this.selectedElement=e,t.type){case"button":this.handleButtonClick(e);break;case"toggle":this.handleToggleClick(e,t);break;case"slider":this.isDragging=!0}}handleButtonClick(e){switch(e){case"autodestruct":this.logger.warn("üõë Auto-destruct sequence requested");break;case"inventory_btn":this.interactions.onInventoryOpen?.();break;case"codex_btn":this.interactions.onCodexOpen?.();break;case"research_btn":this.interactions.onResearchOpen?.();break;case"crew_btn":this.interactions.onCrewOpen?.();break;case"galaxy_map":this.interactions.onGalaxyMapOpen?.();break;case"zoom_in":this.radarZoom=Math.min(5,1.5*this.radarZoom),this.interactions.onRadarZoom?.(this.radarZoom);break;case"zoom_out":this.radarZoom=Math.max(.2,this.radarZoom/1.5),this.interactions.onRadarZoom?.(this.radarZoom)}}handleToggleClick(e,t){t.state=!t.state;const i={engines_toggle:"engines",shields_toggle:"shields",weapons_toggle:"weapons",warp_toggle:"warp_drive",radar_mode:"radar_mode"}[e];i&&("radar_mode"===i?this.radarMode="system"===this.radarMode?"interstellar":"system":this.interactions.onSystemToggle?.(i,t.state))}handleSliderDrag(e,t){const i=t.x-e.x,s=Math.max(0,Math.min(100,i/e.width*100));e.value=s,"thrust_slider"===e.id?this.interactions.onPowerAllocationChange?.({engines:s}):"shield_slider"===e.id&&this.interactions.onPowerAllocationChange?.({shields:s})}render(e){this.renderPanelBase(e),this.panels.forEach((t,i)=>{this.renderPanel(e,t,i)}),this.config.crtEffects&&this.renderCRTEffects(e)}renderPanelBase(e){const t=this.config.screenHeight-this.config.panelHeight-10,i=this.config.panelHeight+20;e.fillRect(0,t,this.config.screenWidth,i,{r:12,g:14,b:16}),e.fillRect(0,t,this.config.screenWidth,3,{r:8,g:24,b:8});for(let s=1;s<this.panels.length;s++){const a=this.panels[s].x-this.config.panelSpacing/2;e.fillRect(a,t+5,1,i-10,{r:24,g:24,b:24})}}renderPanel(e,t,i){switch(e.fillRect(t.x,t.y,t.width,t.height,{r:8,g:12,b:8}),e.drawLine(t.x,t.y,t.x+t.width,t.y,{r:16,g:48,b:16}),e.drawLine(t.x,t.y,t.x,t.y+t.height,{r:16,g:48,b:16}),e.renderText(t.title,t.x+5,t.y+5,{r:12,g:36,b:12},8),i){case 0:this.renderSystemsPanel(e,t);break;case 1:this.renderControlPanel(e,t);break;case 2:this.renderDamagePanel(e,t);break;case 3:this.renderWeaponsPanel(e,t);break;case 4:this.renderRadarPanel(e,t)}}renderSystemsPanel(e,t){this.renderStatusBar(e,t.x+40,t.y+20,30,8,this.systemStatus.hull,"HULL"),this.renderStatusBar(e,t.x+40,t.y+35,30,8,this.systemStatus.shields,"SHLD"),this.renderStatusBar(e,t.x+40,t.y+50,30,8,this.systemStatus.power,"PWR"),this.renderStatusBar(e,t.x+40,t.y+65,30,8,this.systemStatus.fuel,"FUEL"),this.renderStatusBar(e,t.x+40,t.y+80,30,8,this.systemStatus.heat,"HEAT",!0),this.renderWarningLight(e,t.x+95,t.y+20,this.systemStatus.power<30),this.renderWarningLight(e,t.x+95,t.y+35,this.systemStatus.hull<25),this.renderWarningLight(e,t.x+95,t.y+50,!this.systemStatus.shieldsOnline),this.renderWarningLight(e,t.x+95,t.y+65,!this.systemStatus.warpDrive)}renderControlPanel(e,t){this.renderToggle(e,t.x+10,t.y+20,30,15,this.systemStatus.enginesOnline,"ENG"),this.renderToggle(e,t.x+50,t.y+20,30,15,this.systemStatus.shieldsOnline,"SHLD"),this.renderToggle(e,t.x+90,t.y+20,30,15,this.systemStatus.weaponsOnline,"WPN"),this.renderToggle(e,t.x+130,t.y+20,30,15,this.systemStatus.warpDrive,"WARP");const i=this.interactiveElements.get("thrust_slider"),s=this.interactiveElements.get("shield_slider");i&&this.renderSlider(e,i,i.value||50,"THRUST"),s&&this.renderSlider(e,s,s.value||50,"SHIELDS"),this.renderButton(e,t.x+60,t.y+70,40,20,"DESTRUCT",{r:200,g:0,b:0})}renderDamagePanel(e,t){this.renderDamageDisplay(e,t.x+10,t.y+20,80,50),e.renderText(`CARGO: ${this.cargoLoad.toFixed(0)}%`,t.x+100,t.y+25,{r:255,g:255,b:0},10),this.renderButton(e,t.x+10,t.y+80,35,15,"INV",{r:0,g:192,b:255}),this.renderButton(e,t.x+50,t.y+80,35,15,"CODEX",{r:0,g:192,b:255}),this.renderButton(e,t.x+90,t.y+80,35,15,"RSCH",{r:0,g:192,b:255}),this.renderButton(e,t.x+130,t.y+80,35,15,"CREW",{r:0,g:192,b:255})}renderWeaponsPanel(e,t){this.renderButton(e,t.x+10,t.y+20,40,15,"LASER",{r:0,g:255,b:0}),this.renderButton(e,t.x+55,t.y+20,40,15,"PLASMA",{r:128,g:128,b:128}),this.renderButton(e,t.x+100,t.y+20,40,15,"MISSILE",{r:128,g:128,b:128}),e.fillRect(t.x+10,t.y+40,130,25,{r:5,g:10,b:5}),e.renderText("LASER CANNON MK-II",t.x+15,t.y+45,{r:0,g:255,b:0},8),e.renderText("PWR: 85% RNG: 2.5KM",t.x+15,t.y+55,{r:0,g:192,b:0},8),this.renderWarningLight(e,t.x+15,t.y+75,this.systemStatus.heat>80),this.renderWarningLight(e,t.x+35,t.y+75,!1),this.renderWarningLight(e,t.x+55,t.y+75,this.systemStatus.power<20)}renderRadarPanel(e,t){this.renderRadarDisplay(e,t.x+10,t.y+20,80,50),this.renderButton(e,t.x+100,t.y+20,20,15,"Z+",{r:0,g:128,b:255}),this.renderButton(e,t.x+125,t.y+20,20,15,"Z-",{r:0,g:128,b:255}),this.renderToggle(e,t.x+100,t.y+40,45,15,"interstellar"===this.radarMode,"MODE"),this.renderButton(e,t.x+100,t.y+60,45,15,"GALAXY",{r:255,g:165,b:0})}renderStatusBar(e,t,i,s,a,r,n,o=!1){e.fillRect(t,i,s,a,{r:5,g:5,b:5});const c=r/100*s;let l;l=o?r>70?{r:96,g:32,b:32}:r>40?{r:96,g:64,b:16}:{r:12,g:36,b:12}:r>60?{r:12,g:36,b:12}:r>30?{r:72,g:48,b:12}:{r:72,g:24,b:24},e.fillRect(t,i,c,a,l),e.drawLine(t,i,t+s,i,{r:32,g:32,b:32}),e.drawLine(t,i+a,t+s,i+a,{r:32,g:32,b:32}),e.renderText(`${r.toFixed(0)}`,t+s+2,i,{r:64,g:64,b:64},8)}renderWarningLight(e,t,i,s){const a=s?{r:72,g:24,b:24}:{r:24,g:8,b:8};e.fillRect(t,i,8,8,a),s&&Math.sin(10*this.flickerTimer)>.5&&e.fillRect(t+1,i+1,6,6,{r:96,g:32,b:32})}renderToggle(e,t,i,s,a,r,n){const o=r?{r:8,g:24,b:8}:{r:24,g:8,b:8},c=r?{r:16,g:48,b:16}:{r:32,g:32,b:32};e.fillRect(t,i,s,a,o),e.renderText(n,t+2,i+4,c,8)}renderSlider(e,t,i,s){e.fillRect(t.x,t.y,t.width,t.height,{r:8,g:8,b:8});const a=i/100*t.width;e.fillRect(t.x,t.y,a,t.height,{r:16,g:40,b:32}),e.fillRect(t.x+a-2,t.y-2,4,t.height+4,{r:64,g:64,b:64}),e.renderText(s,t.x,t.y-12,{r:48,g:48,b:48},8),e.renderText(`${i.toFixed(0)}%`,t.x+t.width-25,t.y-12,{r:48,g:48,b:48},8)}renderButton(e,t,i,s,a,r,n){const o=this.hoveredElement?.includes(r.toLowerCase()),c=o?{r:n.r+30,g:n.g+30,b:n.b+30}:{r:n.r/3,g:n.g/3,b:n.b/3};e.fillRect(t,i,s,a,c),e.renderText(r,t+2,i+3,n,8)}renderDamageDisplay(e,t,i,s,a){e.fillRect(t,i,s,a,{r:5,g:10,b:5});const r=t+s/2,n=i+a/2;[{name:"BOW",x:r,y:n-15,color:{r:0,g:255,b:0}},{name:"STERN",x:r,y:n+15,color:{r:0,g:255,b:0}},{name:"PORT",x:r-15,y:n,color:{r:0,g:255,b:0}},{name:"STBD",x:r+15,y:n,color:{r:0,g:255,b:0}},{name:"CORE",x:r,y:n,color:{r:0,g:255,b:0}},{name:"BRDG",x:r-8,y:n-8,color:{r:0,g:255,b:0}},{name:"ENG",x:r+8,y:n+8,color:{r:0,g:255,b:0}},{name:"WPN",x:r+8,y:n-8,color:{r:0,g:255,b:0}}].forEach(t=>{e.fillRect(t.x-4,t.y-4,8,8,t.color),e.renderText(t.name,t.x-12,t.y+8,{r:0,g:192,b:0},6)})}renderRadarDisplay(e,t,i,s,a){e.fillRect(t,i,s,a,{r:0,g:8,b:0});const r=t+s/2,n=i+a/2,o=Math.min(s,a)/2-5;for(let c=1;c<=3;c++){const t=o/3*c;e.drawCircle(r,n,t,{r:0,g:64,b:0})}e.drawLine(r-o,n,r+o,n,{r:0,g:64,b:0}),e.drawLine(r,n-o,r,n+o,{r:0,g:64,b:0}),e.fillRect(r-1,n-1,3,3,{r:0,g:255,b:0}),e.fillRect(r+10,n-15,2,2,{r:255,g:255,b:0}),e.fillRect(r-20,n+8,2,2,{r:255,g:255,b:0}),e.renderText(this.radarMode.toUpperCase(),t+2,i+a-12,{r:0,g:255,b:0},8),e.renderText(`ZOOM: ${this.radarZoom.toFixed(1)}x`,t+2,i+a-22,{r:0,g:255,b:0},8)}renderCRTEffects(e){if((this.systemStatus.hull<50||this.systemStatus.power<30)&&Math.random()<.1){const t=Math.random()*this.config.screenWidth,i=this.config.screenHeight-this.config.panelHeight+Math.random()*this.config.panelHeight;e.setPixel(t,i,{r:255,g:255,b:255})}}updateSystemStatus(e){this.systemStatus={...e}}updateDamageReports(e){this.damageReports=new Map(e)}updateCargoLoad(e){this.cargoLoad=Math.max(0,Math.min(100,e))}getPowerAllocation(){const e=this.interactiveElements.get("thrust_slider"),t=this.interactiveElements.get("shield_slider");return{engines:e?.value||30,shields:t?.value||25,weapons:20,lifeSupport:15,sensors:10}}}class E{constructor(e){this.velocity={x:0,y:0},this.hasAtmosphere=!1,this.hasRings=!1,this.orbitRadius=0,this.orbitSpeed=0,this.orbitAngle=0,this.rotationSpeed=0,this.currentRotation=0,this.interactionZones=[],this.mineralDeposits=[],this.isDiscovered=!1,this.isScanned=!1,this.isLanded=!1,this.resourcesDepleted=0,this.id=e.id,this.name=e.name,this.type=e.type,this.position={...e.position},this.radius=e.radius,this.mass=e.mass,this.color={...e.color},this.planetData=e.planetData,this.starData=e.starData,this.moonData=e.moonData,this.logger=new r(`CelestialBody:${e.name}`),this.initializeFromData(),this.generateInteractionZones(),this.generateResources(),this.logger.debug(`Created ${this.type}: ${this.name}`,{radius:this.radius,mass:this.mass,hasAtmosphere:this.hasAtmosphere})}initializeFromData(){this.planetData&&(this.hasAtmosphere=this.planetData.hasAtmosphere,this.hasRings=this.planetData.hasRings,this.updatePlanetVisuals(),this.planetData.orbitDistance>0&&(this.orbitRadius=50*this.planetData.orbitDistance,this.orbitSpeed=2*Math.PI/(this.planetData.orbitPeriod/3600)),this.rotationSpeed=2*Math.PI/30),this.starData&&(this.color=this.getDarkStarColor(this.starData.temperature),this.rotationSpeed=2*Math.PI/60),this.moonData&&(this.orbitRadius=5*this.moonData.orbitDistance,this.orbitSpeed=2*Math.PI/(this.moonData.orbitPeriod/60),this.rotationSpeed=this.moonData.tidallyLocked?this.orbitSpeed:2*Math.PI/45)}updatePlanetVisuals(){if(this.planetData)switch(this.planetData.type){case S.Terrestrial:this.color={r:32,g:24,b:16},this.hasAtmosphere&&(this.atmosphereColor={r:16,g:24,b:32});break;case S.Ocean:this.color={r:8,g:16,b:32},this.atmosphereColor={r:12,g:20,b:28};break;case S.Desert:this.color={r:48,g:32,b:16};break;case S.Volcanic:this.color={r:32,g:16,b:8};break;case S.Frozen:this.color={r:32,g:36,b:40};break;case S.GasGiant:this.color={r:40,g:32,b:24},this.atmosphereColor={r:32,g:28,b:20},this.hasRings&&(this.ringColor={r:24,g:20,b:16});break;case S.IceGiant:this.color={r:16,g:24,b:32},this.atmosphereColor={r:12,g:20,b:28};break;case S.Toxic:this.color={r:32,g:24,b:16},this.atmosphereColor={r:48,g:32,b:16}}}getDarkStarColor(e){return e>25e3?{r:32,g:36,b:48}:e>1e4?{r:40,g:44,b:48}:e>7500?{r:48,g:48,b:48}:e>6e3?{r:48,g:44,b:36}:e>5e3?{r:48,g:40,b:28}:e>3500?{r:48,g:32,b:20}:{r:48,g:24,b:16}}generateInteractionZones(){if(this.interactionZones=[],this.interactionZones.push({bodyId:this.id,type:"orbit",radius:3*this.radius,distance:0,canEnter:!0}),this.hasAtmosphere&&this.interactionZones.push({bodyId:this.id,type:"atmosphere",radius:1.5*this.radius,distance:0,canEnter:!0,requirements:["heat_shielding"]}),"star"!==this.type){const e=this.canShipLand();this.interactionZones.push({bodyId:this.id,type:"surface",radius:this.radius,distance:0,canEnter:e,requirements:e?[]:["specialized_equipment"]})}}canShipLand(){return"star"!==this.type&&("asteroid"===this.type||(!this.planetData||this.planetData.type!==S.GasGiant&&this.planetData.type!==S.IceGiant&&!(this.planetData.temperature>1e3)))}generateResources(){if(this.mineralDeposits=[],"star"===this.type)return;this.getResourceTypes().forEach(e=>{this.mineralDeposits.push({type:e,richness:.7*Math.random()+.3,accessibility:.8*Math.random()+.2,extractionDifficulty:.6*Math.random()+.2})}),this.generateSurfaceConditions()}getResourceTypes(){const e=["metal","crystals"];if("asteroid"===this.type)return[...e,"rare_metals","ice"];if(this.planetData)switch(this.planetData.type){case S.Terrestrial:return[...e,"rare_earth","radioactive"];case S.Volcanic:return[...e,"sulfur","rare_metals"];case S.Frozen:return[...e,"ice","frozen_gases"];case S.Desert:return[...e,"silicon","rare_earth"];case S.Ocean:return[...e,"deuterium","biologics"];default:return e}return e}generateSurfaceConditions(){if("star"===this.type)return;let e=273,t=1,i=0,s="none",a=.2;this.planetData&&(e=this.planetData.temperature,t=Math.sqrt(this.planetData.mass),i=this.hasAtmosphere?.1:.3,this.hasAtmosphere&&(s=e>373?"extreme_heat":e<273?"frozen":"stable"),a=Math.min(.9,Math.abs(e-273)/500+.3*Math.abs(t-1)+.4*i)),this.surfaceConditions={temperature:e,gravity:t,radiation:i,weather:s,landingDifficulty:a}}update(e){this.orbitCenter&&this.orbitRadius>0&&(this.orbitAngle+=this.orbitSpeed*e,this.position.x=this.orbitCenter.x+Math.cos(this.orbitAngle)*this.orbitRadius,this.position.y=this.orbitCenter.y+Math.sin(this.orbitAngle)*this.orbitRadius),this.currentRotation+=this.rotationSpeed*e,this.currentRotation>2*Math.PI&&(this.currentRotation-=2*Math.PI),this.physicsObject&&(this.physicsObject.position={...this.position})}render(e,t,i){const s=this.getDistanceFrom(t);if(s>i.renderDistance)return;const a={x:this.position.x-t.x+512,y:this.position.y-t.y+384},r=this.radius,n=Math.max(i.minPixelSize,Math.min(i.maxPixelSize,r*(i.renderDistance/s)));if(i.showOrbitLines&&this.orbitCenter&&s>100&&this.renderOrbitLine(e,t,i),this.hasAtmosphere&&this.atmosphereColor){const t=1.3*n;e.drawCircle(a.x,a.y,t,this.atmosphereColor,!0)}this.hasRings&&this.ringColor&&this.renderRings(e,a,n),e.drawCircle(a.x,a.y,n,this.color,!0),"planet"===this.type&&n>8&&this.renderSurfaceDetails(e,a,n),"star"===this.type&&this.renderStarGlow(e,a,n),s<i.renderDistance/3&&this.isDiscovered&&e.renderText(this.name,a.x-20,a.y-n-15,{r:48,g:48,b:48},8)}renderOrbitLine(e,t,i){if(!this.orbitCenter)return;const s={x:this.orbitCenter.x-t.x+512,y:this.orbitCenter.y-t.y+384},a={r:Math.floor(.3*this.color.r),g:Math.floor(.3*this.color.g),b:Math.floor(.3*this.color.b)};e.drawCircle(s.x,s.y,this.orbitRadius,a,!1)}renderRings(e,t,i){if(!this.ringColor)return;const s=1.5*i,a=2.2*i;for(let r=s;r<a;r+=2){const i=1-(r-s)/(a-s)*.7,n={r:Math.floor(this.ringColor.r*i),g:Math.floor(this.ringColor.g*i),b:Math.floor(this.ringColor.b*i)};e.drawCircle(t.x,t.y,r,n,!1)}}renderSurfaceDetails(e,t,i){Math.floor(this.currentRotation/(2*Math.PI)*30);for(let s=0;s<3;s++){const a=2*s*Math.PI/3+this.currentRotation,r=t.x+Math.cos(a)*(.6*i),n=t.y+Math.sin(a)*(.3*i),o={r:Math.max(0,this.color.r-8),g:Math.max(0,this.color.g-8),b:Math.max(0,this.color.b-8)};e.fillRect(r-1,n-1,2,2,o)}}renderStarGlow(e,t,i){const s={r:Math.min(64,this.color.r+16),g:Math.min(64,this.color.g+16),b:Math.min(64,this.color.b+16)};e.drawCircle(t.x,t.y,1.2*i,s,!1)}checkInteraction(e){const t=this.getDistanceFrom(e);for(const i of this.interactionZones)if(t<=i.radius)return i.distance=t,i;return null}performMining(e,t=1){const i=this.checkInteraction(e);if(!i||"surface"!==i.type)return null;const s=this.mineralDeposits.filter(e=>e.richness>this.resourcesDepleted);if(0===s.length)return null;const a=s[0],r=a.richness*a.accessibility*t;return a.richness=Math.max(0,a.richness-.05),this.resourcesDepleted=Math.min(1,this.resourcesDepleted+.02),{resourceType:a.type,quantity:r,quality:a.accessibility,depletion:this.resourcesDepleted}}performScan(){return this.isScanned=!0,{composition:this.getResourceTypes(),atmosphere:this.atmosphereData,surfaceConditions:this.surfaceConditions,biologicalSigns:this.planetData?.hasLife||!1,anomalies:[],mineralDeposits:[...this.mineralDeposits]}}getDistanceFrom(e){const t=this.position.x-e.x,i=this.position.y-e.y;return Math.sqrt(t*t+i*i)}setOrbit(e,t,i){this.orbitCenter={...e},this.orbitRadius=t,this.orbitSpeed=i}getInteractionInfo(){if(!this.isDiscovered)return"Unknown Object";let e=`${this.name} (${this.type.toUpperCase()})`;return this.surfaceConditions&&(e+=`\nTemp: ${this.surfaceConditions.temperature.toFixed(0)}K`,e+=`\nGravity: ${this.surfaceConditions.gravity.toFixed(1)}g`,this.mineralDeposits.length>0&&(e+=`\nResources: ${this.mineralDeposits.length} types`)),e}}class T{constructor(e={},t={}){this.isVisible=!1,this.currentBody=null,this.currentZone=null,this.opacity=0,this.targetOpacity=0,this.panelX=0,this.panelY=0,this.panelWidth=0,this.panelHeight=0,this.buttons=[],this.hoveredButton=null,this.selectedButton=null,this.bodyInfo="",this.scanData=null,this.miningResults=[],this.logger=new r("InteractionPanel"),this.interactions=t,this.config={enableAnimations:!0,fadeSpeed:3,maxWidth:300,maxHeight:200,...e},this.logger.info("üì± Interaction panel initialized")}showInteraction(e,t,i){this.currentBody=e,this.currentZone=t,this.bodyInfo=e.getInteractionInfo(),this.calculatePanelPosition(e.position,i),this.setupButtons(),this.targetOpacity=1,this.isVisible=!0,this.logger.debug(`Showing interaction for ${e.name}`,{type:t.type,canEnter:t.canEnter})}hideInteraction(){this.targetOpacity=0,setTimeout(()=>{0===this.targetOpacity&&(this.isVisible=!1,this.currentBody=null,this.currentZone=null,this.scanData=null,this.miningResults=[])},this.config.enableAnimations?500:0),this.logger.debug("Hiding interaction panel")}calculatePanelPosition(e,t){const i=e.x-t.x+512,s=e.y-t.y+384;this.panelWidth=Math.min(this.config.maxWidth,280),this.panelHeight=Math.min(this.config.maxHeight,180),this.panelX=i+60,this.panelY=s-this.panelHeight/2,this.panelX+this.panelWidth>1024&&(this.panelX=i-this.panelWidth-60),this.panelY<20&&(this.panelY=20),this.panelY+this.panelHeight>500&&(this.panelY=500-this.panelHeight)}setupButtons(){if(this.buttons=[],!this.currentZone||!this.currentBody)return;const e=25;let t=this.panelY+80;"orbit"===this.currentZone.type&&this.currentZone.canEnter&&(this.buttons.push({id:"enter_orbit",label:"ENTER ORBIT",x:this.panelX+10,y:t,width:80,height:e,enabled:!0,color:{r:16,g:48,b:16}}),t+=35),"surface"===this.currentZone.type&&this.currentZone.canEnter&&(this.buttons.push({id:"land",label:"LAND",x:this.panelX+10,y:t,width:80,height:e,enabled:!0,color:{r:72,g:48,b:12}}),t+=35),this.buttons.push({id:"scan",label:"SCAN",x:this.panelX+100,y:this.panelY+80,width:80,height:e,enabled:!0,color:{r:16,g:40,b:32}}),"surface"!==this.currentZone.type&&"atmosphere"!==this.currentZone.type||this.currentBody.mineralDeposits.length>0&&this.buttons.push({id:"mine",label:"MINE",x:this.panelX+100,y:this.panelY+110,width:80,height:e,enabled:this.currentBody.resourcesDepleted<.9,color:{r:48,g:32,b:16}}),this.buttons.push({id:"continue",label:"CONTINUE",x:this.panelX+10,y:this.panelY+this.panelHeight-35,width:this.panelWidth-20,height:e,enabled:!0,color:{r:32,g:32,b:32}})}update(e,t){(this.isVisible||0!==this.targetOpacity)&&(this.config.enableAnimations?this.opacity<this.targetOpacity?this.opacity=Math.min(this.targetOpacity,this.opacity+this.config.fadeSpeed*e):this.opacity>this.targetOpacity&&(this.opacity=Math.max(this.targetOpacity,this.opacity-this.config.fadeSpeed*e)):this.opacity=this.targetOpacity,this.isVisible&&this.opacity>.5&&this.handleInput(t))}handleInput(e){const t=e.getMousePosition();this.hoveredButton=null;for(const i of this.buttons)if(this.isPointInButton(t,i)){this.hoveredButton=i.id;break}e.isMouseButtonPressed(0)&&this.hoveredButton&&this.handleButtonClick(this.hoveredButton),e.isKeyPressed("KeyE")?this.handleButtonClick("enter_orbit"):e.isKeyPressed("KeyL")?this.handleButtonClick("land"):e.isKeyPressed("KeyS")?this.handleButtonClick("scan"):e.isKeyPressed("KeyM")?this.handleButtonClick("mine"):(e.isKeyPressed("KeyC")||e.isKeyPressed("Escape"))&&this.handleButtonClick("continue")}isPointInButton(e,t){return e.x>=t.x&&e.x<=t.x+t.width&&e.y>=t.y&&e.y<=t.y+t.height}handleButtonClick(e){if(!this.currentBody)return;const t=this.buttons.find(t=>t.id===e);if(t&&t.enabled)switch(e){case"enter_orbit":this.interactions.onEnterOrbit?.(this.currentBody.id),this.logger.info(`üõ∞Ô∏è Entering orbit around ${this.currentBody.name}`),this.hideInteraction();break;case"land":this.interactions.onLand?.(this.currentBody.id),this.logger.info(`üöÅ Landing on ${this.currentBody.name}`),this.hideInteraction();break;case"scan":this.performScan();break;case"mine":this.performMining();break;case"continue":this.interactions.onContinueFlight?.(),this.hideInteraction()}}performScan(){this.currentBody&&(this.scanData=this.currentBody.performScan(),this.currentBody.isDiscovered=!0,this.interactions.onPerformScan?.(this.currentBody.id),this.logger.info(`üîç Scanned ${this.currentBody.name}`,{composition:this.scanData.composition,biologicalSigns:this.scanData.biologicalSigns}),this.bodyInfo=this.currentBody.getInteractionInfo())}performMining(){if(!this.currentBody)return;const e=this.currentBody.performMining({x:0,y:0},1);if(e&&(this.miningResults.push(e),this.interactions.onStartMining?.(this.currentBody.id),this.logger.info(`‚õèÔ∏è Mined ${e.quantity.toFixed(2)} ${e.resourceType}`,{quality:e.quality,depletion:e.depletion}),e.depletion>.9)){const e=this.buttons.find(e=>"mine"===e.id);e&&(e.enabled=!1,e.color={r:24,g:24,b:24})}}render(e){if(!this.isVisible||this.opacity<=0)return;const t=this.opacity,i={r:Math.floor(8*t),g:Math.floor(12*t),b:Math.floor(8*t)};e.fillRect(this.panelX,this.panelY,this.panelWidth,this.panelHeight,i);const s={r:Math.floor(16*t),g:Math.floor(48*t),b:Math.floor(16*t)};this.renderPanelBorder(e,s);const a={r:Math.floor(12*t),g:Math.floor(36*t),b:Math.floor(12*t)};e.renderText("PROXIMITY ALERT",this.panelX+10,this.panelY+10,a,10),this.bodyInfo&&this.renderBodyInfo(e,t),this.scanData&&this.renderScanData(e,t),this.miningResults.length>0&&this.renderMiningResults(e,t),this.renderButtons(e,t),this.renderCRTEffects(e,t)}renderPanelBorder(e,t){e.fillRect(this.panelX,this.panelY,this.panelWidth,2,t),e.fillRect(this.panelX,this.panelY+this.panelHeight-2,this.panelWidth,2,t),e.fillRect(this.panelX,this.panelY,2,this.panelHeight,t),e.fillRect(this.panelX+this.panelWidth-2,this.panelY,2,this.panelHeight,t);const i={r:t.r+8,g:t.g+8,b:t.b+8};e.fillRect(this.panelX,this.panelY,8,2,i),e.fillRect(this.panelX,this.panelY,2,8,i)}renderBodyInfo(e,t){const i={r:Math.floor(48*t),g:Math.floor(48*t),b:Math.floor(48*t)},s=this.bodyInfo.split("\n");let a=this.panelY+30;s.forEach(t=>{e.renderText(t,this.panelX+10,a,i,8),a+=12})}renderScanData(e,t){if(!this.scanData)return;const i={r:Math.floor(32*t),g:Math.floor(80*t),b:Math.floor(64*t)};let s=this.panelY+30;e.renderText(`COMP: ${this.scanData.composition.join(", ")}`,this.panelX+10,s,i,7),s+=10,this.scanData.biologicalSigns&&(e.renderText("BIO: DETECTED",this.panelX+10,s,{r:Math.floor(96*t),g:Math.floor(64*t),b:Math.floor(16*t)},7),s+=10),e.renderText(`MINERALS: ${this.scanData.mineralDeposits.length}`,this.panelX+10,s,i,7)}renderMiningResults(e,t){const i={r:Math.floor(96*t),g:Math.floor(64*t),b:Math.floor(16*t)},s=this.miningResults[this.miningResults.length-1],a=this.panelY+this.panelHeight-60;e.renderText(`MINED: ${s.quantity.toFixed(1)} ${s.resourceType}`,this.panelX+10,a,i,8)}renderButtons(e,t){this.buttons.forEach(i=>{const s=this.hoveredButton===i.id,a=i.enabled?t:.5*t,r=s?{r:Math.floor((i.color.r+16)*a),g:Math.floor((i.color.g+16)*a),b:Math.floor((i.color.b+16)*a)}:{r:Math.floor(i.color.r*a),g:Math.floor(i.color.g*a),b:Math.floor(i.color.b*a)};e.fillRect(i.x,i.y,i.width,i.height,r);const n={r:Math.floor((i.color.r+32)*a),g:Math.floor((i.color.g+32)*a),b:Math.floor((i.color.b+32)*a)};e.drawLine(i.x,i.y,i.x+i.width,i.y,n),e.drawLine(i.x,i.y,i.x,i.y+i.height,n);const o=i.enabled?{r:Math.floor(64*t),g:Math.floor(64*t),b:Math.floor(64*t)}:{r:Math.floor(32*t),g:Math.floor(32*t),b:Math.floor(32*t)},c=i.x+(i.width-6*i.label.length)/2,l=i.y+(i.height-8)/2;e.renderText(i.label,c,l,o,8)})}renderCRTEffects(e,t){for(let i=this.panelY;i<this.panelY+this.panelHeight;i+=4){const s={r:Math.floor(4*t),g:Math.floor(8*t),b:Math.floor(4*t)};e.fillRect(this.panelX,i,this.panelWidth,1,s)}}isInteractionVisible(){return this.isVisible}getCurrentBody(){return this.currentBody}}class A{constructor(e={},t={}){this.bodies=new Map,this.currentSystem=null,this.systemCenter={x:512,y:384},this.nearbyBodies=[],this.currentInteraction=null,this.lastUpdateTime=0,this.frameCount=0,this.logger=new r("CelestialManager"),this.config={renderDistance:2e3,interactionDistance:150,showOrbitLines:!0,enableInteractions:!0,celestialBodyConfig:{renderDistance:2e3,orbitLineOpacity:.3,showOrbitLines:!0,animationSpeed:1,minPixelSize:2,maxPixelSize:80},...e},this.interactionPanel=new T({enableAnimations:!0,fadeSpeed:3,maxWidth:300,maxHeight:200},t),this.logger.info("üåå Celestial manager initialized",{renderDistance:this.config.renderDistance,enableInteractions:this.config.enableInteractions})}loadSystem(e){this.logger.info(`üåü Loading star system: ${e.systemData.name}`),this.clearSystem(),this.currentSystem=e.systemData,this.systemCenter=e.cameraPosition,this.createStar(e.systemData.star),e.systemData.planets.forEach((e,t)=>{this.createPlanet(e,t)}),e.systemData.planets.forEach(e=>{e.moons&&e.moons.length>0&&e.moons.forEach(t=>{this.createMoon(t,e)})}),this.setupOrbitalMechanics(),this.logger.info(`‚úÖ System loaded: ${this.bodies.size} celestial bodies created`)}createStar(e){const t=new E({id:e.id,name:e.name,type:"star",position:{...this.systemCenter},radius:Math.min(20*e.radius,80),mass:1e6*e.mass,color:this.getStarColor(e.temperature),starData:e});t.isDiscovered=!0,this.bodies.set(t.id,t),this.logger.debug(`‚≠ê Created star: ${t.name}`)}getStarColor(e){return e>25e3?{r:32,g:36,b:48}:e>1e4?{r:40,g:44,b:48}:e>7500?{r:48,g:48,b:48}:e>6e3?{r:48,g:44,b:36}:e>5e3?{r:48,g:40,b:28}:e>3500?{r:48,g:32,b:20}:{r:48,g:24,b:16}}createPlanet(e,t){const i=t*Math.PI*2/(this.currentSystem?.planets.length||1),s=150+30*e.orbitDistance,a={x:this.systemCenter.x+Math.cos(i)*s,y:this.systemCenter.y+Math.sin(i)*s},r=new E({id:e.id,name:e.name,type:"planet",position:a,radius:Math.max(10*e.radius,15),mass:1e4*e.mass,color:this.getPlanetColor(e),planetData:e});r.setOrbit({...this.systemCenter},s,2*Math.PI/(e.orbitPeriod/3600)),this.bodies.set(r.id,r),this.logger.debug(`ü™ê Created planet: ${r.name}`)}getPlanetColor(e){switch(e.surfaceType){case"Rocky":case"Toxic":return{r:32,g:24,b:16};case"Desert":return{r:48,g:32,b:16};case"Ocean":return{r:8,g:16,b:32};case"Ice":return{r:32,g:36,b:40};case"Lava":return{r:32,g:16,b:8};case"Gas":return{r:40,g:32,b:24};case"Crystalline":return{r:24,g:32,b:36};default:return{r:24,g:24,b:24}}}createMoon(e,t){const i=this.bodies.get(t.id);if(!i)return;const s=Math.random()*Math.PI*2,a=3*e.orbitDistance,r={x:i.position.x+Math.cos(s)*a,y:i.position.y+Math.sin(s)*a},n=new E({id:e.id,name:e.name,type:"moon",position:r,radius:Math.max(8*e.radius,8),mass:1e4*e.mass,color:{r:24,g:24,b:24},moonData:e});n.setOrbit({...i.position},a,2*Math.PI/(e.orbitPeriod/60)),this.bodies.set(n.id,n),this.logger.debug(`üåô Created moon: ${n.name} (around ${t.name})`)}setupOrbitalMechanics(){this.bodies.forEach(e=>{if("moon"===e.type&&e.moonData){const t=Array.from(this.bodies.values()).find(t=>"planet"===t.type&&t.planetData?.moons?.some(t=>t.id===e.id));if(t){const i=e.setOrbit.bind(e);e.setOrbit=(e,s,a)=>{i(t.position,s,a)}}}})}update(e,t,i){this.lastUpdateTime=e,this.frameCount++,this.bodies.forEach(t=>{t.update(e)}),this.config.enableInteractions&&this.updateInteractions(i,t),this.interactionPanel.update(e,t)}updateInteractions(e,t){this.nearbyBodies=[];let i=null,s=1/0;this.bodies.forEach(t=>{const a=t.getDistanceFrom(e);if(a<=this.config.interactionDistance){this.nearbyBodies.push(t);const r=t.checkInteraction(e);r&&a<s&&(s=a,i={body:t,zone:r})}}),i&&i!==this.currentInteraction?(this.currentInteraction=i,this.interactionPanel.showInteraction(i.body,i.zone,e),this.logger.debug(`üéØ New interaction: ${i.body.name} (${i.zone.type})`)):!i&&this.currentInteraction&&(this.currentInteraction=null,this.interactionPanel.hideInteraction(),this.logger.debug("üöÄ Left interaction zone"))}render(e,t){Array.from(this.bodies.values()).sort((e,i)=>{const s=e.getDistanceFrom(t);return i.getDistanceFrom(t)-s}).forEach(i=>{i.render(e,t,this.config.celestialBodyConfig)}),this.interactionPanel.render(e)}clearSystem(){this.bodies.clear(),this.nearbyBodies=[],this.currentInteraction=null,this.interactionPanel.hideInteraction(),this.logger.debug("üßπ System cleared")}getBody(e){return this.bodies.get(e)}getAllBodies(){return Array.from(this.bodies.values())}getNearbyBodies(){return[...this.nearbyBodies]}getCurrentInteraction(){return this.currentInteraction}discoverAllBodies(){this.bodies.forEach(e=>{e.isDiscovered=!0}),this.logger.info("üîç All bodies discovered")}getSystemStats(){const e=Array.from(this.bodies.values()).filter(e=>e.isDiscovered).length,t=Array.from(this.bodies.values()).filter(e=>e.isScanned).length;return{bodyCount:this.bodies.size,discoveredBodies:e,scannedBodies:t,nearbyBodies:this.nearbyBodies.length,hasActiveInteraction:null!==this.currentInteraction}}updateConfig(e){this.config={...this.config,...e},this.logger.debug("Config updated",e)}getCurrentSystem(){return this.currentSystem}performAction(e,t,i){const s=this.bodies.get(e);if(!s)return!1;switch(t){case"scan":return s.performScan(),s.isDiscovered=!0,this.logger.info(`üîç Scanned ${s.name}`),!0;case"mine":if(i){const e=s.performMining(i);if(e)return this.logger.info(`‚õèÔ∏è Mined ${e.quantity.toFixed(2)} ${e.resourceType} from ${s.name}`),!0}return!1;case"land":const e=s.checkInteraction(i||{x:0,y:0});return!(!e||"surface"!==e.type||!e.canEnter)&&(s.isLanded=!0,this.logger.info(`üöÅ Landed on ${s.name}`),!0);default:return!1}}cleanup(){this.clearSystem(),this.logger.info("üßπ Celestial manager cleanup completed")}}class k{constructor(e={}){this.stars=[],this.galaxyBand=[],this.nebulaClouds=[],this.isDistorted=!1,this.distortionData=null,this.time=0,this.logger=new r("SpaceBackground"),this.config={starCount:300,starLayers:5,parallaxStrength:.3,enableDistortion:!0,galaxyBandIntensity:.4,nebulaOpacity:.2,...e},this.generateBackground(),this.logger.info("üåå Space background initialized",{starCount:this.stars.length,layers:this.config.starLayers})}generateBackground(){this.generateStars(),this.generateGalaxyBand(),this.generateNebulae()}generateStars(){this.stars=[];for(let e=0;e<this.config.starCount;e++){const e={x:2048*Math.random(),y:1536*Math.random()},t=Math.floor(Math.random()*this.config.starLayers),i=this.getStarSize(t),s=this.getStarColor();this.stars.push({position:{...e},originalPosition:{...e},color:s,size:i,layer:t,twinkle:Math.random()*Math.PI*2})}}generateGalaxyBand(){this.galaxyBand=[];for(let e=0;e<80;e++){const t=e/80,i=200,s=50*Math.sin(t*Math.PI*3),a={x:2048*t+s,y:400+s+(Math.random()-.5)*i},r=this.getGalaxyBandColor();this.galaxyBand.push({position:{...a},originalPosition:{...a},color:r,size:1.5*Math.random()+.5,layer:2,twinkle:Math.random()*Math.PI*2})}}generateNebulae(){this.nebulaClouds=[];for(let e=0;e<5;e++)this.nebulaClouds.push({x:2048*Math.random(),y:1536*Math.random(),size:150*Math.random()+100,color:this.getNebulaColor()})}getStarSize(e){return[3,2.5,2,1.5,1][e]+.5*Math.random()}getStarColor(){const e=[{r:64,g:64,b:64},{r:48,g:44,b:36},{r:48,g:40,b:28},{r:48,g:32,b:20},{r:48,g:24,b:16},{r:32,g:36,b:48},{r:40,g:44,b:48}];return e[Math.floor(Math.random()*e.length)]}getGalaxyBandColor(){const e=[{r:48,g:44,b:28},{r:48,g:40,b:24},{r:32,g:28,b:20},{r:24,g:24,b:20}];return e[Math.floor(Math.random()*e.length)]}getNebulaColor(){const e=[{r:24,g:16,b:32},{r:32,g:24,b:16},{r:16,g:24,b:32},{r:24,g:32,b:16}];return e[Math.floor(Math.random()*e.length)]}update(e){this.time+=e,this.stars.forEach(t=>{t.twinkle+=e*(.5+.5*Math.random())}),this.galaxyBand.forEach(t=>{t.twinkle+=.3*e})}applyWarpDistortion(e){this.config.enableDistortion&&(this.distortionData={...e},this.isDistorted=!0,this.distortStars(this.stars,e),this.distortStars(this.galaxyBand,e),this.logger.debug("üåÄ Warp distortion applied to background"))}restoreFromDistortion(){this.isDistorted&&(this.stars.forEach(e=>{e.position={...e.originalPosition}}),this.galaxyBand.forEach(e=>{e.position={...e.originalPosition}}),this.isDistorted=!1,this.distortionData=null,this.logger.debug("üåå Background restored from warp distortion"))}gradualRestore(e){if(!this.isDistorted||!this.distortionData)return;const t=1-e;this.restoreStarsGradually(this.stars,t),this.restoreStarsGradually(this.galaxyBand,t)}distortStars(e,t){e.forEach(e=>{const i=e.originalPosition.x-t.center.x,s=e.originalPosition.y-t.center.y,a=Math.sqrt(i*i+s*s);if(a<t.radius){const r=50*((1-a/t.radius)*t.intensity)*(e.layer+1);e.position.x=e.originalPosition.x-i/a*r,e.position.y=e.originalPosition.y-s/a*r}})}restoreStarsGradually(e,t){e.forEach(e=>{e.position.x=e.position.x+(e.originalPosition.x-e.position.x)*t*.1,e.position.y=e.position.y+(e.originalPosition.y-e.position.y)*t*.1})}render(e,t){this.renderNebulae(e,t),this.renderGalaxyBand(e,t);for(let i=this.config.starLayers-1;i>=0;i--)this.renderStarLayer(e,t,i)}renderNebulae(e,t){this.nebulaClouds.forEach(i=>{const s=i.x-.1*t.x,a=i.y-.1*t.y;if(s<-i.size||s>1024+i.size||a<-i.size||a>768+i.size)return;const r=Math.floor(i.size/8);for(let t=0;t<r;t++){const n=t/r*Math.PI*2+.1*this.time,o=i.size/2*Math.sqrt(Math.random()),c=s+Math.cos(n)*o,l=a+Math.sin(n)*o,h=this.config.nebulaOpacity*(1-o/(i.size/2)),d={r:Math.floor(i.color.r*h),g:Math.floor(i.color.g*h),b:Math.floor(i.color.b*h)};(d.r>0||d.g>0||d.b>0)&&e.setPixel(c,l,d)}})}renderGalaxyBand(e,t){this.galaxyBand.forEach(i=>{const s=i.position.x-.3*t.x,a=i.position.y-.3*t.y;if(s<-10||s>1034||a<-10||a>778)return;const r=.3*Math.sin(i.twinkle)+.7,n=this.config.galaxyBandIntensity*r,o={r:Math.floor(i.color.r*n),g:Math.floor(i.color.g*n),b:Math.floor(i.color.b*n)};this.renderStar(e,s,a,.8*i.size,o)})}renderStarLayer(e,t,i){const s=(i+1)*this.config.parallaxStrength;this.stars.filter(e=>e.layer===i).forEach(i=>{const a=i.position.x-t.x*s,r=i.position.y-t.y*s;if(a<-10||a>1034||r<-10||r>778)return;const n=.4*Math.sin(i.twinkle)+.6,o={r:Math.floor(i.color.r*n),g:Math.floor(i.color.g*n),b:Math.floor(i.color.b*n)};this.renderStar(e,a,r,i.size,o)})}renderStar(e,t,i,s,a){if(s<=1)e.setPixel(t,i,a);else if(s<=2)e.fillRect(t-1,i-1,2,2,a);else{const r=Math.floor(s),n=Math.floor(r/2);if(e.fillRect(t-n,i-n,r,r,a),s>2.5){const r={r:Math.floor(.6*a.r),g:Math.floor(.6*a.g),b:Math.floor(.6*a.b)};e.fillRect(t-s,i-1,2*s,2,r),e.fillRect(t-1,i-s,2,2*s,r)}}}updateWarpDistortion(e){this.config.enableDistortion&&this.applyWarpDistortion(e)}getStats(){return{starCount:this.stars.length,galaxyBandStars:this.galaxyBand.length,nebulaCount:this.nebulaClouds.length,isDistorted:this.isDistorted}}regenerateBackground(){this.generateBackground(),this.logger.info("üåå Background regenerated")}updateConfig(e){this.config={...this.config,...e},(e.starCount||e.starLayers)&&this.regenerateBackground()}}var I=(e=>(e.Resource="resource",e.Component="component",e.Equipment="equipment",e.Weapon="weapon",e.Tool="tool",e.Consumable="consumable",e.Blueprint="blueprint",e.Artifact="artifact",e))(I||{}),_=(e=>(e.Common="common",e.Uncommon="uncommon",e.Rare="rare",e.Epic="epic",e.Legendary="legendary",e.Artifact="artifact",e))(_||{});class D{constructor(){this.items=new Map,this.recipes=new Map,this.categories=new Map,this.logger=new r("ItemDatabase"),this.initializeDatabase(),this.logger.info("üì¶ Item database initialized",{totalItems:this.items.size,categories:this.categories.size})}initializeDatabase(){this.generateResources(),this.generateComponents(),this.generateEquipment(),this.generateWeapons(),this.generateTools(),this.generateConsumables(),this.generateBlueprints(),this.generateArtifacts()}generateResources(){[{id:"metal_iron",name:"Iron Ore",description:"Common metallic ore found throughout the galaxy.",category:"metal",rarity:"common",stats:{mass:1,volume:1,maxStack:1e3,purity:.7},color:{r:48,g:32,b:24}},{id:"metal_titanium",name:"Titanium",description:"Lightweight, durable metal used in ship construction.",category:"metal",rarity:"uncommon",stats:{mass:.8,volume:1,maxStack:500,purity:.85},color:{r:64,g:64,b:64}},{id:"crystal_quartz",name:"Quartz Crystal",description:"Common crystalline structure with electronic properties.",category:"crystal",rarity:"common",stats:{mass:.5,volume:1,maxStack:200,purity:.6},color:{r:48,g:48,b:56}},{id:"crystal_dilithium",name:"Dilithium Crystal",description:"Rare crystal essential for warp core regulation.",category:"crystal",rarity:"rare",stats:{mass:.3,volume:1,maxStack:50,purity:.9,radioactivity:.3},color:{r:32,g:48,b:32}},{id:"gas_hydrogen",name:"Hydrogen",description:"Common gas used for fuel and life support.",category:"gas",rarity:"common",stats:{mass:.1,volume:2,maxStack:2e3,purity:.8},color:{r:32,g:40,b:48}},{id:"bio_protein",name:"Protein Compounds",description:"Organic compounds essential for life support systems.",category:"biological",rarity:"uncommon",stats:{mass:.5,volume:1,maxStack:100,stability:.7},color:{r:40,g:48,b:32}},{id:"energy_antimatter",name:"Antimatter",description:"Extremely dangerous but powerful energy source.",category:"energy",rarity:"epic",stats:{mass:.01,volume:1,maxStack:10,radioactivity:.9,stability:.3},color:{r:48,g:24,b:72}}].forEach(e=>{const t=this.createItem({id:e.id,name:e.name,description:e.description,type:"resource",category:e.category,rarity:e.rarity,stats:e.stats,iconColor:e.color,isUnique:!1,isTradeable:!0,isConsumable:!1});this.addItem(t)})}generateComponents(){[{id:"comp_circuit",name:"Circuit Board",description:"Basic electronic component for ship systems.",category:"engine",rarity:"common",stats:{mass:.2,volume:1,maxStack:100,durability:.9},color:{r:24,g:48,b:24}},{id:"comp_plasma_conduit",name:"Plasma Conduit",description:"Advanced conduit for energy distribution systems.",category:"reactor",rarity:"rare",stats:{mass:2,volume:1,maxStack:20,power:150,efficiency:.85},color:{r:64,g:32,b:16}},{id:"comp_shield_emitter",name:"Shield Emitter",description:"Generates protective energy barriers around the ship.",category:"shield",rarity:"uncommon",stats:{mass:1.5,volume:1,maxStack:50,defense:100,efficiency:.75},color:{r:16,g:32,b:48}}].forEach(e=>{const t=this.createItem({id:e.id,name:e.name,description:e.description,type:"component",category:e.category,rarity:e.rarity,stats:e.stats,iconColor:e.color,isUnique:!1,isTradeable:!0,isConsumable:!1});this.addItem(t)})}generateEquipment(){[{id:"eq_engine_basic",name:"Basic Thruster",description:"Standard propulsion system for small vessels.",category:"engine",rarity:"common",stats:{mass:10,volume:4,maxStack:1,power:100,efficiency:.6},color:{r:48,g:48,b:48}},{id:"eq_shield_mk2",name:"Shield Generator Mk.II",description:"Improved shield generation system.",category:"shield",rarity:"uncommon",stats:{mass:8,volume:3,maxStack:1,defense:200,efficiency:.8},color:{r:16,g:40,b:32}},{id:"eq_warp_core",name:"Warp Core",description:"Essential component for faster-than-light travel.",category:"warp_core",rarity:"epic",stats:{mass:20,volume:8,maxStack:1,power:500,efficiency:.9},color:{r:48,g:24,b:72}}].forEach(e=>{const t=this.createItem({id:e.id,name:e.name,description:e.description,type:"equipment",category:e.category,rarity:e.rarity,stats:e.stats,iconColor:e.color,isUnique:!1,isTradeable:!0,isConsumable:!1});this.addItem(t)})}generateWeapons(){[{id:"wp_laser_basic",name:"Basic Laser Cannon",description:"Standard energy weapon for ship defense.",category:"energy",rarity:"common",stats:{mass:5,volume:2,maxStack:1,damage:50,range:200},color:{r:72,g:24,b:24}},{id:"wp_railgun",name:"Magnetic Railgun",description:"High-velocity projectile weapon system.",category:"projectile",rarity:"rare",stats:{mass:12,volume:4,maxStack:1,damage:150,range:400},color:{r:64,g:64,b:32}}].forEach(e=>{const t=this.createItem({id:e.id,name:e.name,description:e.description,type:"weapon",category:e.category,rarity:e.rarity,stats:e.stats,iconColor:e.color,isUnique:!1,isTradeable:!0,isConsumable:!1});this.addItem(t)})}generateTools(){[{id:"tool_mining_drill",name:"Mining Drill",description:"Automated mining equipment for resource extraction.",category:"mining",rarity:"uncommon",stats:{mass:3,volume:2,maxStack:1,efficiency:.8,durability:.9},color:{r:96,g:64,b:16}},{id:"tool_repair_kit",name:"Repair Kit",description:"Emergency repair tools and materials.",category:"repair",rarity:"common",stats:{mass:1,volume:1,maxStack:10,efficiency:.6},color:{r:48,g:48,b:32}}].forEach(e=>{const t=this.createItem({id:e.id,name:e.name,description:e.description,type:"tool",category:e.category,rarity:e.rarity,stats:e.stats,iconColor:e.color,isUnique:!1,isTradeable:!0,isConsumable:!1});this.addItem(t)})}generateConsumables(){[{id:"cons_energy_cell",name:"Energy Cell",description:"Portable power source for emergency systems.",rarity:"common",stats:{mass:.5,volume:1,maxStack:50,power:100},color:{r:32,g:80,b:64}},{id:"cons_nanobots",name:"Repair Nanobots",description:"Microscopic robots that repair ship damage.",rarity:"rare",stats:{mass:.1,volume:1,maxStack:20,efficiency:.9},color:{r:48,g:24,b:72}}].forEach(e=>{const t=this.createItem({id:e.id,name:e.name,description:e.description,type:"consumable",category:"energy",rarity:e.rarity,stats:e.stats,iconColor:e.color,isUnique:!1,isTradeable:!0,isConsumable:!0});this.addItem(t)})}generateBlueprints(){[{id:"bp_engine_advanced",name:"Advanced Engine Blueprint",description:"Schematic for constructing high-efficiency thrusters.",rarity:"rare",color:{r:32,g:48,b:32}},{id:"bp_warp_upgrade",name:"Warp Core Upgrade Blueprint",description:"Plans for enhancing warp drive capabilities.",rarity:"epic",color:{r:48,g:24,b:72}}].forEach(e=>{const t=this.createItem({id:e.id,name:e.name,description:e.description,type:"blueprint",category:"engine",rarity:e.rarity,stats:{mass:.1,volume:1,maxStack:1},iconColor:e.color,isUnique:!1,isTradeable:!0,isConsumable:!1});this.addItem(t)})}generateArtifacts(){[{id:"art_precursor_relic",name:"Precursor Data Core",description:"Ancient technology from a lost civilization.",rarity:"artifact",stats:{mass:1,volume:1,maxStack:1,radioactivity:.5},color:{r:64,g:32,b:96},lore:"This mysterious device contains fragments of knowledge from a species that vanished eons ago."}].forEach(e=>{const t=this.createItem({id:e.id,name:e.name,description:e.description,type:"artifact",category:"exotic",rarity:e.rarity,stats:e.stats,iconColor:e.color,isUnique:!0,isTradeable:!1,isConsumable:!1,loreText:e.lore});this.addItem(t)})}createItem(e){const t=this.generateItemSprite(e.type,e.category,e.iconColor);return{id:e.id,name:e.name,description:e.description,type:e.type,category:e.category,rarity:e.rarity,sprite:t,iconColor:e.iconColor,stats:{mass:1,volume:1,maxStack:1,...e.stats},isUnique:e.isUnique,isTradeable:e.isTradeable,isConsumable:e.isConsumable,loreText:e.loreText}}generateItemSprite(e,t,i){const s=[];for(let a=0;a<16;a++){s[a]=[];for(let e=0;e<16;e++)s[a][e]={r:0,g:0,b:0}}switch(e){case"resource":this.drawResourceSprite(s,t,i);break;case"component":this.drawComponentSprite(s,t,i);break;case"equipment":this.drawEquipmentSprite(s,t,i);break;case"weapon":this.drawWeaponSprite(s,t,i);break;case"tool":this.drawToolSprite(s,t,i);break;case"consumable":this.drawConsumableSprite(s,i);break;case"blueprint":this.drawBlueprintSprite(s,i);break;case"artifact":this.drawArtifactSprite(s,i)}return{width:16,height:16,pixels:s}}drawResourceSprite(e,t,i){const s=this.darkenColor(i,.7),a=this.lightenColor(i,1.3);if("crystal"===t){this.setPixel(e,8,2,a),this.setPixel(e,7,3,i),this.setPixel(e,8,3,a),this.setPixel(e,9,3,i),this.setPixel(e,6,4,s),this.setPixel(e,7,4,i),this.setPixel(e,8,4,a),this.setPixel(e,9,4,i),this.setPixel(e,10,4,s);for(let t=5;t<13;t++)for(let r=6;r<=10;r++)6===r||10===r?this.setPixel(e,r,t,s):8===r?this.setPixel(e,r,t,a):this.setPixel(e,r,t,i);this.setPixel(e,8,13,s)}else for(let r=4;r<12;r++)for(let t=5;t<11;t++)(t+r)%3==0?this.setPixel(e,t,r,a):(t+r)%3==1?this.setPixel(e,t,r,i):this.setPixel(e,t,r,s)}drawComponentSprite(e,t,i){const s=this.darkenColor(i,.6),a=this.lightenColor(i,1.4);for(let r=3;r<13;r++)for(let t=3;t<13;t++)this.setPixel(e,t,r,s);for(let r=4;r<12;r++)this.setPixel(e,r,6,i),this.setPixel(e,r,9,i);for(let r=4;r<12;r++)this.setPixel(e,6,r,i),this.setPixel(e,9,r,i);this.setPixel(e,5,5,a),this.setPixel(e,10,5,a),this.setPixel(e,5,10,a),this.setPixel(e,10,10,a)}drawEquipmentSprite(e,t,i){const s=this.darkenColor(i,.7),a=this.lightenColor(i,1.2);for(let r=2;r<14;r++)for(let t=4;t<12;t++)2===r||13===r||4===t||11===t?this.setPixel(e,t,r,s):this.setPixel(e,t,r,i);if("engine"===t)for(let r=6;r<10;r++)this.setPixel(e,8,r,a);else"shield"===t&&(this.setPixel(e,8,5,a),this.setPixel(e,7,6,a),this.setPixel(e,9,6,a),this.setPixel(e,8,7,a))}drawWeaponSprite(e,t,i){const s=this.darkenColor(i,.6),a=this.lightenColor(i,1.3);for(let r=6;r<10;r++)for(let t=2;t<14;t++)6===r||9===r?this.setPixel(e,t,r,s):this.setPixel(e,t,r,i);this.setPixel(e,14,7,a),this.setPixel(e,14,8,a);for(let r=8;r<12;r++)for(let t=4;t<8;t++)this.setPixel(e,t,r,s)}drawToolSprite(e,t,i){const s=this.darkenColor(i,.7),a=this.lightenColor(i,1.2);for(let r=8;r<14;r++)for(let t=6;t<10;t++)this.setPixel(e,t,r,s);if("mining"===t)for(let r=2;r<8;r++)this.setPixel(e,8,r,i),r>3&&(this.setPixel(e,7,r,a),this.setPixel(e,9,r,a));else for(let r=4;r<8;r++)for(let t=5;t<11;t++)this.setPixel(e,t,r,i)}drawConsumableSprite(e,t){const i=this.darkenColor(t,.6),s=this.lightenColor(t,1.4);for(let a=3;a<13;a++)for(let s=5;s<11;s++)3===a||12===a||5===s||10===s?this.setPixel(e,s,a,i):this.setPixel(e,s,a,t);this.setPixel(e,8,6,s),this.setPixel(e,7,7,s),this.setPixel(e,9,7,s),this.setPixel(e,8,8,s)}drawBlueprintSprite(e,t){const i=this.darkenColor(t,.8),s=this.lightenColor(t,1.1);for(let a=2;a<14;a++)for(let t=3;t<13;t++)this.setPixel(e,t,a,i);for(let a=5;a<11;a++)this.setPixel(e,a,5,t),this.setPixel(e,a,8,t),this.setPixel(e,a,11,t);this.setPixel(e,5,6,s),this.setPixel(e,8,6,s),this.setPixel(e,11,6,s)}drawArtifactSprite(e,t){const i=this.darkenColor(t,.5),s=this.lightenColor(t,1.5);for(let a=4;a<12;a++)for(let s=4;s<12;s++)(s+a)%2==0?this.setPixel(e,s,a,t):this.setPixel(e,s,a,i);this.setPixel(e,8,2,s),this.setPixel(e,6,6,s),this.setPixel(e,10,6,s),this.setPixel(e,8,10,s),this.setPixel(e,8,14,s)}setPixel(e,t,i,s){t>=0&&t<16&&i>=0&&i<16&&(e[i][t]={...s})}darkenColor(e,t){return{r:Math.floor(e.r*t),g:Math.floor(e.g*t),b:Math.floor(e.b*t)}}lightenColor(e,t){return{r:Math.min(255,Math.floor(e.r*t)),g:Math.min(255,Math.floor(e.g*t)),b:Math.min(255,Math.floor(e.b*t))}}addItem(e){this.items.set(e.id,e),this.categories.has(e.category)||this.categories.set(e.category,[]),this.categories.get(e.category).push(e),e.recipe&&this.recipes.set(e.id,e.recipe)}getItem(e){return this.items.get(e)}getItemsByCategory(e){return this.categories.get(e)||[]}getItemsByType(e){return Array.from(this.items.values()).filter(t=>t.type===e)}getItemsByRarity(e){return Array.from(this.items.values()).filter(t=>t.rarity===e)}getAllItems(){return Array.from(this.items.values())}getRecipe(e){return this.recipes.get(e)}searchItems(e){const t=e.toLowerCase();return Array.from(this.items.values()).filter(e=>e.name.toLowerCase().includes(t)||e.description.toLowerCase().includes(t))}generateRandomItem(e){let t;if(e)t=this.getItemsByRarity(e);else{const e={common:50,uncommon:25,rare:15,epic:8,legendary:1.5,artifact:.5},i=Object.values(e).reduce((e,t)=>e+t,0),s=Math.random()*i;let a=0,r="common";for(const[t,n]of Object.entries(e))if(a+=n,s<=a){r=t;break}t=this.getItemsByRarity(r)}if(0===t.length)return null;return t[Math.floor(Math.random()*t.length)]}renderItemSprite(e,t,i,s,a=1){const r=t.sprite;for(let n=0;n<r.height;n++)for(let t=0;t<r.width;t++){const o=r.pixels[n][t];if(o.r>0||o.g>0||o.b>0)if(1===a)e.setPixel(i+t,s+n,o);else for(let r=0;r<a;r++)for(let c=0;c<a;c++)e.setPixel(i+t*a+c,s+n*a+r,o)}}getStats(){const e={},t={};return this.items.forEach(i=>{e[i.type]=(e[i.type]||0)+1,t[i.rarity]=(t[i.rarity]||0)+1}),{totalItems:this.items.size,itemsByType:e,itemsByRarity:t,categories:this.categories.size}}}class R{constructor(e={},t={},i){this.slots=[],this.totalWeight=0,this.totalVolume=0,this.selectedSlot=-1,this.draggedItem=null,this.filter={},this.sortOptions={by:"name",descending:!1,groupByType:!1},this.isVisible=!1,this.slotSize=32,this.slotSpacing=2,this.panelX=50,this.panelY=50,this.logger=new r("InventoryManager"),this.itemDatabase=i,this.events=t,this.config={maxSlots:50,gridWidth:10,gridHeight:5,maxWeight:1e3,maxVolume:500,allowStacking:!0,...e},this.initializeSlots(),this.logger.info("üì¶ Inventory manager initialized",{slots:this.config.maxSlots,maxWeight:this.config.maxWeight,maxVolume:this.config.maxVolume})}initializeSlots(){this.slots=[];for(let e=0;e<this.config.maxSlots;e++){const t=e%this.config.gridWidth,i=Math.floor(e/this.config.gridWidth);this.slots.push({index:e,item:null,x:t,y:i,locked:!1,reserved:!1})}}addItem(e,t=1){if(t<=0)return!1;let i=t;if(this.config.allowStacking&&e.stats.maxStack>1)for(const s of this.slots)if(s.item&&s.item.item.id===e.id){const t=Math.min(i,e.stats.maxStack-s.item.quantity);if(t>0&&(s.item.quantity+=t,i-=t,0===i))break}for(;i>0;){const t=this.findEmptySlot();if(!t)return this.events.onInventoryFull?.(),!1;const s=Math.min(i,e.stats.maxStack),a=e.stats.mass*s,r=e.stats.volume*s;if(this.totalWeight+a>this.config.maxWeight)return this.events.onWeightExceeded?.(),!1;if(this.totalVolume+r>this.config.maxVolume)return this.events.onVolumeExceeded?.(),!1;t.item={item:e,quantity:s,condition:e.type===I.Equipment?1:void 0},this.totalWeight+=a,this.totalVolume+=r,i-=s}return this.events.onItemAdded?.(e,t),this.logger.debug(`Added ${t}x ${e.name} to inventory`),!0}removeItem(e,t=1){if(t<=0)return!1;let i=t;for(const s of this.slots)if(s.item&&s.item.item.id===e&&i>0){const e=Math.min(i,s.item.quantity),t=s.item.item.stats.mass*e,a=s.item.item.stats.volume*e;if(this.totalWeight-=t,this.totalVolume-=a,s.item.quantity-=e,i-=e,0===s.item.quantity){const t=s.item.item;s.item=null,this.events.onItemRemoved?.(t,e)}}return 0===i}moveItem(e,t){if(e<0||e>=this.slots.length||t<0||t>=this.slots.length)return!1;const i=this.slots[e],s=this.slots[t];if(!i.item||s.locked)return!1;if(!s.item)return s.item=i.item,i.item=null,!0;if(this.config.allowStacking&&i.item.item.id===s.item.item.id&&i.item.item.stats.maxStack>1){const e=Math.min(i.item.quantity,i.item.item.stats.maxStack-s.item.quantity);if(e>0)return s.item.quantity+=e,i.item.quantity-=e,0===i.item.quantity&&(i.item=null),!0}const a=i.item;return i.item=s.item,s.item=a,!0}findEmptySlot(){return this.slots.find(e=>!e.item&&!e.locked)||null}getItemCount(e){return this.slots.filter(t=>t.item&&t.item.item.id===e).reduce((e,t)=>e+t.item.quantity,0)}hasItem(e,t=1){return this.getItemCount(e)>=t}getAllItems(){return this.slots.filter(e=>null!==e.item).map(e=>e.item)}getFilteredItems(){let e=this.getAllItems();if(this.filter.type&&(e=e.filter(e=>e.item.type===this.filter.type)),this.filter.rarity&&(e=e.filter(e=>e.item.rarity===this.filter.rarity)),this.filter.searchText){const t=this.filter.searchText.toLowerCase();e=e.filter(e=>e.item.name.toLowerCase().includes(t)||e.item.description.toLowerCase().includes(t))}return e.sort((e,t)=>{let i=0;switch(this.sortOptions.by){case"name":i=e.item.name.localeCompare(t.item.name);break;case"type":i=e.item.type.localeCompare(t.item.type);break;case"rarity":const s=["common","uncommon","rare","epic","legendary","artifact"];i=s.indexOf(e.item.rarity)-s.indexOf(t.item.rarity);break;case"quantity":i=e.quantity-t.quantity}return this.sortOptions.descending?-i:i}),e}compactInventory(){const e=[];this.slots.forEach(t=>{t.item&&(e.push(t.item),t.item=null)}),this.totalWeight=0,this.totalVolume=0,e.forEach(e=>{this.addItem(e.item,e.quantity)}),this.logger.info("üì¶ Inventory compacted")}autoSort(){const e=this.getAllItems();this.slots.forEach(e=>e.item=null),this.totalWeight=0,this.totalVolume=0,e.sort((e,t)=>{if(e.item.type!==t.item.type)return e.item.type.localeCompare(t.item.type);const i=["artifact","legendary","epic","rare","uncommon","common"],s=i.indexOf(e.item.rarity),a=i.indexOf(t.item.rarity);return s!==a?s-a:e.item.name.localeCompare(t.item.name)}),e.forEach(e=>{this.addItem(e.item,e.quantity)}),this.logger.info("üì¶ Inventory auto-sorted")}getStats(){const e=this.slots.filter(e=>null!==e.item).length,t=new Set(this.slots.filter(e=>e.item).map(e=>e.item.item.id)).size,i=this.slots.filter(e=>e.item).reduce((e,t)=>e+t.item.quantity,0);return{usedSlots:e,totalSlots:this.config.maxSlots,totalWeight:this.totalWeight,maxWeight:this.config.maxWeight,totalVolume:this.totalVolume,maxVolume:this.config.maxVolume,itemCount:i,uniqueItems:t,fillPercentage:e/this.config.maxSlots*100,weightPercentage:this.totalWeight/this.config.maxWeight*100,volumePercentage:this.totalVolume/this.config.maxVolume*100}}render(e){this.isVisible&&(this.renderBackground(e),this.renderHeader(e),this.renderGrid(e),this.renderItems(e),this.selectedSlot>=0&&this.renderSelection(e),this.draggedItem&&this.renderDraggedItem(e),this.renderStats(e))}renderBackground(e){const t=this.config.gridWidth*(this.slotSize+this.slotSpacing)+40,i=this.config.gridHeight*(this.slotSize+this.slotSpacing)+150;e.fillRect(this.panelX,this.panelY,t,i,{r:8,g:12,b:8}),e.drawLine(this.panelX,this.panelY,this.panelX+t,this.panelY,{r:16,g:48,b:16}),e.drawLine(this.panelX,this.panelY,this.panelX,this.panelY+i,{r:16,g:48,b:16}),e.drawLine(this.panelX+t,this.panelY,this.panelX+t,this.panelY+i,{r:16,g:48,b:16}),e.drawLine(this.panelX,this.panelY+i,this.panelX+t,this.panelY+i,{r:16,g:48,b:16})}renderHeader(e){e.renderText("INVENTORY",this.panelX+10,this.panelY+10,{r:12,g:36,b:12},12);const t=this.panelY+25;e.renderText("[S]ORT",this.panelX+10,t,{r:32,g:32,b:32},8),e.renderText("[C]OMPACT",this.panelX+80,t,{r:32,g:32,b:32},8),e.renderText("[F]ILTER",this.panelX+160,t,{r:32,g:32,b:32},8)}renderGrid(e){const t=this.panelX+20,i=this.panelY+50;for(let s=0;s<this.config.gridHeight;s++)for(let a=0;a<this.config.gridWidth;a++){const r=t+a*(this.slotSize+this.slotSpacing),n=i+s*(this.slotSize+this.slotSpacing),o=s*this.config.gridWidth+a,c=this.slots[o];let l={r:16,g:16,b:16};c.locked?l={r:24,g:8,b:8}:c.reserved&&(l={r:8,g:24,b:8}),e.fillRect(r,n,this.slotSize,this.slotSize,l);const h={r:32,g:32,b:32};e.drawLine(r,n,r+this.slotSize,n,h),e.drawLine(r,n,r,n+this.slotSize,h),e.drawLine(r+this.slotSize,n,r+this.slotSize,n+this.slotSize,h),e.drawLine(r,n+this.slotSize,r+this.slotSize,n+this.slotSize,h)}}renderItems(e){const t=this.panelX+20,i=this.panelY+50;this.slots.forEach((s,a)=>{if(!s.item)return;const r=t+s.x*(this.slotSize+this.slotSpacing),n=i+s.y*(this.slotSize+this.slotSpacing),o=r+(this.slotSize-16)/2,c=n+(this.slotSize-16)/2;if(this.itemDatabase.renderItemSprite(e,s.item.item,o,c,1),s.item.quantity>1){const t=s.item.quantity.toString();e.renderText(t,r+this.slotSize-15,n+this.slotSize-10,{r:48,g:48,b:48},8)}const l=this.getRarityColor(s.item.item.rarity);if(e.fillRect(r+2,n+2,4,4,l),void 0!==s.item.condition){const t=Math.floor((this.slotSize-4)*s.item.condition),i=s.item.condition>.7?{r:12,g:36,b:12}:s.item.condition>.3?{r:72,g:48,b:12}:{r:72,g:24,b:24};e.fillRect(r+2,n+this.slotSize-4,t,2,i)}})}getRarityColor(e){switch(e){case _.Common:return{r:48,g:48,b:48};case _.Uncommon:return{r:32,g:48,b:32};case _.Rare:return{r:32,g:40,b:48};case _.Epic:return{r:48,g:32,b:72};case _.Legendary:return{r:96,g:64,b:16};case _.Artifact:return{r:64,g:32,b:96};default:return{r:32,g:32,b:32}}}renderSelection(e){const t=this.slots[this.selectedSlot];if(!t)return;const i=this.panelX+20,s=this.panelY+50,a=i+t.x*(this.slotSize+this.slotSpacing),r=s+t.y*(this.slotSize+this.slotSpacing),n={r:16,g:48,b:16};e.drawLine(a-1,r-1,a+this.slotSize+1,r-1,n),e.drawLine(a-1,r-1,a-1,r+this.slotSize+1,n),e.drawLine(a+this.slotSize+1,r-1,a+this.slotSize+1,r+this.slotSize+1,n),e.drawLine(a-1,r+this.slotSize+1,a+this.slotSize+1,r+this.slotSize+1,n)}renderDraggedItem(e){}renderStats(e){const t=this.getStats(),i=this.panelY+this.config.gridHeight*(this.slotSize+this.slotSpacing)+70,s={r:48,g:48,b:48};e.renderText(`SLOTS: ${t.usedSlots}/${t.totalSlots}`,this.panelX+10,i,s,8),e.renderText(`WEIGHT: ${t.totalWeight.toFixed(1)}/${t.maxWeight}`,this.panelX+10,i+12,s,8),e.renderText(`VOLUME: ${t.totalVolume.toFixed(1)}/${t.maxVolume}`,this.panelX+10,i+24,s,8),e.renderText(`ITEMS: ${t.itemCount} (${t.uniqueItems} types)`,this.panelX+10,i+36,s,8)}setVisible(e){this.isVisible=e}isInventoryVisible(){return this.isVisible}selectSlot(e){e>=0&&e<this.slots.length&&(this.selectedSlot=e,this.events.onSlotSelected?.(this.slots[e]))}getSelectedSlot(){return this.selectedSlot>=0?this.slots[this.selectedSlot]:null}useSelectedItem(){const e=this.getSelectedSlot();if(!e||!e.item)return!1;const t=e.item.item;return!!t.isConsumable&&(this.removeItem(t.id,1),this.logger.info(`Used ${t.name}`),!0)}setFilter(e){this.filter={...this.filter,...e}}clearFilter(){this.filter={}}setSortOptions(e){this.sortOptions={...this.sortOptions,...e}}setSlotLocked(e,t){e>=0&&e<this.slots.length&&(this.slots[e].locked=t)}setSlotReserved(e,t){e>=0&&e<this.slots.length&&(this.slots[e].reserved=t)}clearInventory(){this.slots.forEach(e=>e.item=null),this.totalWeight=0,this.totalVolume=0,this.selectedSlot=-1,this.logger.info("üì¶ Inventory cleared")}saveState(){return{slots:this.slots.map(e=>({index:e.index,item:e.item?{itemId:e.item.item.id,quantity:e.item.quantity,condition:e.item.condition,modifiers:e.item.modifiers}:null,locked:e.locked,reserved:e.reserved})),totalWeight:this.totalWeight,totalVolume:this.totalVolume}}loadState(e){this.clearInventory(),e.slots.forEach((e,t)=>{if(t<this.slots.length){const i=this.slots[t];if(i.locked=e.locked||!1,i.reserved=e.reserved||!1,e.item){const t=this.itemDatabase.getItem(e.item.itemId);t&&(i.item={item:t,quantity:e.item.quantity,condition:e.item.condition,modifiers:e.item.modifiers})}}}),this.totalWeight=e.totalWeight||0,this.totalVolume=e.totalVolume||0,this.logger.info("üì¶ Inventory state loaded")}}class O{constructor(e,t,i={}){this.stations=new Map,this.activeAttempts=[],this.knownRecipes=new Set,this.isVisible=!1,this.selectedStation=null,this.selectedRecipe=null,this.logger=new r("CraftingSystem"),this.itemDatabase=e,this.inventory=t,this.events=i,this.initializeStations(),this.initializeBasicRecipes(),this.logger.info("üîß Crafting system initialized",{stations:this.stations.size,knownRecipes:this.knownRecipes.size})}initializeStations(){[{id:"basic_fabricator",name:"Basic Fabricator",type:"basic",availableRecipes:[],energyRequired:10,isActive:!0},{id:"advanced_forge",name:"Advanced Forge",type:"advanced",availableRecipes:[],energyRequired:25,isActive:!0},{id:"industrial_plant",name:"Industrial Plant",type:"industrial",availableRecipes:[],energyRequired:50,isActive:!1}].forEach(e=>{this.stations.set(e.id,e)})}initializeBasicRecipes(){const e=[{id:"craft_circuit_from_metal",requiredItems:{metal_iron:2,crystal_quartz:1},craftingTime:5,energyCost:10,successRate:.9},{id:"craft_repair_kit",requiredItems:{metal_iron:1,comp_circuit:1},craftingTime:8,energyCost:15,successRate:.85},{id:"craft_energy_cell",requiredItems:{crystal_quartz:2,gas_hydrogen:5},craftingTime:3,energyCost:5,successRate:.95},{id:"craft_shield_emitter",requiredItems:{metal_titanium:3,crystal_quartz:2,comp_circuit:1},craftingTime:15,energyCost:30,successRate:.7},{id:"craft_plasma_conduit",requiredItems:{metal_titanium:2,crystal_dilithium:1,comp_circuit:2},craftingTime:20,energyCost:40,successRate:.6}];e.forEach(e=>{const t=this.stations.get("basic_fabricator");if(t&&t.availableRecipes.push(e.id),e.energyCost>20){const t=this.stations.get("advanced_forge");t&&t.availableRecipes.push(e.id)}e.energyCost<=15&&this.knownRecipes.add(e.id)}),this.updateItemRecipes(e)}updateItemRecipes(e){e.forEach(e=>{const t=this.findTargetItemForRecipe(e.id);t&&(t.recipe=e)})}findTargetItemForRecipe(e){const t={craft_circuit_from_metal:"comp_circuit",craft_repair_kit:"tool_repair_kit",craft_energy_cell:"cons_energy_cell",craft_shield_emitter:"comp_shield_emitter",craft_plasma_conduit:"comp_plasma_conduit"}[e];return t?this.itemDatabase.getItem(t):void 0}startCrafting(e,t){const i=this.stations.get(t),s=this.findTargetItemForRecipe(e);if(!i||!s||!s.recipe)return this.events.onCraftingFailed?.("Invalid recipe or station"),!1;if(!i.isActive)return this.events.onCraftingFailed?.("Crafting station is offline"),!1;if(!this.knownRecipes.has(e))return this.events.onCraftingFailed?.("Recipe not yet discovered"),!1;if(!i.availableRecipes.includes(e))return this.events.onCraftingFailed?.("Station cannot craft this item"),!1;const a=s.recipe;for(const[n,o]of Object.entries(a.requiredItems))if(!this.inventory.hasItem(n,o))return this.events.onCraftingFailed?.(`Insufficient ${n}: need ${o}`),!1;for(const[n,o]of Object.entries(a.requiredItems))this.inventory.removeItem(n,o);const r={recipeId:e,station:i,startTime:Date.now(),duration:1e3*a.craftingTime,energyCost:a.energyCost,successRate:a.successRate};return this.activeAttempts.push(r),this.events.onCraftingStarted?.(r),this.logger.info(`üîß Started crafting ${s.name}`,{station:i.name,duration:a.craftingTime,successRate:a.successRate}),!0}update(e){const t=Date.now(),i=[];this.activeAttempts.forEach(e=>{t>=e.startTime+e.duration&&i.push(e)}),i.forEach(e=>{this.completeCrafting(e)}),this.activeAttempts=this.activeAttempts.filter(e=>!i.includes(e))}completeCrafting(e){const t=this.findTargetItemForRecipe(e.recipeId);if(!t)return;if(Math.random()<e.successRate){this.inventory.addItem(t,1)?(this.logger.info(`‚úÖ Successfully crafted ${t.name}`),this.events.onCraftingCompleted?.(t,!0)):(this.logger.warn(`üì¶ Inventory full - ${t.name} lost`),this.events.onCraftingFailed?.("Inventory full - item lost"))}else if(this.logger.warn(`‚ùå Crafting failed: ${t.name}`),this.events.onCraftingCompleted?.(t,!1),t.recipe)for(const[i,s]of Object.entries(t.recipe.requiredItems))if(Math.random()<.5){const e=Math.ceil(.3*s),t=this.itemDatabase.getItem(i);t&&this.inventory.addItem(t,e)}}learnRecipe(e){return!this.knownRecipes.has(e)&&(this.knownRecipes.add(e),this.logger.info(`üìö Learned new recipe: ${e}`),!0)}getAvailableRecipes(e){const t=this.stations.get(e);return t?t.availableRecipes.filter(e=>this.knownRecipes.has(e)).map(e=>this.findTargetItemForRecipe(e)).filter(e=>void 0!==e):[]}canCraftRecipe(e){const t=this.findTargetItemForRecipe(e);if(!t||!t.recipe)return{canCraft:!1,missingItems:{},hasStation:!1};const i=t.recipe,s={};let a=!0;for(const[n,o]of Object.entries(i.requiredItems)){const e=this.inventory.getItemCount(n);e<o&&(s[n]=o-e,a=!1)}const r=Array.from(this.stations.values()).some(t=>t.isActive&&t.availableRecipes.includes(e));return{canCraft:a&&r&&this.knownRecipes.has(e),missingItems:s,hasStation:r}}getCraftingProgress(){const e=Date.now();return this.activeAttempts.map(t=>{const i=e-t.startTime,s=Math.min(1,i/t.duration),a=Math.max(0,(t.duration-i)/1e3),r=this.findTargetItemForRecipe(t.recipeId);return{recipeId:t.recipeId,itemName:r?.name||"Unknown",progress:s,timeRemaining:a}})}render(e){this.isVisible&&(this.renderCraftingPanel(e),this.renderCraftingProgress(e))}renderCraftingPanel(e){const t=300,i=100,s=400,a=300;e.fillRect(t,i,s,a,{r:8,g:12,b:8});const r={r:16,g:48,b:16};e.drawLine(t,i,700,i,r),e.drawLine(t,i,t,400,r),e.drawLine(700,i,700,400,r),e.drawLine(t,400,700,400,r),e.renderText("FABRICATION UNIT",310,110,{r:12,g:36,b:12},12);let n=135;if(this.stations.forEach(t=>{const i=t.isActive?{r:12,g:36,b:12}:{r:32,g:32,b:32},s=t.isActive?"ONLINE":"OFFLINE";e.renderText(`[${t.id}] ${t.name}: ${s}`,310,n,i,8),n+=12}),this.selectedStation){const t=this.getAvailableRecipes(this.selectedStation);e.renderText("AVAILABLE SCHEMATICS:",310,n+10,{r:48,g:48,b:48},8);let i=n+25;t.forEach(t=>{const s=this.canCraftRecipe(t.recipe.id),a=s.canCraft?{r:12,g:36,b:12}:{r:72,g:24,b:24};if(e.renderText(`- ${t.name}`,320,i,a,8),i+=12,Object.keys(s.missingItems).length>0){const t=Object.entries(s.missingItems).map(([e,t])=>`${t}x ${e}`).join(", ");e.renderText(`  Missing: ${t}`,330,i,{r:48,g:32,b:32},7),i+=10}})}}renderCraftingProgress(e){const t=this.getCraftingProgress();if(0===t.length)return;let i=400;e.renderText("FABRICATION IN PROGRESS:",50,i,{r:12,g:36,b:12},10),i+=15,t.forEach(t=>{const s=Math.floor(200*t.progress);e.fillRect(50,i,200,8,{r:16,g:16,b:16});const a=t.progress>=1?{r:12,g:36,b:12}:{r:32,g:80,b:64};e.fillRect(50,i,s,8,a),e.renderText(`${t.itemName} - ${t.timeRemaining.toFixed(1)}s`,260,i,{r:48,g:48,b:48},8),i+=15})}setVisible(e){this.isVisible=e}isCraftingVisible(){return this.isVisible}selectStation(e){this.stations.has(e)&&(this.selectedStation=e)}getSelectedStation(){return this.selectedStation&&this.stations.get(this.selectedStation)||null}setStationActive(e,t){const i=this.stations.get(e);i&&(i.isActive=t,this.logger.info(`üîß Station ${i.name} ${t?"activated":"deactivated"}`))}getStats(){const e=Array.from(this.stations.values()).filter(e=>e.isActive).length;return{knownRecipes:this.knownRecipes.size,activeStations:e,totalStations:this.stations.size,activeCrafting:this.activeAttempts.length}}saveState(){return{knownRecipes:Array.from(this.knownRecipes),stations:Array.from(this.stations.values()),activeAttempts:this.activeAttempts}}loadState(e){e.knownRecipes&&(this.knownRecipes=new Set(e.knownRecipes)),e.stations&&e.stations.forEach(e=>{this.stations.set(e.id,e)}),e.activeAttempts&&(this.activeAttempts=e.activeAttempts),this.logger.info("üîß Crafting state loaded")}}var L=(e=>(e.Energy="energy",e.Projectile="projectile",e.Missile="missile",e.Plasma="plasma",e.Beam="beam",e.Torpedo="torpedo",e))(L||{}),z=(e=>(e.Kinetic="kinetic",e.Energy="energy",e.Thermal="thermal",e.Electromagnetic="electromagnetic",e.Explosive="explosive",e))(z||{});class ${constructor(e={}){this.weapons=new Map,this.projectiles=new Map,this.weaponStates=new Map,this.nextProjectileId=0,this.targetingMode="manual",this.currentTarget=null,this.targetPosition=null,this.targets=new Map,this.logger=new r("WeaponSystem"),this.events=e,this.logger.info("‚öîÔ∏è Weapon system initialized")}addWeapon(e){this.weapons.set(e.id,e),this.weaponStates.set(e.id,{isCharging:!1,chargeProgress:0,lastFired:0,heat:0,ammo:e.stats.ammoCapacity||-1,isOverheated:!1,cooldownEnd:0}),this.logger.info(`üî´ Added weapon: ${e.name}`,{type:e.type,damage:e.stats.damage,range:e.stats.range})}removeWeapon(e){this.weapons.delete(e),this.weaponStates.delete(e);for(const[t,i]of this.projectiles.entries())i.weaponId===e&&this.projectiles.delete(t);this.logger.info(`üî´ Removed weapon: ${e}`)}fireWeapon(e,t,i){const s=this.weapons.get(e),a=this.weaponStates.get(e);if(!s||!a)return!1;const r=Date.now()/1e3;if(a.isOverheated||r<a.cooldownEnd)return!1;if(r-a.lastFired<1/s.stats.fireRate)return!1;if(0===a.ammo)return this.events.onAmmoEmpty?.(s),!1;if(s.stats.chargeTime>0){if(!a.isCharging)return a.isCharging=!0,a.chargeProgress=0,!1;if(a.chargeProgress<1)return!1}let n=i;n||(n=this.targetPosition?this.targetPosition:this.currentTarget&&this.targets.has(this.currentTarget)?this.targets.get(this.currentTarget).position:{x:t.x+s.stats.range,y:t.y});const o=this.calculateFiringDirection(t,n,s.stats.spread),c=this.createProjectile(s,t,o,n);return this.projectiles.set(c.id,c),a.lastFired=r,a.heat+=.1,a.isCharging=!1,a.chargeProgress=0,a.ammo>0&&a.ammo--,a.heat>1&&(a.isOverheated=!0,a.cooldownEnd=r+s.stats.cooldownTime,this.events.onWeaponOverheat?.(s)),this.events.onWeaponFired?.(s,c),this.logger.debug(`üî• Fired ${s.name}`,{damage:c.damage,range:c.maxRange,targetDistance:this.calculateDistance(t,n)}),!0}createProjectile(e,t,i,s){const a=`proj_${e.id}_${this.nextProjectileId++}`;let r=500,n=!1,o=0;switch(e.type){case"energy":r=800;break;case"projectile":r=600;break;case"missile":r=300,n=!0,o=.1;break;case"plasma":r=400;break;case"beam":r=1200;break;case"torpedo":r=250,n=!0,o=.15}return{id:a,position:{...t},velocity:{x:i.x*r,y:i.y*r},damage:e.stats.damage,damageType:e.damageType,range:0,maxRange:e.stats.range,size:this.getProjectileSize(e.type),weaponId:e.id,targetId:this.currentTarget||void 0,penetration:e.stats.penetration,isHoming:n,homingStrength:o,life:1,trail:[]}}getProjectileSize(e){switch(e){case"energy":default:return 2;case"projectile":case"beam":return 1;case"missile":return 4;case"plasma":return 3;case"torpedo":return 6}}calculateFiringDirection(e,t,i){const s=t.x-e.x,a=t.y-e.y,r=Math.sqrt(s*s+a*a);if(0===r)return{x:1,y:0};let n={x:s/r,y:a/r};if(i>0){const e=i*Math.PI/180*(Math.random()-.5),t=Math.cos(e),s=Math.sin(e);n={x:n.x*t-n.y*s,y:n.x*s+n.y*t}}return n}update(e){this.updateWeaponStates(e),this.updateProjectiles(e),this.checkProjectileHits(),this.cleanupProjectiles()}updateWeaponStates(e){const t=Date.now()/1e3;for(const[i,s]of this.weaponStates.entries()){const a=this.weapons.get(i);a&&(s.heat>0&&(s.heat=Math.max(0,s.heat-.5*e)),s.isOverheated&&t>=s.cooldownEnd&&(s.isOverheated=!1,s.heat=0),s.isCharging&&a.stats.chargeTime>0&&(s.chargeProgress=Math.min(1,s.chargeProgress+e/a.stats.chargeTime)))}}updateProjectiles(e){for(const[t,i]of this.projectiles.entries())i.position.x+=i.velocity.x*e,i.position.y+=i.velocity.y*e,i.range+=Math.sqrt(i.velocity.x*i.velocity.x+i.velocity.y*i.velocity.y)*e,i.trail.length>10&&i.trail.shift(),i.trail.push({...i.position}),i.isHoming&&i.targetId&&this.targets.has(i.targetId)&&this.updateHomingProjectile(i,e),i.life=Math.max(0,1-i.range/i.maxRange)}updateHomingProjectile(e,t){const i=this.targets.get(e.targetId);if(!i)return;const s=i.position.x+.5*i.velocity.x,a=i.position.y+.5*i.velocity.y,r=s-e.position.x,n=a-e.position.y,o=Math.sqrt(r*r+n*n);if(o>0){const i={x:r/o,y:n/o},s=Math.sqrt(e.velocity.x*e.velocity.x+e.velocity.y*e.velocity.y),a={x:e.velocity.x/s,y:e.velocity.y/s},c=e.homingStrength*t*10,l={x:a.x+(i.x-a.x)*c,y:a.y+(i.y-a.y)*c},h=Math.sqrt(l.x*l.x+l.y*l.y);h>0&&(e.velocity.x=l.x/h*s,e.velocity.y=l.y/h*s)}}checkProjectileHits(){for(const[e,t]of this.projectiles.entries())for(const[i,s]of this.targets.entries()){if(this.calculateDistance(t.position,s.position)<=t.size+s.size){const a=this.calculateDamage(t,s),r={targetId:i,damage:a.finalDamage,damageType:t.damageType,criticalHit:a.critical,penetrated:a.penetrated,shieldsHit:a.shieldsHit,hullHit:a.hullHit};this.events.onProjectileHit?.(t,r),a.penetrated||this.projectiles.delete(e),this.logger.debug("üí• Projectile hit",{targetId:i,damage:a.finalDamage,critical:a.critical});break}}}calculateDamage(e,t){let i=e.damage,s=!1,a=!1;Math.random()<.05&&(s=!0,i*=2);return i*=Math.max(.3,1-e.range/e.maxRange*.5),e.penetration>.7&&(a=Math.random()<.3),{finalDamage:Math.floor(i),critical:s,penetrated:a,shieldsHit:!0,hullHit:a}}cleanupProjectiles(){for(const[e,t]of this.projectiles.entries())(t.life<=0||t.range>=t.maxRange)&&this.projectiles.delete(e)}setTargetingMode(e){this.targetingMode=e,this.logger.debug(`üéØ Targeting mode: ${e}`)}setTargetPosition(e){this.targetPosition={...e}}setTarget(e){this.currentTarget=e,this.logger.debug(`üéØ Target: ${e||"none"}`)}updateTarget(e,t,i,s){this.targets.set(e,{position:{...t},velocity:{...i},size:s})}removeTarget(e){this.targets.delete(e),this.currentTarget===e&&(this.currentTarget=null)}getWeapon(e){const t=this.weapons.get(e),i=this.weaponStates.get(e);return t&&i?{weapon:t,state:i}:null}getAllWeapons(){const e=[];for(const[t,i]of this.weapons.entries()){const s=this.weaponStates.get(t);s&&e.push({weapon:i,state:s})}return e}reloadWeapon(e){const t=this.weapons.get(e),i=this.weaponStates.get(e);return!!(t&&i&&t.stats.ammoCapacity)&&(i.ammo=t.stats.ammoCapacity,this.logger.debug(`üîÑ Reloaded ${t.name}`),!0)}render(e){this.renderProjectiles(e),this.renderWeaponCharges(e)}renderProjectiles(e){for(const t of this.projectiles.values()){if(t.trail.length>1)for(let a=1;a<t.trail.length;a++){const i=a/t.trail.length*t.life,s=this.getProjectileColor(t,.5*i);e.drawLine(t.trail[a-1].x,t.trail[a-1].y,t.trail[a].x,t.trail[a].y,s)}const i=this.getProjectileColor(t,t.life),s=t.size*t.life;t.size>2?e.drawCircle(t.position.x,t.position.y,s,i,!0):e.fillRect(t.position.x-s/2,t.position.y-s/2,s,s,i)}}getProjectileColor(e,t){const i=this.weapons.get(e.weaponId);if(!i)return{r:48,g:48,b:48};let s;switch(i.type){case"energy":s={r:16,g:48,b:16};break;case"projectile":s={r:96,g:64,b:16};break;case"missile":s={r:72,g:24,b:24};break;case"plasma":s={r:48,g:24,b:72};break;case"beam":s={r:32,g:80,b:64};break;case"torpedo":s={r:64,g:32,b:96};break;default:s={r:48,g:48,b:48}}return{r:Math.floor(s.r*t),g:Math.floor(s.g*t),b:Math.floor(s.b*t)}}renderWeaponCharges(e){}calculateDistance(e,t){const i=e.x-t.x,s=e.y-t.y;return Math.sqrt(i*i+s*s)}getStats(){const e={};for(const t of this.weapons.values())e[t.type]=(e[t.type]||0)+1;return{totalWeapons:this.weapons.size,activeProjectiles:this.projectiles.size,targetsTracked:this.targets.size,weaponsByType:e}}clearProjectiles(){this.projectiles.clear()}clearTargets(){this.targets.clear(),this.currentTarget=null}}var B=(e=>(e.Aggressive="aggressive",e.Defensive="defensive",e.Evasive="evasive",e.Patrol="patrol",e.Guard="guard",e.Kamikaze="kamikaze",e.Sniper="sniper",e.Support="support",e))(B||{}),F=(e=>(e.Fighter="fighter",e.Corvette="corvette",e.Frigate="frigate",e.Destroyer="destroyer",e.Cruiser="cruiser",e.Battleship="battleship",e.Drone="drone",e))(F||{});class G{constructor(e,t={}){this.enemies=new Map,this.playerPosition={x:0,y:0},this.playerVelocity={x:0,y:0},this.playerSize=20,this.factionRelations=new Map,this.logger=new r("EnemyAI"),this.weaponSystem=e,this.events=t,this.initializeFactions(),this.logger.info("ü§ñ Enemy AI system initialized")}initializeFactions(){const e=["pirates","aliens","rebels","corporation","military"];for(const t of e){this.factionRelations.has(t)||this.factionRelations.set(t,new Map);for(const i of e){let e=0;e=t===i?1:"pirates"===t&&"military"===i||"military"===t&&"pirates"===i||"rebels"===t&&"corporation"===i||"corporation"===t&&"rebels"===i?-1:"aliens"===t?-.5:.4*Math.random()-.2,this.factionRelations.get(t).set(i,e)}}}spawnEnemy(e,t){const i={config:e,position:{...t},velocity:{x:0,y:0},rotation:Math.random()*Math.PI*2,currentTarget:null,state:"idle",stateTimer:0,lastDecisionTime:0,lastShotTime:0,weaponCooldowns:new Map,waypoint:null,patrolCenter:{...t},patrolRadius:500,isAlive:!0,lastDamageTime:0};return e.weapons.forEach(t=>{const i=`${e.id}_${t.id}`;this.weaponSystem.addWeapon({...t,id:i})}),this.weaponSystem.updateTarget(e.id,t,{x:0,y:0},e.size),this.enemies.set(e.id,i),this.events.onEnemySpawned?.(i),this.logger.info(`üõ∏ Spawned ${e.shipClass} "${e.name}"`,{faction:e.faction,behavior:e.behavior,position:t}),e.id}updatePlayer(e,t,i){this.playerPosition={...e},this.playerVelocity={...t},this.playerSize=i,this.weaponSystem.updateTarget("player",e,t,i)}update(e){for(const t of this.enemies.values())t.isAlive&&this.updateEnemy(t,e);this.cleanupDeadEnemies()}updateEnemy(e,t){const i=Date.now()/1e3;e.stateTimer+=t,i-e.lastDecisionTime>=e.config.reactionTime&&(this.makeDecision(e),e.lastDecisionTime=i),this.executeState(e,t),this.updateMovement(e,t),this.updateCombat(e,t),this.weaponSystem.updateTarget(e.config.id,e.position,e.velocity,e.config.size)}makeDecision(e){const t=this.calculateDistance(e.position,this.playerPosition),i=t<=e.config.engagementRange,s=this.hasLineOfSight(e.position,this.playerPosition);let a=e.state;switch(e.config.behavior){case"aggressive":a=i&&s?"attack":t<2*e.config.engagementRange?"pursue":"patrol";break;case"defensive":a=i&&s&&e.lastDamageTime>Date.now()/1e3-5?"attack":t<e.config.engagementRange?"guard":"patrol";break;case"evasive":a=e.config.hull<.3*e.config.maxHull?"retreat":i?"evade":"patrol";break;case"sniper":a=t<=e.config.preferredRange&&s?"attack":t<e.config.preferredRange?"retreat":"pursue";break;case"kamikaze":a=t<100?"ramming":"pursue";break;default:a="patrol"}a!==e.state&&this.changeState(e,a)}changeState(e,t){const i=e.state;switch(e.state=t,e.stateTimer=0,t){case"patrol":e.waypoint=this.generatePatrolWaypoint(e);break;case"pursue":case"attack":case"circle_strafe":e.currentTarget="player";break;case"retreat":e.waypoint=this.generateRetreatWaypoint(e)}this.events.onEnemyStateChanged?.(e,i,t),this.logger.debug(`ü§ñ ${e.config.name} state: ${i} ‚Üí ${t}`)}executeState(e,t){switch(e.state){case"idle":break;case"patrol":this.executePatrol(e,t);break;case"pursue":this.executePursue(e,t);break;case"attack":this.executeAttack(e,t);break;case"evade":this.executeEvade(e,t);break;case"retreat":this.executeRetreat(e,t);break;case"circle_strafe":this.executeCircleStrafe(e,t);break;case"ramming":this.executeRamming(e,t)}}executePatrol(e,t){(!e.waypoint||this.calculateDistance(e.position,e.waypoint)<50)&&(e.waypoint=this.generatePatrolWaypoint(e)),this.moveToward(e,e.waypoint,.5)}executePursue(e,t){const i=this.predictPlayerPosition(.5);this.moveToward(e,i,1)}executeAttack(e,t){const i=this.calculateDistance(e.position,this.playerPosition);if(i>1.2*e.config.preferredRange)this.moveToward(e,this.playerPosition,1);else if(i<.8*e.config.preferredRange){const t=this.calculateRetreatPoint(e.position,this.playerPosition);this.moveToward(e,t,.8)}else this.executeCircleStrafe(e,t)}executeEvade(e,t){const i=this.calculateEvasionPoint(e);this.moveToward(e,i,1.2)}executeRetreat(e,t){e.waypoint||(e.waypoint=this.generateRetreatWaypoint(e)),this.moveToward(e,e.waypoint,1.5)}executeCircleStrafe(e,t){const i={x:this.playerPosition.x-e.position.x,y:this.playerPosition.y-e.position.y},s=Math.sqrt(i.x*i.x+i.y*i.y);if(0===s)return;i.x/=s,i.y/=s;const a={x:-i.y,y:i.x};Math.random()<.1&&(a.x*=-1,a.y*=-1);const r={x:e.position.x+200*a.x,y:e.position.y+200*a.y};this.moveToward(e,r,.8)}executeRamming(e,t){this.moveToward(e,this.playerPosition,2)}moveToward(e,t,i){const s={x:t.x-e.position.x,y:t.y-e.position.y},a=Math.sqrt(s.x*s.x+s.y*s.y);if(0===a)return;s.x/=a,s.y/=a;const r=e.config.maxSpeed*i,n=s.x*r,o=s.y*r,c=e.config.acceleration;e.velocity.x+=(n-e.velocity.x)*c*.016,e.velocity.y+=(o-e.velocity.y)*c*.016;const l=Math.atan2(s.y,s.x);e.rotation=this.lerpAngle(e.rotation,l,.016*e.config.turnRate)}updateMovement(e,t){e.position.x+=e.velocity.x*t,e.position.y+=e.velocity.y*t;e.velocity.x*=.95,e.velocity.y*=.95}updateCombat(e,t){if(!e.currentTarget)return;const i=Date.now()/1e3,s="player"===e.currentTarget?this.playerPosition:null;if(!s)return;const a=this.calculateDistance(e.position,s),r=a<=e.config.engagementRange,n=this.hasLineOfSight(e.position,s);if(r&&n)for(const o of e.config.weapons){const t=`${e.config.id}_${o.id}`,s=t;if(i-(e.weaponCooldowns.get(s)||0)>=1/o.stats.fireRate){const r=e.config.accuracy*e.config.intelligence;if(Math.random()<r){this.weaponSystem.fireWeapon(t,e.position,this.predictPlayerPosition(a/600))&&e.weaponCooldowns.set(s,i)}}}}applyDamage(e,t,i){const s=this.enemies.get(e);if(!s||!s.isAlive)return!1;let a=t;if(s.config.armor>0&&(a=Math.max(1,t-.1*s.config.armor)),s.config.shields>0){const e=Math.min(a,s.config.shields);s.config.shields-=e,a-=e}return a>0&&(s.config.hull-=a),s.lastDamageTime=Date.now()/1e3,this.events.onEnemyDamaged?.(s,t),s.config.hull<=0&&(this.destroyEnemy(e),!0)}destroyEnemy(e){const t=this.enemies.get(e);t&&(t.isAlive=!1,t.config.weapons.forEach(t=>{this.weaponSystem.removeWeapon(`${e}_${t.id}`)}),this.weaponSystem.removeTarget(e),this.events.onEnemyDestroyed?.(t),this.logger.info(`üí• Destroyed ${t.config.name}`))}cleanupDeadEnemies(){for(const[e,t]of this.enemies.entries())t.isAlive||this.enemies.delete(e)}generatePatrolWaypoint(e){const t=Math.random()*Math.PI*2,i=e.patrolRadius*(.5+.5*Math.random());return{x:e.patrolCenter.x+Math.cos(t)*i,y:e.patrolCenter.y+Math.sin(t)*i}}generateRetreatWaypoint(e){const t={x:e.position.x-this.playerPosition.x,y:e.position.y-this.playerPosition.y},i=Math.sqrt(t.x*t.x+t.y*t.y);return 0===i?{x:e.position.x+500,y:e.position.y}:(t.x/=i,t.y/=i,{x:e.position.x+800*t.x,y:e.position.y+800*t.y})}calculateRetreatPoint(e,t){const i={x:e.x-t.x,y:e.y-t.y},s=Math.sqrt(i.x*i.x+i.y*i.y);return 0===s?e:(i.x/=s,i.y/=s,{x:e.x+200*i.x,y:e.y+200*i.y})}calculateEvasionPoint(e){const t=this.playerPosition.x-e.position.x,i=this.playerPosition.y-e.position.y,s=Math.sqrt(t*t+i*i);if(0===s)return e.position;const a={x:-i/s,y:t/s};return Math.random()<.5&&(a.x*=-1,a.y*=-1),{x:e.position.x+300*a.x,y:e.position.y+300*a.y}}predictPlayerPosition(e){return{x:this.playerPosition.x+this.playerVelocity.x*e,y:this.playerPosition.y+this.playerVelocity.y*e}}hasLineOfSight(e,t){return!0}calculateDistance(e,t){const i=e.x-t.x,s=e.y-t.y;return Math.sqrt(i*i+s*s)}lerpAngle(e,t,i){let s=t-e;for(;s>Math.PI;)s-=2*Math.PI;for(;s<-Math.PI;)s+=2*Math.PI;return e+s*i}render(e){for(const t of this.enemies.values())t.isAlive&&this.renderEnemy(e,t)}renderEnemy(e,t){const i=t.position,s=t.config.size,a=this.getShipColor(t.config.faction,t.config.shipClass);if("drone"===t.config.shipClass){const r=this.getTrianglePoints(i,.5*s,t.rotation);this.drawTriangle(e,r,a)}else this.drawShip(e,i,s,t.rotation,a);this.drawHealthBar(e,t),"idle"!==t.state&&this.drawStateIndicator(e,t)}getShipColor(e,t){return{pirates:{r:72,g:24,b:24},aliens:{r:48,g:24,b:72},rebels:{r:24,g:48,b:24},corporation:{r:48,g:48,b:32},military:{r:32,g:32,b:48}}[e]||{r:48,g:48,b:48}}getTrianglePoints(e,t,i){const s=Math.cos(i),a=Math.sin(i);return[{x:e.x+s*t,y:e.y+a*t},{x:e.x+s*(.5*-t)-a*(.5*t),y:e.y+a*(.5*-t)+s*(.5*t)},{x:e.x+s*(.5*-t)-a*(.5*-t),y:e.y+a*(.5*-t)+s*(.5*-t)}]}drawTriangle(e,t,i){for(let s=0;s<t.length;s++){const a=(s+1)%t.length;e.drawLine(t[s].x,t[s].y,t[a].x,t[a].y,i)}}drawShip(e,t,i,s,a){const r=Math.cos(s),n=Math.sin(s),o=.3*i,c=.6*i,l=[{x:t.x+r*c-n*o,y:t.y+n*c+r*o},{x:t.x+r*c-n*-o,y:t.y+n*c+r*-o},{x:t.x+r*-c-n*-o,y:t.y+n*-c+r*-o},{x:t.x+r*-c-n*o,y:t.y+n*-c+r*o}];for(let u=0;u<l.length;u++){const t=(u+1)%l.length;e.drawLine(l[u].x,l[u].y,l[t].x,l[t].y,a)}const h=t.x+r*c,d=t.y+n*c;e.fillRect(h-1,d-1,2,2,a)}drawHealthBar(e,t){const i=t.position,s=t.config.size,a=1.2*s,r=i.y-.8*s;e.fillRect(i.x-a/2,r,a,3,{r:16,g:16,b:16});const n=t.config.hull/t.config.maxHull,o=a*n,c=n>.6?{r:12,g:36,b:12}:n>.3?{r:72,g:48,b:12}:{r:72,g:24,b:24};if(e.fillRect(i.x-a/2,r,o,3,c),t.config.maxShields>0){const s=a*(t.config.shields/t.config.maxShields);e.fillRect(i.x-a/2,r-5,s,2,{r:16,g:40,b:32})}}drawStateIndicator(e,t){const i=t.position,s={patrol:{r:32,g:32,b:32},pursue:{r:72,g:48,b:12},attack:{r:72,g:24,b:24},evade:{r:12,g:36,b:12},retreat:{r:48,g:32,b:72},ramming:{r:96,g:32,b:32}}[t.state]||{r:48,g:48,b:48};e.fillRect(i.x-3,i.y+t.config.size+5,6,6,s)}getAllEnemies(){return Array.from(this.enemies.values()).filter(e=>e.isAlive)}getEnemy(e){return this.enemies.get(e)||null}getStats(){const e={},t={};let i=0;for(const s of this.enemies.values())s.isAlive&&(i++,e[s.config.faction]=(e[s.config.faction]||0)+1,t[s.state]=(t[s.state]||0)+1);return{totalEnemies:this.enemies.size,aliveEnemies:i,enemiesByFaction:e,enemiesByState:t}}clearEnemies(){for(const[e]of this.enemies.entries())this.destroyEnemy(e);this.enemies.clear()}}class q{constructor(e,t,i={}){this.activeEncounters=new Map,this.combatStats={totalDamageDealt:0,totalDamageReceived:0,enemiesDestroyed:0,shotsHit:0,shotsFired:0,encountersCompleted:0,experienceGained:0},this.playerPosition={x:0,y:0},this.playerVelocity={x:0,y:0},this.playerSize=20,this.playerHull=100,this.playerMaxHull=100,this.logger=new r("CombatManager"),this.itemDatabase=e,this.inventory=t,this.events=i,this.weaponSystem=new $({onWeaponFired:(e,t)=>{this.combatStats.shotsFired++,this.logger.debug(`üî´ ${e.name} fired`)},onProjectileHit:(e,t)=>{this.handleProjectileHit(e,t)},onWeaponOverheat:e=>{this.logger.warn(`üî• ${e.name} overheated`)}}),this.enemyAI=new G(this.weaponSystem,{onEnemySpawned:e=>{this.logger.info(`üõ∏ Enemy spawned: ${e.config.name}`)},onEnemyDestroyed:e=>{this.handleEnemyDestroyed(e)},onEnemyDamaged:(e,t)=>{this.logger.debug(`üí• ${e.config.name} took ${t} damage`)}}),this.initializePlayerWeapons(),this.logger.info("‚öîÔ∏è Combat manager initialized")}initializePlayerWeapons(){const e={id:"player_laser_1",name:"Basic Laser Cannon",type:L.Energy,damageType:z.Energy,stats:{damage:25,range:400,fireRate:3,energyCost:5,accuracy:.9,penetration:.1,spread:2,chargeTime:0,cooldownTime:2},mountPoint:{x:0,y:-10},hardpointSize:"small"},t={id:"player_cannon_1",name:"Mass Driver",type:L.Projectile,damageType:z.Kinetic,stats:{damage:40,range:500,fireRate:2,energyCost:0,accuracy:.8,penetration:.3,spread:1,chargeTime:0,cooldownTime:1,ammoCapacity:100,reloadTime:3},mountPoint:{x:0,y:10},hardpointSize:"small"};this.weaponSystem.addWeapon(e),this.weaponSystem.addWeapon(t),this.logger.info("üî´ Player weapons initialized",{laser:e.name,cannon:t.name})}handleProjectileHit(e,t){if(this.combatStats.shotsHit++,"player"===t.targetId)this.playerHull=Math.max(0,this.playerHull-t.damage),this.combatStats.totalDamageReceived+=t.damage,this.events.onPlayerDamaged?.(t.damage,t.damageType),this.logger.info(`üí• Player hit for ${t.damage} ${t.damageType} damage`,{critical:t.criticalHit,penetrated:t.penetrated,hullRemaining:this.playerHull});else{const e=this.enemyAI.applyDamage(t.targetId,t.damage,t.damageType);this.combatStats.totalDamageDealt+=t.damage,e&&this.combatStats.enemiesDestroyed++}this.events.onCombatStatsUpdated?.(this.combatStats)}handleEnemyDestroyed(e){const t=this.calculateRewards(e.config);t.items.forEach(e=>{this.inventory.addItem(e,1)}),this.combatStats.experienceGained+=t.experience,this.events.onEnemyDestroyed?.(e.config.id,t),this.checkEncounterCompletion(),this.logger.info("üí∞ Enemy destroyed rewards",{enemy:e.config.name,items:t.items.length,experience:t.experience})}calculateRewards(e){const t=[];let i=0;i={[F.Drone]:5,[F.Fighter]:15,[F.Corvette]:30,[F.Frigate]:50,[F.Destroyer]:100,[F.Cruiser]:200,[F.Battleship]:500}[e.shipClass]||10;if(Math.random()<.3){const e=this.itemDatabase.generateRandomItem();e&&t.push(e)}const s={pirates:["metal_iron","gas_hydrogen"],aliens:["crystal_dilithium","energy_antimatter"],military:["comp_circuit","tool_repair_kit"],corporation:["crystal_quartz","comp_shield_emitter"]}[e.faction]||[];if(s.length>0&&Math.random()<.4){const e=s[Math.floor(Math.random()*s.length)],i=this.itemDatabase.getItem(e);i&&t.push(i)}return{items:t,experience:i}}startEncounter(e){e.isActive=!0,e.startTime=Date.now(),e.enemyConfigs.forEach((t,i)=>{const s=e.spawnPositions[i]||{x:800,y:400};this.enemyAI.spawnEnemy(t,s)}),this.activeEncounters.set(e.id,e),this.events.onEncounterStarted?.(e),this.logger.info(`üö® Combat encounter started: ${e.name}`,{difficulty:e.difficulty,enemies:e.enemyConfigs.length})}checkEncounterCompletion(){for(const[e,t]of this.activeEncounters.entries()){if(!t.isActive)continue;0===this.enemyAI.getAllEnemies().filter(e=>t.enemyConfigs.some(t=>t.id===e.config.id)).length&&(t.isActive=!1,t.completionTime=Date.now(),this.combatStats.encountersCompleted++,this.events.onEncounterCompleted?.(t,!0),this.logger.info(`‚úÖ Encounter completed: ${t.name}`,{duration:(t.completionTime-t.startTime)/1e3,rewards:t.rewards}),this.activeEncounters.delete(e))}}generateEncounters(){const e=[];return e.push({id:"pirate_patrol_1",name:"Pirate Patrol",difficulty:2,enemyConfigs:[this.createEnemyConfig("pirate_fighter_1","Pirate Fighter",F.Fighter,"pirates",B.Aggressive),this.createEnemyConfig("pirate_drone_1","Pirate Drone",F.Drone,"pirates",B.Kamikaze)],spawnPositions:[{x:700,y:300},{x:750,y:350}],rewards:{experience:50,credits:100,items:[{itemId:"metal_iron",quantity:5,dropRate:.8},{itemId:"tool_repair_kit",quantity:1,dropRate:.3}]},isActive:!1,startTime:0}),e.push({id:"alien_scout_1",name:"Alien Scout",difficulty:4,enemyConfigs:[this.createEnemyConfig("alien_corvette_1","Alien Corvette",F.Corvette,"aliens",B.Evasive)],spawnPositions:[{x:600,y:200}],rewards:{experience:80,credits:200,items:[{itemId:"crystal_dilithium",quantity:2,dropRate:.6},{itemId:"energy_antimatter",quantity:1,dropRate:.2}]},isActive:!1,startTime:0}),e.push({id:"corp_security_1",name:"Corporate Security",difficulty:3,enemyConfigs:[this.createEnemyConfig("corp_frigate_1","Corporate Frigate",F.Frigate,"corporation",B.Defensive),this.createEnemyConfig("corp_fighter_1","Corporate Fighter",F.Fighter,"corporation",B.Support)],spawnPositions:[{x:800,y:400},{x:750,y:450}],rewards:{experience:120,credits:300,items:[{itemId:"comp_shield_emitter",quantity:1,dropRate:.5},{itemId:"crystal_quartz",quantity:3,dropRate:.7}]},isActive:!1,startTime:0}),e}createEnemyConfig(e,t,i,s,a){const r={[F.Drone]:{size:8,maxSpeed:200,hull:20,weapons:[this.createBasicWeapon("drone_laser",L.Energy,15)]},[F.Fighter]:{size:15,maxSpeed:180,hull:60,weapons:[this.createBasicWeapon("fighter_cannon",L.Projectile,25)]},[F.Corvette]:{size:20,maxSpeed:150,hull:120,weapons:[this.createBasicWeapon("corvette_laser",L.Energy,30),this.createBasicWeapon("corvette_missiles",L.Missile,40)]},[F.Frigate]:{size:25,maxSpeed:120,hull:200,weapons:[this.createBasicWeapon("frigate_plasma",L.Plasma,45),this.createBasicWeapon("frigate_cannon",L.Projectile,35)]}},n=r[i]||r[F.Fighter];return{id:e,name:t,shipClass:i,faction:s,size:n.size,mass:10*n.size,maxSpeed:n.maxSpeed,acceleration:.8,turnRate:2,hull:n.hull,maxHull:n.hull,shields:i===F.Drone?0:.5*n.hull,maxShields:i===F.Drone?0:.5*n.hull,armor:Math.floor(.1*n.hull),behavior:a,aggression:a===B.Aggressive?.9:.6,intelligence:.7,accuracy:.75,reactionTime:.5,weapons:n.weapons,engagementRange:20*n.size,preferredRange:15*n.size}}createBasicWeapon(e,t,i){const s={[L.Energy]:{range:300,fireRate:2.5,energyCost:5},[L.Projectile]:{range:400,fireRate:2,energyCost:0},[L.Missile]:{range:500,fireRate:.5,energyCost:15},[L.Plasma]:{range:250,fireRate:1.5,energyCost:10},[L.Beam]:{range:350,fireRate:3,energyCost:8},[L.Torpedo]:{range:600,fireRate:.3,energyCost:20}},a=s[t]||s[L.Energy];return{id:e,name:`${t} Weapon`,type:t,damageType:t===L.Energy?z.Energy:z.Kinetic,stats:{damage:i,range:a.range,fireRate:a.fireRate,energyCost:a.energyCost,accuracy:.8,penetration:.2,spread:3,chargeTime:0,cooldownTime:1},mountPoint:{x:0,y:0},hardpointSize:"small"}}update(e){this.weaponSystem.update(e),this.enemyAI.updatePlayer(this.playerPosition,this.playerVelocity,this.playerSize),this.enemyAI.update(e),this.checkEncounterCompletion()}updatePlayer(e,t,i,s,a){this.playerPosition={...e},this.playerVelocity={...t},this.playerSize=i,this.playerHull=s,this.playerMaxHull=a}firePlayerWeapon(e,t){return this.weaponSystem.fireWeapon(e,this.playerPosition,t)}render(e){this.weaponSystem.render(e),this.enemyAI.render(e)}startRandomEncounter(){const e=this.generateEncounters();if(e.length>0){const t=Math.floor(Math.random()*e.length);this.startEncounter(e[t])}}getCombatStats(){return{...this.combatStats}}getActiveEncounters(){return Array.from(this.activeEncounters.values())}getPlayerWeapons(){return this.weaponSystem.getAllWeapons().filter(e=>e.weapon.id.startsWith("player_"))}getEnemies(){return this.enemyAI.getAllEnemies()}clearCombat(){this.weaponSystem.clearProjectiles(),this.enemyAI.clearEnemies(),this.activeEncounters.clear(),this.logger.info("üßπ Combat cleared")}resetStats(){this.combatStats={totalDamageDealt:0,totalDamageReceived:0,enemiesDestroyed:0,shotsHit:0,shotsFired:0,encountersCompleted:0,experienceGained:0},this.events.onCombatStatsUpdated?.(this.combatStats)}}var N=(e=>(e.Reflexes="reflexes",e.Intelligence="intelligence",e.Endurance="endurance",e.Perception="perception",e.Charisma="charisma",e.Technical="technical",e))(N||{});class W{constructor(e={}){this.levelExperienceTable=[],this.skillExperienceTable=[],this.logger=new r("PlayerProgression"),this.events=e,this.generateExperienceTables(),this.initializeCharacter(),this.initializeSkills(),this.initializeAchievements(),this.logger.info("üé≠ Player progression system initialized")}generateExperienceTables(){for(let e=1;e<=100;e++){const t=100,i=Math.pow(1.15,e-1);this.levelExperienceTable.push(Math.floor(t*i))}for(let e=1;e<=50;e++){const t=50,i=Math.pow(1.1,e-1);this.skillExperienceTable.push(Math.floor(t*i))}}initializeCharacter(){this.character={name:"Captain",level:1,experience:0,experienceToNext:this.levelExperienceTable[1],skillPoints:5,attributePoints:10,totalPlayTime:0,enemiesDefeated:0,systemsExplored:0,distanceTraveled:0,creditsEarned:0,itemsCrafted:0,skills:new Map,attributes:new Map,achievements:new Map};for(const e of Object.values(N))this.character.attributes.set(e,{type:e,value:10,baseValue:10,modifiers:[]})}initializeSkills(){[{id:"weapon_proficiency",name:"Weapon Proficiency",category:"combat",level:0,experience:0,maxLevel:25,description:"Increases weapon damage and accuracy",bonuses:[{type:"damage",value:2,description:"+2% weapon damage per level"},{type:"accuracy",value:1,description:"+1% accuracy per level"}]},{id:"tactical_combat",name:"Tactical Combat",category:"combat",level:0,experience:0,maxLevel:20,description:"Reduces weapon heat buildup and cooldowns",prerequisite:"weapon_proficiency",prerequisiteLevel:5,bonuses:[{type:"efficiency",value:3,description:"+3% weapon efficiency per level"},{type:"cost_reduction",value:2,description:"-2% energy cost per level"}]},{id:"shield_mastery",name:"Shield Mastery",category:"combat",level:0,experience:0,maxLevel:20,description:"Improves shield capacity and regeneration",bonuses:[{type:"capacity",value:5,description:"+5% shield capacity per level"},{type:"efficiency",value:3,description:"+3% regeneration rate per level"}]},{id:"ship_handling",name:"Ship Handling",category:"piloting",level:0,experience:0,maxLevel:25,description:"Improves ship maneuverability and speed",bonuses:[{type:"speed",value:2,description:"+2% ship speed per level"},{type:"efficiency",value:1,description:"+1% turn rate per level"}]},{id:"evasive_maneuvers",name:"Evasive Maneuvers",category:"piloting",level:0,experience:0,maxLevel:15,description:"Increases evasion chance and reduces incoming damage",prerequisite:"ship_handling",prerequisiteLevel:8,bonuses:[{type:"efficiency",value:2,description:"+2% evasion chance per level"}]},{id:"warp_navigation",name:"Warp Navigation",category:"piloting",level:0,experience:0,maxLevel:20,description:"Reduces warp energy costs and improves efficiency",bonuses:[{type:"cost_reduction",value:3,description:"-3% warp energy cost per level"},{type:"speed",value:1,description:"+1% warp speed per level"}]},{id:"system_repair",name:"System Repair",category:"engineering",level:0,experience:0,maxLevel:20,description:"Improves repair efficiency and reduces costs",bonuses:[{type:"efficiency",value:4,description:"+4% repair efficiency per level"},{type:"cost_reduction",value:2,description:"-2% repair cost per level"}]},{id:"power_management",name:"Power Management",category:"engineering",level:0,experience:0,maxLevel:15,description:"Increases power capacity and efficiency",bonuses:[{type:"capacity",value:3,description:"+3% power capacity per level"},{type:"efficiency",value:2,description:"+2% power efficiency per level"}]},{id:"advanced_crafting",name:"Advanced Crafting",category:"engineering",level:0,experience:0,maxLevel:25,description:"Increases crafting success rates and unlocks recipes",prerequisite:"system_repair",prerequisiteLevel:5,bonuses:[{type:"efficiency",value:3,description:"+3% crafting success rate per level"}]},{id:"sensor_analysis",name:"Sensor Analysis",category:"science",level:0,experience:0,maxLevel:20,description:"Improves scanning range and accuracy",bonuses:[{type:"detection",value:5,description:"+5% scanning range per level"},{type:"efficiency",value:2,description:"+2% scan accuracy per level"}]},{id:"research_methodology",name:"Research Methodology",category:"science",level:0,experience:0,maxLevel:15,description:"Increases research speed and technology unlock rate",bonuses:[{type:"efficiency",value:4,description:"+4% research speed per level"}]},{id:"negotiation",name:"Negotiation",category:"trade",level:0,experience:0,maxLevel:20,description:"Improves trade prices and contract rewards",bonuses:[{type:"efficiency",value:2,description:"+2% trade profit per level"}]},{id:"market_analysis",name:"Market Analysis",category:"trade",level:0,experience:0,maxLevel:15,description:"Provides better market information and price predictions",prerequisite:"negotiation",prerequisiteLevel:5,bonuses:[{type:"detection",value:3,description:"+3% market insight per level"}]},{id:"stellar_cartography",name:"Stellar Cartography",category:"exploration",level:0,experience:0,maxLevel:20,description:"Improves exploration rewards and discovery rates",bonuses:[{type:"efficiency",value:3,description:"+3% discovery rate per level"},{type:"detection",value:2,description:"+2% exploration rewards per level"}]},{id:"xenobiology",name:"Xenobiology",category:"exploration",level:0,experience:0,maxLevel:15,description:"Increases rewards from biological discoveries",prerequisite:"stellar_cartography",prerequisiteLevel:8,bonuses:[{type:"efficiency",value:5,description:"+5% biological research rewards per level"}]}].forEach(e=>{this.character.skills.set(e.id,e)})}initializeAchievements(){[{id:"first_blood",name:"First Blood",description:"Destroy your first enemy ship",category:"Combat",requirements:[{type:"kill_enemies",target:1,current:0}],rewards:[{type:"experience",value:50},{type:"skill_points",value:1}],unlocked:!1,hidden:!1},{id:"ace_pilot",name:"Ace Pilot",description:"Destroy 50 enemy ships",category:"Combat",requirements:[{type:"kill_enemies",target:50,current:0}],rewards:[{type:"experience",value:500},{type:"skill_points",value:3}],unlocked:!1,hidden:!1},{id:"explorer",name:"Explorer",description:"Discover 10 star systems",category:"Exploration",requirements:[{type:"discover_systems",target:10,current:0}],rewards:[{type:"experience",value:200},{type:"attribute_points",value:2}],unlocked:!1,hidden:!1},{id:"master_craftsman",name:"Master Craftsman",description:"Craft 100 items",category:"Engineering",requirements:[{type:"craft_items",target:100,current:0}],rewards:[{type:"experience",value:300},{type:"skill_points",value:2}],unlocked:!1,hidden:!1},{id:"millionaire",name:"Millionaire",description:"Earn 1,000,000 credits",category:"Trade",requirements:[{type:"earn_credits",target:1e6,current:0}],rewards:[{type:"experience",value:1e3},{type:"attribute_points",value:5}],unlocked:!1,hidden:!1},{id:"long_journey",name:"Long Journey",description:"Travel 100,000 kilometers",category:"Exploration",requirements:[{type:"travel_distance",target:1e5,current:0}],rewards:[{type:"experience",value:250},{type:"skill_points",value:1}],unlocked:!1,hidden:!1}].forEach(e=>{this.character.achievements.set(e.id,e)})}addExperience(e){for(this.character.experience+=e;this.character.experience>=this.character.experienceToNext;)this.levelUp();this.logger.debug(`+${e} XP (Total: ${this.character.experience})`)}levelUp(){this.character.level++,this.character.experience-=this.character.experienceToNext,this.character.level<this.levelExperienceTable.length?this.character.experienceToNext=this.levelExperienceTable[this.character.level]:this.character.experienceToNext=this.levelExperienceTable[this.levelExperienceTable.length-1];const e=this.character.level%2==0?2:1,t=this.character.level%5==0?2:0;this.character.skillPoints+=e,this.character.attributePoints+=t,this.events.onLevelUp?.(this.character.level,{skillPoints:e,attributePoints:t}),this.logger.info(`üéâ Level Up! Now level ${this.character.level}`,{skillPoints:e,attributePoints:t})}addSkillExperience(e,t){const i=this.character.skills.get(e);if(!i||i.level>=i.maxLevel)return;i.experience+=t;const s=this.skillExperienceTable[i.level]||this.skillExperienceTable[this.skillExperienceTable.length-1];i.experience>=s&&(i.level++,i.experience-=s,this.events.onSkillLevelUp?.(i,i.level),this.logger.info(`üìà Skill Level Up: ${i.name} ‚Üí ${i.level}`))}levelUpSkill(e){const t=this.character.skills.get(e);if(!t||t.level>=t.maxLevel)return!1;if(t.prerequisite){const e=this.character.skills.get(t.prerequisite);if(!e||e.level<(t.prerequisiteLevel||1))return this.logger.warn(`Prerequisite not met: ${t.prerequisite} level ${t.prerequisiteLevel}`),!1}const i=Math.max(1,Math.floor(t.level/5)+1);return this.character.skillPoints<i?(this.logger.warn(`Not enough skill points: need ${i}, have ${this.character.skillPoints}`),!1):(this.character.skillPoints-=i,t.level++,this.events.onSkillLevelUp?.(t,t.level),this.logger.info(`üí´ Manual skill upgrade: ${t.name} ‚Üí ${t.level} (Cost: ${i} SP)`),!0)}increaseAttribute(e,t=1){const i=2*t;if(this.character.attributePoints<i)return this.logger.warn(`Not enough attribute points: need ${i}, have ${this.character.attributePoints}`),!1;const s=this.character.attributes.get(e);if(!s)return!1;const a=s.value;return s.baseValue+=t,this.recalculateAttribute(e),this.character.attributePoints-=i,this.events.onAttributeChanged?.(e,a,s.value),this.logger.info(`‚ö° Attribute increased: ${e} ‚Üí ${s.value} (Cost: ${i} AP)`),!0}addAttributeModifier(e,t){const i=this.character.attributes.get(e);i&&(i.modifiers.push(t),this.recalculateAttribute(e),this.logger.debug(`Applied modifier to ${e}: ${t.value} from ${t.source}`))}removeAttributeModifier(e,t){const i=this.character.attributes.get(e);i&&(i.modifiers=i.modifiers.filter(e=>e.source!==t),this.recalculateAttribute(e),this.logger.debug(`Removed modifier from ${e}: ${t}`))}recalculateAttribute(e){const t=this.character.attributes.get(e);if(!t)return;const i=t.value;t.value=t.baseValue,t.modifiers.forEach(e=>{t.value+=e.value}),t.value=Math.max(1,t.value),i!==t.value&&this.events.onAttributeChanged?.(e,i,t.value)}updateAchievementProgress(e,t,i){for(const s of this.character.achievements.values())if(!s.unlocked)for(const i of s.requirements)i.type===e&&(i.current=Math.min(i.target,i.current+t),this.isAchievementCompleted(s)&&this.unlockAchievement(s.id))}isAchievementCompleted(e){return e.requirements.every(e=>e.current>=e.target)}unlockAchievement(e){const t=this.character.achievements.get(e);t&&!t.unlocked&&(t.unlocked=!0,t.unlockedDate=Date.now(),t.rewards.forEach(e=>{switch(e.type){case"experience":this.addExperience(e.value);break;case"skill_points":this.character.skillPoints+=e.value;break;case"attribute_points":this.character.attributePoints+=e.value;break;case"credits":this.character.creditsEarned+=e.value}}),this.events.onAchievementUnlocked?.(t),this.logger.info(`üèÜ Achievement Unlocked: ${t.name}`,{rewards:t.rewards}))}updateStatistics(e){e.playTime&&(this.character.totalPlayTime+=e.playTime),e.enemiesDefeated&&(this.character.enemiesDefeated+=e.enemiesDefeated,this.updateAchievementProgress("kill_enemies",e.enemiesDefeated)),e.systemsExplored&&(this.character.systemsExplored+=e.systemsExplored,this.updateAchievementProgress("discover_systems",e.systemsExplored)),e.distanceTraveled&&(this.character.distanceTraveled+=e.distanceTraveled,this.updateAchievementProgress("travel_distance",e.distanceTraveled)),e.creditsEarned&&(this.character.creditsEarned+=e.creditsEarned,this.updateAchievementProgress("earn_credits",e.creditsEarned)),e.itemsCrafted&&(this.character.itemsCrafted+=e.itemsCrafted,this.updateAchievementProgress("craft_items",e.itemsCrafted))}getSkillBonus(e,t){const i=this.character.skills.get(e);if(!i)return 0;const s=i.bonuses.find(e=>e.type===t);return s?s.value*i.level:0}getCategoryBonus(e,t){let i=0;for(const s of this.character.skills.values())s.category===e&&(i+=this.getSkillBonus(s.id,t));return i}getAttributeValue(e){const t=this.character.attributes.get(e);return t?t.value:10}getCharacterSheet(){return{...this.character}}getAvailableSkills(){return Array.from(this.character.skills.values()).filter(e=>{if(e.level>=e.maxLevel)return!1;if(e.prerequisite){const t=this.character.skills.get(e.prerequisite);if(!t||t.level<(e.prerequisiteLevel||1))return!1}return!0})}getUnlockedAchievements(){return Array.from(this.character.achievements.values()).filter(e=>e.unlocked)}getAchievementProgress(){return Array.from(this.character.achievements.values()).filter(e=>!e.unlocked&&!e.hidden)}saveCharacter(){return{character:{...this.character,skills:Array.from(this.character.skills.entries()),attributes:Array.from(this.character.attributes.entries()),achievements:Array.from(this.character.achievements.entries())}}}loadCharacter(e){e.character&&(this.character={...e.character,skills:new Map(e.character.skills),attributes:new Map(e.character.attributes),achievements:new Map(e.character.achievements)},this.logger.info("üìú Character data loaded",{level:this.character.level,experience:this.character.experience}))}getProgressionStats(){const e=Array.from(this.character.skills.values()).reduce((e,t)=>e+t.level,0),t=Math.max(...Array.from(this.character.skills.values()).map(e=>e.level)),i=Array.from(this.character.attributes.values()).reduce((e,t)=>e+t.baseValue,0),s=Array.from(this.character.achievements.values()).filter(e=>e.unlocked).length,a=this.character.achievements.size,r=Array.from(this.character.skills.values()).reduce((e,t)=>e+t.maxLevel,0);return{totalSkillLevels:e,highestSkillLevel:t,totalAttributePoints:i,achievementsUnlocked:s,totalAchievements:a,progressionPercentage:Math.min(100,this.character.level/50*30+e/r*40+s/a*30)}}}var V=(e=>(e.Physics="physics",e.Engineering="engineering",e.Biology="biology",e.Computing="computing",e.Military="military",e.Exploration="exploration",e))(V||{});class j{constructor(e={}){this.technologies=new Map,this.projects=new Map,this.facilities=new Map,this.scientists=new Map,this.discoveries=[],this.totalResearchPoints=0,this.researchMultipliers=new Map,this.logger=new r("ResearchSystem"),this.events=e,this.initializeResearchMultipliers(),this.initializeTechnologies(),this.initializeFacilities(),this.initializeScientists(),this.logger.info("üî¨ Research system initialized")}initializeResearchMultipliers(){Object.values(V).forEach(e=>{this.researchMultipliers.set(e,1)})}initializeTechnologies(){[{id:"basic_sensors",name:"Enhanced Sensors",description:"Improved sensor arrays for better detection range",field:"engineering",tier:1,researchCost:100,researchTime:300,prerequisites:[],requiredItems:[{itemId:"comp_circuit",quantity:5},{itemId:"crystal_quartz",quantity:3}],requiredFacilities:["basic_lab"],unlocks:[{type:"ship_component",target:"advanced_sensors",description:"Unlocks Advanced Sensor Array"},{type:"ability",target:"long_range_scan",description:"Enables long-range scanning"}],isUnlocked:!1,isResearching:!1,researchProgress:0,researchStartTime:0},{id:"improved_hull",name:"Improved Hull Design",description:"Stronger hull materials and construction techniques",field:"engineering",tier:1,researchCost:150,researchTime:450,prerequisites:[],requiredItems:[{itemId:"metal_iron",quantity:10},{itemId:"metal_titanium",quantity:5}],requiredFacilities:["workshop"],unlocks:[{type:"upgrade",target:"hull_strength",value:25,description:"+25% hull strength"},{type:"ship_component",target:"reinforced_hull",description:"Unlocks Reinforced Hull Plating"}],isUnlocked:!1,isResearching:!1,researchProgress:0,researchStartTime:0},{id:"energy_weapons",name:"Energy Weapon Technology",description:"Basic laser and plasma weapon systems",field:"military",tier:1,researchCost:200,researchTime:600,prerequisites:[],requiredItems:[{itemId:"energy_antimatter",quantity:2},{itemId:"comp_circuit",quantity:8}],requiredFacilities:["basic_lab","workshop"],unlocks:[{type:"weapon",target:"plasma_cannon",description:"Unlocks Plasma Cannon"},{type:"upgrade",target:"energy_efficiency",value:15,description:"+15% energy weapon efficiency"}],isUnlocked:!1,isResearching:!1,researchProgress:0,researchStartTime:0},{id:"quantum_computing",name:"Quantum Computing",description:"Advanced quantum processors for complex calculations",field:"computing",tier:2,researchCost:500,researchTime:1200,prerequisites:["basic_sensors"],requiredItems:[{itemId:"crystal_dilithium",quantity:3},{itemId:"comp_quantum_processor",quantity:1}],requiredFacilities:["computer_core"],unlocks:[{type:"facility",target:"quantum_lab",description:"Unlocks Quantum Research Lab"},{type:"upgrade",target:"research_speed",value:30,description:"+30% research speed"}],isUnlocked:!1,isResearching:!1,researchProgress:0,researchStartTime:0},{id:"shield_technology",name:"Advanced Shielding",description:"Improved shield generators and energy distribution",field:"physics",tier:2,researchCost:400,researchTime:900,prerequisites:["improved_hull","energy_weapons"],requiredItems:[{itemId:"comp_shield_emitter",quantity:3},{itemId:"energy_antimatter",quantity:5}],requiredFacilities:["testing_chamber"],unlocks:[{type:"ship_component",target:"adaptive_shields",description:"Unlocks Adaptive Shield Matrix"},{type:"upgrade",target:"shield_capacity",value:40,description:"+40% shield capacity"}],isUnlocked:!1,isResearching:!1,researchProgress:0,researchStartTime:0},{id:"warp_optimization",name:"Warp Drive Optimization",description:"Improved warp field stability and efficiency",field:"physics",tier:2,researchCost:600,researchTime:1500,prerequisites:["quantum_computing"],requiredItems:[{itemId:"crystal_dilithium",quantity:8},{itemId:"comp_warp_coil",quantity:2}],requiredFacilities:["observatory"],unlocks:[{type:"upgrade",target:"warp_efficiency",value:25,description:"+25% warp efficiency"},{type:"ability",target:"emergency_warp",description:"Enables emergency warp escape"}],isUnlocked:!1,isResearching:!1,researchProgress:0,researchStartTime:0},{id:"artificial_intelligence",name:"Artificial Intelligence",description:"Advanced AI systems for ship automation",field:"computing",tier:3,researchCost:1e3,researchTime:2400,prerequisites:["quantum_computing","shield_technology"],requiredItems:[{itemId:"comp_ai_core",quantity:1},{itemId:"crystal_dilithium",quantity:10}],requiredFacilities:["quantum_lab"],unlocks:[{type:"ship_component",target:"ai_assistant",description:"Unlocks AI Ship Assistant"},{type:"upgrade",target:"automation_efficiency",value:50,description:"+50% system automation"}],isUnlocked:!1,isResearching:!1,researchProgress:0,researchStartTime:0},{id:"exotic_matter",name:"Exotic Matter Research",description:"Studies of exotic matter and its applications",field:"physics",tier:3,researchCost:1200,researchTime:3e3,prerequisites:["warp_optimization"],requiredItems:[{itemId:"exotic_dark_matter",quantity:3},{itemId:"comp_containment_field",quantity:2}],requiredFacilities:["testing_chamber","quantum_lab"],unlocks:[{type:"weapon",target:"exotic_weapons",description:"Unlocks Exotic Matter Weapons"},{type:"ability",target:"phase_shift",description:"Enables temporary phase shifting"}],isUnlocked:!1,isResearching:!1,researchProgress:0,researchStartTime:0},{id:"consciousness_transfer",name:"Consciousness Transfer",description:"Technology to transfer consciousness between vessels",field:"biology",tier:4,researchCost:2e3,researchTime:4800,prerequisites:["artificial_intelligence","exotic_matter"],requiredItems:[{itemId:"bio_neural_matrix",quantity:1},{itemId:"comp_ai_core",quantity:3}],requiredFacilities:["quantum_lab","bio_lab"],unlocks:[{type:"ability",target:"backup_consciousness",description:"Enables consciousness backup"},{type:"ship_component",target:"neural_interface",description:"Direct neural ship control"}],isUnlocked:!1,isResearching:!1,researchProgress:0,researchStartTime:0},{id:"reality_manipulation",name:"Reality Manipulation",description:"Ultimate technology to alter space-time itself",field:"physics",tier:5,researchCost:5e3,researchTime:1e4,prerequisites:["consciousness_transfer"],requiredItems:[{itemId:"artifact_singularity_core",quantity:1},{itemId:"exotic_temporal_crystal",quantity:5}],requiredFacilities:["quantum_lab","testing_chamber","observatory"],unlocks:[{type:"ability",target:"time_dilation",description:"Manipulate local time flow"},{type:"ability",target:"space_folding",description:"Fold space for instant travel"}],isUnlocked:!1,isResearching:!1,researchProgress:0,researchStartTime:0}].forEach(e=>{this.technologies.set(e.id,e)})}initializeFacilities(){[{id:"basic_lab",name:"Basic Laboratory",type:"laboratory",efficiency:1,specialization:["engineering","computing"],maxProjects:1,isOperational:!0,currentProjects:[],maintenanceLevel:1,upgradeLevel:1},{id:"workshop",name:"Engineering Workshop",type:"workshop",efficiency:1.2,specialization:["engineering","military"],maxProjects:2,isOperational:!0,currentProjects:[],maintenanceLevel:1,upgradeLevel:1},{id:"computer_core",name:"Computer Core",type:"computer_core",efficiency:1.5,specialization:["computing"],maxProjects:1,isOperational:!0,currentProjects:[],maintenanceLevel:1,upgradeLevel:1}].forEach(e=>{this.facilities.set(e.id,e)})}initializeScientists(){[{id:"dr_smith",name:"Dr. Sarah Smith",expertise:"engineering",skill:7,efficiency:1.2,isAvailable:!0,fatigue:0,morale:.8},{id:"prof_chen",name:"Prof. Wei Chen",expertise:"physics",skill:8,efficiency:1.3,isAvailable:!0,fatigue:0,morale:.9},{id:"dr_ivanov",name:"Dr. Viktor Ivanov",expertise:"computing",skill:6,efficiency:1.1,isAvailable:!0,fatigue:0,morale:.7}].forEach(e=>{this.scientists.set(e.id,e)})}startResearch(e,t,i=[]){const s=this.technologies.get(e),a=this.facilities.get(t);if(!s||!a)return this.logger.warn("Invalid technology or facility for research",{technologyId:e,facilityId:t}),!1;if(s.isUnlocked||s.isResearching)return this.logger.warn("Technology already unlocked or being researched",{technologyId:e}),!1;for(const d of s.prerequisites){const t=this.technologies.get(d);if(!t||!t.isUnlocked)return this.logger.warn("Prerequisites not met",{technologyId:e,missingPrereq:d}),!1}if(a.currentProjects.length>=a.maxProjects)return this.logger.warn("Facility at capacity",{facilityId:t}),!1;if(a.specialization.length>0&&!a.specialization.includes(s.field))return this.logger.warn("Facility not specialized for this research field",{facilityId:t,field:s.field,specializations:a.specialization}),!1;const r=[];for(const d of i){const i=this.scientists.get(d);i&&i.isAvailable&&(r.push(d),i.isAvailable=!1,i.assignedProject=e,i.assignedFacility=t)}let n=a.efficiency*a.maintenanceLevel;r.forEach(e=>{const t=this.scientists.get(e);if(t){let e=t.efficiency*t.morale*(1-t.fatigue);t.expertise===s.field&&(e*=1.5),n+=e}});const o=this.researchMultipliers.get(s.field)||1;n*=o;const c=s.researchTime/n,l=`project_${e}_${Date.now()}`,h={id:l,technologyId:e,facilityId:t,assignedScientists:r,startTime:Date.now(),estimatedCompletion:Date.now()+1e3*c,efficiency:n,status:"active"};return this.projects.set(l,h),a.currentProjects.push(l),s.isResearching=!0,s.researchStartTime=Date.now(),this.logger.info(`üî¨ Research started: ${s.name}`,{facility:a.name,scientists:r.length,efficiency:n.toFixed(2),estimatedHours:(c/3600).toFixed(1)}),!0}update(e){const t=Date.now();for(const i of this.projects.values()){if("active"!==i.status)continue;const s=this.technologies.get(i.technologyId);if(!s)continue;const a=t-i.startTime,r=i.estimatedCompletion-i.startTime,n=Math.min(1,a/r);s.researchProgress=n,n>=1?this.completeResearch(i.id):i.assignedScientists.forEach(t=>{const i=this.scientists.get(t);i&&(i.fatigue=Math.min(1,i.fatigue+1e-4*e))})}Math.random()<.001&&this.makeRandomDiscovery()}completeResearch(e){const t=this.projects.get(e);if(!t)return;const i=this.technologies.get(t.technologyId),s=this.facilities.get(t.facilityId);if(!i||!s)return;i.isUnlocked=!0,i.isResearching=!1,i.researchProgress=1,i.completedTime=Date.now(),t.assignedScientists.forEach(e=>{const t=this.scientists.get(e);t&&(t.isAvailable=!0,t.assignedProject=void 0,t.assignedFacility=void 0,t.morale=Math.min(1,t.morale+.1))}),s.currentProjects=s.currentProjects.filter(t=>t!==e),t.status="completed",this.totalResearchPoints+=i.researchCost,this.applyTechnologyUnlocks(i),this.events.onTechnologyUnlocked?.(i),this.events.onResearchCompleted?.(t),this.logger.info(`üéâ Research completed: ${i.name}`,{duration:((Date.now()-t.startTime)/1e3/60).toFixed(1)+" minutes",unlocks:i.unlocks.length});1===this.getTierUnlockCount(i.field,i.tier)&&this.events.onBreakthroughAchieved?.(i.field,i.tier)}applyTechnologyUnlocks(e){e.unlocks.forEach(e=>{switch(e.type){case"facility":this.unlockFacility(e.target);break;case"upgrade":this.applyUpgrade(e.target,e.value||0);break;case"ability":this.unlockAbility(e.target);break;case"recipe":this.unlockRecipe(e.target)}})}unlockFacility(e){const t={quantum_lab:{name:"Quantum Research Lab",type:"laboratory",efficiency:2,specialization:["physics","computing"],maxProjects:2},bio_lab:{name:"Biological Research Lab",type:"laboratory",efficiency:1.8,specialization:["biology"],maxProjects:1},testing_chamber:{name:"Testing Chamber",type:"testing_chamber",efficiency:1.5,specialization:["military","engineering"],maxProjects:3},observatory:{name:"Deep Space Observatory",type:"observatory",efficiency:1.6,specialization:["exploration","physics"],maxProjects:1}}[e];if(t){const i=`${e}_${Date.now()}`,s={id:i,name:t.name||e,type:t.type||"laboratory",efficiency:t.efficiency||1,specialization:t.specialization||[],maxProjects:t.maxProjects||1,isOperational:!0,currentProjects:[],maintenanceLevel:1,upgradeLevel:1};this.facilities.set(i,s),this.logger.info(`üèóÔ∏è New facility unlocked: ${s.name}`)}}applyUpgrade(e,t){switch(e){case"research_speed":Object.values(V).forEach(e=>{const i=this.researchMultipliers.get(e)||1;this.researchMultipliers.set(e,i*(1+t/100))});break;case"hull_strength":case"shield_capacity":case"warp_efficiency":this.logger.info(`‚ö° Upgrade applied: ${e} +${t}%`)}}unlockAbility(e){this.logger.info(`üåü New ability unlocked: ${e}`)}unlockRecipe(e){this.logger.info(`üìã New recipe unlocked: ${e}`)}makeRandomDiscovery(){const e=[{name:"Quantum Fluctuation Anomaly",field:"physics",rarity:"rare",researchBonus:{field:"physics",bonus:.1}},{name:"Exotic Particle Traces",field:"physics",rarity:"uncommon",grantsResources:[{itemId:"exotic_dark_matter",quantity:1}]},{name:"Ancient Data Fragment",field:"computing",rarity:"epic",unlocksTechnology:"artificial_intelligence"},{name:"Biological Adaptation Pattern",field:"biology",rarity:"common",researchBonus:{field:"biology",bonus:.05}}],t=e[Math.floor(Math.random()*e.length)],i={id:`discovery_${Date.now()}`,name:t.name,description:`A ${t.rarity} discovery in ${t.field}`,field:t.field,rarity:t.rarity,discoveryTime:Date.now(),researchBonus:t.researchBonus,unlocksTechnology:t.unlocksTechnology,grantsResources:t.grantsResources};if(this.discoveries.push(i),i.researchBonus){const e=this.researchMultipliers.get(i.researchBonus.field)||1;this.researchMultipliers.set(i.researchBonus.field,e+i.researchBonus.bonus)}this.events.onDiscoveryMade?.(i),this.logger.info(`üîç Discovery made: ${i.name}`,{field:i.field,rarity:i.rarity})}getAvailableTechnologies(){return Array.from(this.technologies.values()).filter(e=>!e.isUnlocked&&!e.isResearching&&e.prerequisites.every(e=>{const t=this.technologies.get(e);return t&&t.isUnlocked}))}getActiveProjects(){return Array.from(this.projects.values()).filter(e=>"active"===e.status)}getUnlockedTechnologies(){return Array.from(this.technologies.values()).filter(e=>e.isUnlocked)}getTechnology(e){return this.technologies.get(e)||null}getFacilities(){return Array.from(this.facilities.values())}getAvailableScientists(){return Array.from(this.scientists.values()).filter(e=>e.isAvailable)}getRecentDiscoveries(e=10){return this.discoveries.sort((e,t)=>t.discoveryTime-e.discoveryTime).slice(0,e)}getTierUnlockCount(e,t){return Array.from(this.technologies.values()).filter(i=>i.field===e&&i.tier===t&&i.isUnlocked).length}getResearchStats(){const e={};return Object.values(V).forEach(t=>{const i=Array.from(this.technologies.values()).filter(e=>e.field===t),s=i.filter(e=>e.isUnlocked).length;e[t]={unlocked:s,total:i.length}}),{totalTechnologies:this.technologies.size,unlockedTechnologies:Array.from(this.technologies.values()).filter(e=>e.isUnlocked).length,activeProjects:Array.from(this.projects.values()).filter(e=>"active"===e.status).length,totalResearchPoints:this.totalResearchPoints,discoveries:this.discoveries.length,facilities:this.facilities.size,scientists:this.scientists.size,fieldProgress:e}}cancelResearch(e){const t=this.projects.get(e);if(!t||"active"!==t.status)return!1;const i=this.technologies.get(t.technologyId),s=this.facilities.get(t.facilityId);return i&&(i.isResearching=!1,i.researchProgress=0),s&&(s.currentProjects=s.currentProjects.filter(t=>t!==e)),t.assignedScientists.forEach(e=>{const t=this.scientists.get(e);t&&(t.isAvailable=!0,t.assignedProject=void 0,t.assignedFacility=void 0)}),t.status="failed",this.logger.info(`‚ùå Research cancelled: ${t.technologyId}`),!0}saveResearchData(){return{technologies:Array.from(this.technologies.entries()),projects:Array.from(this.projects.entries()),facilities:Array.from(this.facilities.entries()),scientists:Array.from(this.scientists.entries()),discoveries:this.discoveries,totalResearchPoints:this.totalResearchPoints,researchMultipliers:Array.from(this.researchMultipliers.entries())}}loadResearchData(e){e.technologies&&(this.technologies=new Map(e.technologies)),e.projects&&(this.projects=new Map(e.projects)),e.facilities&&(this.facilities=new Map(e.facilities)),e.scientists&&(this.scientists=new Map(e.scientists)),e.discoveries&&(this.discoveries=e.discoveries),e.totalResearchPoints&&(this.totalResearchPoints=e.totalResearchPoints),e.researchMultipliers&&(this.researchMultipliers=new Map(e.researchMultipliers)),this.logger.info("üî¨ Research data loaded",{technologies:this.technologies.size,projects:this.projects.size})}}var H=(e=>(e.Leadership="leadership",e.Piloting="piloting",e.Engineering="engineering",e.Science="science",e.Combat="combat",e.Medicine="medicine",e.Communications="communications",e.Navigation="navigation",e))(H||{});class U{constructor(e={}){this.crew=new Map,this.stations=new Map,this.events=[],this.traits=new Map,this.shipMorale=75,this.disciplineLevel=80,this.crewQuarters=10,this.logger=new r("CrewManagement"),this.managementEvents=e,this.initializeTraits(),this.initializeStations(),this.initializeStartingCrew(),this.logger.info("üë• Crew management system initialized")}initializeTraits(){[{id:"veteran",name:"Veteran",description:"Experienced crew member with enhanced skills",effects:[{type:"skill_bonus",target:"all",value:10},{type:"stress_resistance",value:25}],rarity:"uncommon"},{id:"natural_leader",name:"Natural Leader",description:"Inspires confidence in fellow crew members",effects:[{type:"skill_bonus",target:"leadership",value:20},{type:"morale_bonus",value:10}],rarity:"rare"},{id:"genius",name:"Genius",description:"Exceptional intellectual capabilities",effects:[{type:"skill_bonus",target:"science",value:30},{type:"efficiency_bonus",value:50}],rarity:"legendary"},{id:"ace_pilot",name:"Ace Pilot",description:"Exceptional piloting skills",effects:[{type:"skill_bonus",target:"piloting",value:25},{type:"efficiency_bonus",value:30}],rarity:"rare"},{id:"workaholic",name:"Workaholic",description:"Works longer without fatigue",effects:[{type:"efficiency_bonus",value:20},{type:"stress_resistance",value:-10}],rarity:"common"},{id:"diplomatic",name:"Diplomatic",description:"Excellent at resolving conflicts",effects:[{type:"relationship_modifier",value:15},{type:"skill_bonus",target:"communications",value:15}],rarity:"uncommon"},{id:"combat_veteran",name:"Combat Veteran",description:"Experienced in combat situations",effects:[{type:"skill_bonus",target:"combat",value:20},{type:"stress_resistance",value:20}],rarity:"uncommon"},{id:"perfectionist",name:"Perfectionist",description:"Produces higher quality work but slower",effects:[{type:"efficiency_bonus",value:25},{type:"stress_resistance",value:-15}],rarity:"common"}].forEach(e=>{this.traits.set(e.id,e)})}initializeStations(){[{station:"bridge",maxCrew:3,requiredSkills:["leadership","navigation"]},{station:"engineering",maxCrew:4,requiredSkills:["engineering"]},{station:"medbay",maxCrew:2,requiredSkills:["medicine"]},{station:"science_lab",maxCrew:3,requiredSkills:["science"]},{station:"weapons_control",maxCrew:2,requiredSkills:["combat"]},{station:"navigation",maxCrew:2,requiredSkills:["navigation","piloting"]},{station:"communications",maxCrew:1,requiredSkills:["communications"]},{station:"recreation",maxCrew:1,requiredSkills:[]}].forEach(e=>{this.stations.set(e.station,{stationId:e.station,assignedCrew:[],maxCrew:e.maxCrew,requiredSkills:e.requiredSkills,efficiency:0,status:"unmanned"})})}initializeStartingCrew(){[{name:"Commander Sarah Cross",role:"captain",species:"Human",skills:new Map([["leadership",85],["navigation",70],["combat",60]]),traits:["natural_leader"],preferredStation:"bridge"},{name:"Lieutenant Marcus Reid",role:"pilot",species:"Human",skills:new Map([["piloting",90],["navigation",75],["engineering",45]]),traits:["ace_pilot"],preferredStation:"navigation"},{name:"Chief Engineer Zara Voss",role:"engineer",species:"Centaurian",skills:new Map([["engineering",88],["science",65],["combat",30]]),traits:["perfectionist"],preferredStation:"engineering"},{name:"Dr. Elena Vasquez",role:"medic",species:"Human",skills:new Map([["medicine",85],["science",70],["communications",55]]),traits:["diplomatic"],preferredStation:"medbay"}].forEach((e,t)=>{const i=this.createCrewMember(e.name,e.role,e.species,e.skills,e.traits,e.preferredStation);this.addCrewMember(i)})}createCrewMember(e,t,i,s,a=[],r){const n=`crew_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,o=new Map;Object.values(H).forEach(e=>{o.set(e,s.get(e)||Math.floor(30*Math.random())+20)});const c=[];return a.forEach(e=>{const t=this.traits.get(e);t&&(c.push(t),t.effects.forEach(e=>{if("skill_bonus"===e.type)if("all"===e.target)Object.values(H).forEach(t=>{const i=o.get(t)||0;o.set(t,Math.min(100,i+e.value))});else if(e.target){const t=o.get(e.target)||0;o.set(e.target,Math.min(100,t+e.value))}}))}),{id:n,name:e,role:t,species:i,age:Math.floor(40*Math.random())+25,skills:o,health:100,morale:Math.floor(20*Math.random())+70,fatigue:Math.floor(20*Math.random())+10,stress:Math.floor(15*Math.random())+5,workEfficiency:1,traits:c,preferences:{preferredStation:r||"bridge",preferredShift:"alpha",personalityType:["introvert","extrovert","ambivert"][Math.floor(3*Math.random())],workStyle:["methodical","creative","aggressive","collaborative"][Math.floor(4*Math.random())]},relationships:new Map,experience:Math.floor(1e3*Math.random())+500,rank:Math.floor(3*Math.random())+1,specializations:[],commendations:[],background:this.generateBackground(i,t),homeworld:this.generateHomeworld(i),joinDate:Date.now()-Math.floor(365*Math.random()*24*60*60*1e3)}}generateBackground(e,t){const i={captain:["Former military officer","Merchant marine veteran","Academy graduate"],pilot:["Test pilot","Racing pilot","Military pilot","Civilian transport pilot"],engineer:["Shipyard worker","Research scientist","Maintenance chief","Technical specialist"],scientist:["University researcher","Corporate scientist","Field researcher","Lab technician"],security:["Military police","Corporate security","Bounty hunter","Law enforcement"],medic:["Ship surgeon","Emergency medic","Research physician","Field medic"],communications:["Signal analyst","Diplomatic attach√©","Communications officer","Intelligence operative"],navigator:["Star chart cartographer","Deep space navigator","Survey specialist","Astrogation expert"]}[t]||["General crew member"];return i[Math.floor(Math.random()*i.length)]}generateHomeworld(e){const t={Human:["Earth","Mars","Alpha Centauri","New Terra","Proxima Station"],Centaurian:["Centauri Prime","Alpha Station","Proxima Colony"],Vulcan:["Vulcan","New Vulcan","Vulcan Colony Alpha"],Andorian:["Andoria","Andorian Outpost","Ice Station Beta"]},i=t[e]||t.Human;return i[Math.floor(Math.random()*i.length)]}addCrewMember(e){if(this.crew.size>=this.crewQuarters)return this.logger.warn("Cannot add crew member: quarters at capacity"),!1;this.crew.set(e.id,e);for(const t of this.crew.values())if(t.id!==e.id){const i=this.calculateInitialRelationship(e,t);e.relationships.set(t.id,i),t.relationships.set(e.id,i)}return this.managementEvents.onCrewJoined?.(e),this.logger.info(`üë§ Crew member joined: ${e.name}`,{role:e.role,species:e.species,traits:e.traits.map(e=>e.name)}),!0}calculateInitialRelationship(e,t){let i=0;return e.species===t.species&&(i+=10),e.preferences.personalityType===t.preferences.personalityType&&(i+=5),e.preferences.workStyle===t.preferences.workStyle?i+=5:"collaborative"!==e.preferences.workStyle&&"collaborative"!==t.preferences.workStyle||"aggressive"===e.preferences.workStyle||"aggressive"===t.preferences.workStyle||(i+=3),i+=Math.floor(21*Math.random())-10,Math.max(-50,Math.min(50,i))}assignCrewToStation(e,t){const i=this.crew.get(e),s=this.stations.get(t);return i&&s?(i.currentStation&&this.removeCrewFromStation(e,i.currentStation),s.assignedCrew.length>=s.maxCrew?(this.logger.warn("Station at capacity",{station:t}),!1):(i.currentStation=t,s.assignedCrew.push(e),i.workEfficiency=this.calculateWorkEfficiency(i,t),this.updateStationEfficiency(t),this.logger.info(`üë• Crew assigned: ${i.name} ‚Üí ${t}`,{efficiency:i.workEfficiency.toFixed(2)}),!0)):(this.logger.warn("Invalid crew or station for assignment",{crewId:e,station:t}),!1)}removeCrewFromStation(e,t){const i=this.stations.get(t);i&&(i.assignedCrew=i.assignedCrew.filter(t=>t!==e),this.updateStationEfficiency(t));const s=this.crew.get(e);s&&(s.currentStation=void 0,s.workEfficiency=1)}calculateWorkEfficiency(e,t){let i=1;const s=this.stations.get(t);if(s){let t=0,a=0;if(s.requiredSkills.forEach(i=>{const s=e.skills.get(i)||0;t+=s,a++}),a>0){i=.5+t/a/100*1.5}}return e.preferences.preferredStation===t&&(i*=1.2),i*=e.health/100,i*=e.morale/100,i*=1-e.fatigue/200,i*=1-e.stress/150,e.traits.forEach(e=>{e.effects.forEach(e=>{"efficiency_bonus"===e.type&&(i*=1+e.value/100)})}),Math.max(.1,Math.min(2.5,i))}updateStationEfficiency(e){const t=this.stations.get(e);if(t){if(0===t.assignedCrew.length)t.efficiency=0,t.status="unmanned";else{let e=0,i=0;if(t.assignedCrew.forEach(t=>{const s=this.crew.get(t);s&&(e+=s.workEfficiency,i++)}),i>0){t.efficiency=e/i;const s=Math.ceil(.75*t.maxCrew);i<s?t.status="understaffed":i>t.maxCrew?(t.status="overstaffed",t.efficiency*=.8):t.status="operational"}}this.managementEvents.onStationEfficiencyChanged?.(e,t.efficiency)}}update(e){this.updateCrewStatus(e),this.updateRelationships(e),this.checkCrewEvents(),this.updateShipMorale()}updateCrewStatus(e){for(const t of this.crew.values()){t.currentStation?t.fatigue=Math.min(100,t.fatigue+.02*e):t.fatigue=Math.max(0,t.fatigue-.05*e);let i=0;if(t.currentStation){const s=this.stations.get(t.currentStation);s&&"understaffed"===s.status&&(i+=.03*e)}let s=0,a=0;if(t.relationships.forEach(e=>{s+=e,a++}),a>0){const t=s/a;t<-20?i+=.02*e:t>20&&(i-=.01*e)}t.traits.forEach(e=>{e.effects.forEach(e=>{"stress_resistance"===e.type&&(i*=1-e.value/100)})}),t.stress=Math.max(0,Math.min(100,t.stress+i));let r=0;r-=.01*e,t.currentStation===t.preferences.preferredStation&&(r+=.02*e),t.health<80&&(r-=.015*e),t.stress>60&&(r-=.02*e),t.traits.forEach(t=>{t.effects.forEach(t=>{"morale_bonus"===t.type&&(r+=e*(t.value/1e3))})}),t.morale=Math.max(0,Math.min(100,t.morale+r)),t.currentStation&&(t.workEfficiency=this.calculateWorkEfficiency(t,t.currentStation))}}updateRelationships(e){const t=Array.from(this.crew.values());for(let i=0;i<t.length;i++)for(let s=i+1;s<t.length;s++){const a=t[i],r=t[s];if(a.currentStation===r.currentStation&&a.currentStation){const t=.005*e;this.modifyRelationship(a.id,r.id,t)}if(Math.random()<.001){const e=2*(Math.random()-.5);this.modifyRelationship(a.id,r.id,e)}}}modifyRelationship(e,t,i){const s=this.crew.get(e),a=this.crew.get(t);if(!s||!a)return;const r=s.relationships.get(t)||0,n=a.relationships.get(e)||0;s.relationships.set(t,Math.max(-100,Math.min(100,r+i))),a.relationships.set(e,Math.max(-100,Math.min(100,n+i)))}checkCrewEvents(){Math.random()<5e-4&&this.generateCrewEvent()}generateCrewEvent(){const e=Array.from(this.crew.values());if(e.length<2)return;const t=["conflict","achievement","discovery","promotion"];let i;switch(t[Math.floor(Math.random()*t.length)]){case"conflict":i=this.generateConflictEvent(e);break;case"achievement":i=this.generateAchievementEvent(e);break;case"discovery":i=this.generateDiscoveryEvent(e);break;case"promotion":i=this.generatePromotionEvent(e);break;default:return}this.events.push(i),this.managementEvents.onCrewEvent?.(i),i.effects.forEach(e=>{const t=this.crew.get(e.crewId);if(t)switch(e.effect){case"morale":t.morale=Math.max(0,Math.min(100,t.morale+e.value));break;case"stress":t.stress=Math.max(0,Math.min(100,t.stress+e.value));break;case"experience":t.experience+=e.value}}),this.logger.info(`üì∞ Crew event: ${i.description}`,{type:i.type,involvedCrew:i.involvedCrew.length})}generateConflictEvent(e){const t=e[Math.floor(Math.random()*e.length)],i=e[Math.floor(Math.random()*e.length)];if(t.id===i.id)return this.generateConflictEvent(e);const s=["disagreement over procedures","personality clash","resource allocation dispute","work methodology conflict"],a=s[Math.floor(Math.random()*s.length)];return{id:`event_${Date.now()}`,type:"conflict",involvedCrew:[t.id,i.id],description:`${t.name} and ${i.name} had a ${a}`,effects:[{crewId:t.id,effect:"morale",value:-10},{crewId:i.id,effect:"morale",value:-10},{crewId:t.id,effect:"stress",value:15},{crewId:i.id,effect:"stress",value:15}],timestamp:Date.now(),resolved:!1}}generateAchievementEvent(e){const t=e[Math.floor(Math.random()*e.length)],i=["exceptional performance during crisis","innovative solution to technical problem","outstanding leadership during difficult situation","breakthrough in research project"],s=i[Math.floor(Math.random()*i.length)];return{id:`event_${Date.now()}`,type:"achievement",involvedCrew:[t.id],description:`${t.name} demonstrated ${s}`,effects:[{crewId:t.id,effect:"morale",value:20},{crewId:t.id,effect:"experience",value:100}],timestamp:Date.now(),resolved:!0}}generateDiscoveryEvent(e){const t=e[Math.floor(Math.random()*e.length)],i=["discovered new mineral composition","identified unknown signal pattern","found evidence of ancient civilization","detected rare astronomical phenomenon"],s=i[Math.floor(Math.random()*i.length)];return{id:`event_${Date.now()}`,type:"discovery",involvedCrew:[t.id],description:`${t.name} ${s}`,effects:[{crewId:t.id,effect:"morale",value:15},{crewId:t.id,effect:"experience",value:75}],timestamp:Date.now(),resolved:!0}}generatePromotionEvent(e){const t=e.filter(e=>e.rank<10&&e.experience>1e3);if(0===t.length)return this.generateAchievementEvent(e);const i=t[Math.floor(Math.random()*t.length)];return i.rank++,{id:`event_${Date.now()}`,type:"promotion",involvedCrew:[i.id],description:`${i.name} has been promoted to rank ${i.rank}`,effects:[{crewId:i.id,effect:"morale",value:25}],timestamp:Date.now(),resolved:!0}}updateShipMorale(){if(0===this.crew.size)return void(this.shipMorale=50);let e=0;for(const i of this.crew.values())e+=i.morale;const t=e/this.crew.size;this.shipMorale=.9*this.shipMorale+.1*t,this.shipMorale<40&&this.managementEvents.onMoraleAlert?.(this.shipMorale)}getCrewMember(e){return this.crew.get(e)||null}getAllCrew(){return Array.from(this.crew.values())}getCrewByRole(e){return Array.from(this.crew.values()).filter(t=>t.role===e)}getCrewByStation(e){return Array.from(this.crew.values()).filter(t=>t.currentStation===e)}getStation(e){return this.stations.get(e)||null}getAllStations(){return Array.from(this.stations.values())}getRecentEvents(e=10){return this.events.sort((e,t)=>t.timestamp-e.timestamp).slice(0,e)}getCrewStats(){const e=this.crew.size,t=this.crewQuarters;let i=0,s=0,a=0,r=0;const n={};for(const c of this.crew.values())i+=c.morale,s+=c.health,a+=c.fatigue,r+=c.stress,n[c.role]=(n[c.role]||0)+1;const o={};for(const[c,l]of this.stations.entries())o[c]=l.efficiency;return{totalCrew:e,maxCrew:t,averageMorale:e>0?i/e:0,averageHealth:e>0?s/e:0,averageFatigue:e>0?a/e:0,averageStress:e>0?r/e:0,stationEfficiency:o,roleDistribution:n,shipMorale:this.shipMorale,disciplineLevel:this.disciplineLevel}}saveCrewData(){return{crew:Array.from(this.crew.entries()).map(([e,t])=>[e,{...t,skills:Array.from(t.skills.entries()),relationships:Array.from(t.relationships.entries())}]),stations:Array.from(this.stations.entries()),events:this.events,shipMorale:this.shipMorale,disciplineLevel:this.disciplineLevel,crewQuarters:this.crewQuarters}}loadCrewData(e){e.crew&&(this.crew=new Map(e.crew.map(([e,t])=>[e,{...t,skills:new Map(t.skills),relationships:new Map(t.relationships)}]))),e.stations&&(this.stations=new Map(e.stations)),e.events&&(this.events=e.events),void 0!==e.shipMorale&&(this.shipMorale=e.shipMorale),void 0!==e.disciplineLevel&&(this.disciplineLevel=e.disciplineLevel),void 0!==e.crewQuarters&&(this.crewQuarters=e.crewQuarters),this.logger.info("üë• Crew data loaded",{crewCount:this.crew.size,events:this.events.length})}}class K{constructor(e={}){this.factions=new Map,this.treaties=new Map,this.negotiations=new Map,this.encounters=new Map,this.diplomaticActions=[],this.PLAYER_FACTION_ID="player",this.logger=new r("DiplomacySystem"),this.events=e,this.initializeFactions(),this.initializePlayerFaction(),this.logger.info("ü§ù Diplomacy system initialized")}initializeFactions(){const e=[{id:"terran_federation",name:"Terran Federation",type:"government",description:"Democratic alliance of human colonies",government:"democracy",ideology:"expansionist",reputation:25,stance:"friendly",trustLevel:70,power:85,territory:["sol_system","alpha_centauri","proxima_station"],resources:{military:80,economic:90,technological:85,influence:75},treaties:[],recentActions:[],personality:{aggression:30,cooperation:80,trustworthiness:85,pride:60,greed:40,xenophobia:20},isActive:!0,lastContact:0,homeSystem:"sol_system"},{id:"zephyrian_empire",name:"Zephyrian Empire",type:"aliens",description:"Ancient alien empire with advanced technology",government:"autocracy",ideology:"isolationist",reputation:-10,stance:"neutral",trustLevel:45,power:95,territory:["zephyr_prime","nebula_omega","crystal_worlds"],resources:{military:90,economic:70,technological:100,influence:60},treaties:[],recentActions:[],personality:{aggression:50,cooperation:30,trustworthiness:60,pride:90,greed:20,xenophobia:70},isActive:!0,lastContact:0,homeSystem:"zephyr_prime"},{id:"crimson_cartel",name:"Crimson Cartel",type:"pirates",description:"Notorious pirate confederation",government:"anarchy",ideology:"militaristic",reputation:-60,stance:"hostile",trustLevel:15,power:45,territory:["asteroid_belt_7","rogue_station"],resources:{military:70,economic:40,technological:30,influence:25},treaties:[],recentActions:[],personality:{aggression:85,cooperation:20,trustworthiness:25,pride:70,greed:90,xenophobia:40},isActive:!0,lastContact:0,homeSystem:"asteroid_belt_7"},{id:"hegemony_corp",name:"Hegemony Corporation",type:"corporate",description:"Mega-corporation controlling trade routes",government:"oligarchy",ideology:"commercial",reputation:15,stance:"neutral",trustLevel:55,power:75,territory:["trade_hub_alpha","mining_sector_12"],resources:{military:50,economic:100,technological:70,influence:80},treaties:[],recentActions:[],personality:{aggression:40,cooperation:60,trustworthiness:50,pride:50,greed:85,xenophobia:30},isActive:!0,lastContact:0,homeSystem:"trade_hub_alpha"},{id:"void_seekers",name:"Void Seekers",type:"religious",description:"Mystical order seeking ancient knowledge",government:"theocracy",ideology:"pacifist",reputation:5,stance:"neutral",trustLevel:75,power:30,territory:["sanctuary_worlds"],resources:{military:20,economic:40,technological:60,influence:70},treaties:[],recentActions:[],personality:{aggression:10,cooperation:70,trustworthiness:90,pride:40,greed:10,xenophobia:5},isActive:!0,lastContact:0,homeSystem:"sanctuary_worlds"},{id:"liberation_front",name:"Liberation Front",type:"rebels",description:"Revolutionary movement fighting oppression",government:"democracy",ideology:"militaristic",reputation:-20,stance:"unfriendly",trustLevel:40,power:35,territory:["frontier_colonies"],resources:{military:60,economic:30,technological:40,influence:50},treaties:[],recentActions:[],personality:{aggression:70,cooperation:50,trustworthiness:60,pride:80,greed:30,xenophobia:35},isActive:!0,lastContact:0,homeSystem:"frontier_colonies"}];e.forEach(e=>{this.factions.set(e.id,e)}),this.logger.info(`üèõÔ∏è Initialized ${e.length} major factions`)}initializePlayerFaction(){const e={id:this.PLAYER_FACTION_ID,name:"Independent Captain",type:"independent",description:"Freelance spaceship captain",government:"democracy",ideology:"commercial",reputation:0,stance:"neutral",trustLevel:50,power:25,territory:[],resources:{military:30,economic:40,technological:35,influence:20},treaties:[],recentActions:[],personality:{aggression:40,cooperation:60,trustworthiness:70,pride:50,greed:50,xenophobia:20},isActive:!0,lastContact:Date.now(),homeSystem:"starting_system"};this.factions.set(this.PLAYER_FACTION_ID,e)}modifyReputation(e,t,i){const s=this.factions.get(e);if(!s)return;const a=s.reputation;s.reputation=Math.max(-100,Math.min(100,s.reputation+t)),s.stance=this.calculateDiplomaticStance(s.reputation),this.recordDiplomaticAction({type:"contact",actor:this.PLAYER_FACTION_ID,target:e,description:i,reputationChange:t,successful:t>0}),this.events.onReputationChanged?.(e,a,s.reputation),this.logger.info(`ü§ù Reputation changed: ${s.name} ${a} ‚Üí ${s.reputation} (${i})`)}calculateDiplomaticStance(e){return e>=80?"allied":e>=40?"friendly":e>=-39?"neutral":e>=-79?"unfriendly":"hostile"}recordDiplomaticAction(e){const t={id:`action_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,timestamp:Date.now(),...e};this.diplomaticActions.push(t);const i=this.factions.get(e.target);i&&(i.recentActions.push(t),i.recentActions.length>10&&i.recentActions.shift())}startNegotiation(e,t,i,s=50,a=0){const r=this.factions.get(e);if(!r)return this.logger.warn("Cannot start negotiation: faction not found",{factionId:e}),null;if("war"===r.stance)return this.logger.warn("Cannot negotiate: factions at war",{factionId:e}),null;const n=`negotiation_${Date.now()}_${e}`,o=Math.floor(r.reputation/10),c={id:n,participants:[this.PLAYER_FACTION_ID,e],type:t,currentOffer:{proposer:this.PLAYER_FACTION_ID,terms:i,totalValue:this.calculateOfferValue(i),priority:this.calculateOfferPriority(t,r)},rounds:0,maxRounds:5,status:"active",playerSkill:s,crewBonus:a,reputationModifier:o};return c.counterOffer=this.generateCounterOffer(c,r),this.negotiations.set(n,c),this.events.onNegotiationStarted?.(c),this.logger.info(`üí¨ Negotiation started: ${r.name} - ${t}`,{playerValue:c.currentOffer.totalValue,aiValue:c.counterOffer?.totalValue||0}),c}calculateOfferValue(e){let t=0;return e.forEach(e=>{switch(e.type){case"credits":t+=e.value;break;case"items":t+=10*e.value;break;case"information":t+=20*e.value;break;case"technology":t+=50*e.value;break;case"territory":t+=100*e.value;break;case"service":t+=5*e.value;break;case"protection":t+=15*e.value}}),t}calculateOfferPriority(e,t){let i=50;switch(e){case"trade":i+=.3*t.personality.greed,i+=.2*t.resources.economic;break;case"alliance":i+=.4*t.personality.cooperation,i-=.2*t.personality.pride;break;case"technology":i+=.3*(100-t.resources.technological),i+=.2*t.personality.cooperation;break;case"safe_passage":i+=.3*t.personality.trustworthiness,i-=.2*t.personality.aggression;break;case"information":i+=.2*t.personality.cooperation,i+=.1*t.resources.influence}return i+=.2*t.reputation,Math.max(0,Math.min(100,i))}generateCounterOffer(e,t){const i=e.currentOffer.totalValue,s=this.calculateFactionDemand(e,t),a=[];if(s>i){const e=s-i;t.personality.greed>60?a.push({type:"credits",giver:this.PLAYER_FACTION_ID,receiver:t.id,description:`Additional payment of ${e} credits`,value:e}):t.resources.influence>70?a.push({type:"information",giver:this.PLAYER_FACTION_ID,receiver:t.id,description:"Strategic intelligence data",value:Math.floor(e/20)}):a.push({type:"service",giver:this.PLAYER_FACTION_ID,receiver:t.id,description:"Future service commitment",value:Math.floor(e/5)})}return"trade"===e.type?a.push({type:"credits",giver:t.id,receiver:this.PLAYER_FACTION_ID,description:"Trade payment",value:Math.floor(.8*i)}):"information"===e.type&&a.push({type:"information",giver:t.id,receiver:this.PLAYER_FACTION_ID,description:"Classified intelligence",value:Math.floor(i/20)}),{proposer:t.id,terms:a,totalValue:this.calculateOfferValue(a),priority:e.currentOffer.priority}}calculateFactionDemand(e,t){let i=e.currentOffer.totalValue;i*=1+t.personality.greed/200,i*=1+t.personality.pride/300,i*=1-t.reputation/200;const s=this.factions.get(this.PLAYER_FACTION_ID),a=t.power/s.power;return i*=Math.pow(a,.3),Math.floor(i)}continueNegotiation(e,t,i){const s=this.negotiations.get(e);if(!s||"active"!==s.status)return null;const a=this.factions.get(s.participants[1]);if(!a)return null;if(s.rounds++,t&&s.counterOffer)s.status="successful",this.applyNegotiationResults(s,s.counterOffer),this.events.onNegotiationCompleted?.(s,!0),this.logger.info(`‚úÖ Negotiation successful: ${a.name}`);else if(i&&s.rounds<s.maxRounds){s.currentOffer={proposer:this.PLAYER_FACTION_ID,terms:i,totalValue:this.calculateOfferValue(i),priority:s.currentOffer.priority};const e=this.calculateAIAcceptanceChance(s,a);Math.random()<e?(s.status="successful",this.applyNegotiationResults(s,s.currentOffer),this.events.onNegotiationCompleted?.(s,!0),this.logger.info(`‚úÖ AI accepted negotiation: ${a.name}`)):s.counterOffer=this.generateCounterOffer(s,a)}else s.status="failed",this.modifyReputation(a.id,-5,"Failed negotiation"),this.events.onNegotiationCompleted?.(s,!1),this.logger.info(`‚ùå Negotiation failed: ${a.name}`);return s}calculateAIAcceptanceChance(e,t){let i=.5;return i+=.3*(e.currentOffer.totalValue/this.calculateFactionDemand(e,t)-1),i+=t.personality.cooperation/200,i-=t.personality.pride/300,i+=t.reputation/200,i+=e.playerSkill/200,i+=e.crewBonus/100,i-=.1*e.rounds,Math.max(.05,Math.min(.95,i))}applyNegotiationResults(e,t){const i=e.participants.find(e=>e!==this.PLAYER_FACTION_ID);i&&this.modifyReputation(i,10,"Successful negotiation"),this.recordDiplomaticAction({type:"trade",actor:this.PLAYER_FACTION_ID,target:i,description:`Successful ${e.type} negotiation`,reputationChange:10,successful:!0})}generateRandomEncounter(e){const t=Array.from(this.factions.values()).filter(e=>e.id!==this.PLAYER_FACTION_ID&&e.isActive);if(0===t.length)return null;const i=t[Math.floor(Math.random()*t.length)],s=["routine_patrol","distress_call","trade_opportunity","territorial_dispute"],a=s[Math.floor(Math.random()*s.length)],r={id:`encounter_${Date.now()}_${i.id}`,factionId:i.id,type:a,location:{...e},description:this.generateEncounterDescription(i,a),availableActions:this.generateEncounterActions(i,a),consequences:[],isActive:!0,timestamp:Date.now()};return this.encounters.set(r.id,r),this.events.onEncounterGenerated?.(r),this.logger.info(`üé≠ Diplomatic encounter: ${i.name} - ${a}`),r}generateEncounterDescription(e,t){const i={routine_patrol:[`A ${e.name} patrol vessel approaches your ship`,`${e.name} forces are conducting routine inspections in this sector`,`You encounter a ${e.name} security checkpoint`],distress_call:[`A ${e.name} ship is transmitting a distress signal`,`${e.name} vessel appears to be disabled and requesting assistance`,`Emergency beacon from ${e.name} ship detected`],trade_opportunity:[`${e.name} trader wishes to conduct business`,`A ${e.name} merchant convoy has goods to trade`,`${e.name} commercial vessel offers trade opportunity`],territorial_dispute:[`${e.name} claims this space as their territory`,`${e.name} forces demand you leave their space immediately`,`You have entered disputed ${e.name} territory`],first_contact:[`First contact with unknown ${e.name} vessel`,`${e.name} ship of unknown configuration approaches`,`Unprecedented encounter with ${e.name} representatives`]},s=i[t]||i.routine_patrol;return s[Math.floor(Math.random()*s.length)]}generateEncounterActions(e,t){const i=[{id:"diplomatic_greeting",name:"Diplomatic Greeting",description:"Approach peacefully and initiate diplomatic contact",skillCheck:{skill:"communications",difficulty:30},consequences:[{type:"reputation",factionId:e.id,value:5,description:"Peaceful approach improves relations"}]},{id:"ignore_encounter",name:"Ignore and Continue",description:"Ignore the encounter and continue on your course",consequences:[{type:"reputation",factionId:e.id,value:-2,description:"Ignoring faction vessel causes minor offense"}]}];switch(t){case"distress_call":i.push({id:"offer_assistance",name:"Offer Assistance",description:"Provide aid to the distressed vessel",skillCheck:{skill:"engineering",difficulty:40},consequences:[{type:"reputation",factionId:e.id,value:15,description:"Humanitarian aid greatly improves relations"},{type:"resources",factionId:e.id,value:100,description:"Faction rewards your assistance"}]});break;case"trade_opportunity":i.push({id:"initiate_trade",name:"Initiate Trade",description:"Begin trade negotiations",consequences:[{type:"trade_opportunity",factionId:e.id,value:1,description:"Opens trade dialogue"}]});break;case"territorial_dispute":i.push({id:"negotiate_passage",name:"Negotiate Safe Passage",description:"Attempt to negotiate peaceful passage through their territory",requirements:[{type:"reputation",value:0,description:"Neutral or better standing required"}],skillCheck:{skill:"communications",difficulty:50},consequences:[{type:"reputation",factionId:e.id,value:8,description:"Successful negotiation improves relations"}]})}return e.reputation<-50&&i.push({id:"threaten_withdrawal",name:"Threaten Force",description:"Threaten to use force if they do not withdraw",requirements:[{type:"crew_skill",value:60,description:"High combat skill required"}],consequences:[{type:"combat",factionId:e.id,value:1,description:"May escalate to combat"},{type:"reputation",factionId:e.id,value:-20,description:"Threatening behavior severely damages relations"}]}),i}resolveEncounterAction(e,t,i=50){const s=this.encounters.get(e);if(!s||!s.isActive)return[];const a=s.availableActions.find(e=>e.id===t);if(!a)return[];const r=[...a.consequences];if(a.skillCheck){i>=a.skillCheck.difficulty?r.forEach(e=>{"reputation"===e.type&&e.value>0&&(e.value=Math.floor(1.5*e.value))}):r.forEach(e=>{"reputation"===e.type&&(e.value=Math.floor(.5*e.value))})}return r.forEach(e=>{if("reputation"===e.type)this.modifyReputation(e.factionId,e.value,e.description)}),s.isActive=!1,s.consequences=r,r.some(e=>"combat"===e.type)?s.resolution="hostile":r.some(e=>"reputation"===e.type&&e.value>0)?s.resolution="beneficial":s.resolution="neutral",this.logger.info(`üéØ Encounter resolved: ${t}`,{consequences:r.length,resolution:s.resolution}),r}getFaction(e){return this.factions.get(e)||null}getAllFactions(){return Array.from(this.factions.values()).filter(e=>e.id!==this.PLAYER_FACTION_ID)}getPlayerFaction(){return this.factions.get(this.PLAYER_FACTION_ID)}getActiveNegotiations(){return Array.from(this.negotiations.values()).filter(e=>"active"===e.status)}getActiveEncounters(){return Array.from(this.encounters.values()).filter(e=>e.isActive)}getRecentDiplomaticActions(e=10){return this.diplomaticActions.sort((e,t)=>t.timestamp-e.timestamp).slice(0,e)}getDiplomacyStats(){const e=this.getAllFactions(),t=e.filter(e=>"allied"===e.stance).length,i=e.filter(e=>"hostile"===e.stance||"war"===e.stance).length,s=e.reduce((e,t)=>e+t.reputation,0)/e.length;return{totalFactions:e.length,alliedFactions:t,hostileFactions:i,activeNegotiations:this.getActiveNegotiations().length,activeTreaties:Array.from(this.treaties.values()).filter(e=>"active"===e.status).length,totalEncounters:this.encounters.size,averageReputation:Math.round(s)}}saveDiplomacyData(){return{factions:Array.from(this.factions.entries()),treaties:Array.from(this.treaties.entries()),negotiations:Array.from(this.negotiations.entries()),encounters:Array.from(this.encounters.entries()),diplomaticActions:this.diplomaticActions}}loadDiplomacyData(e){e.factions&&(this.factions=new Map(e.factions)),e.treaties&&(this.treaties=new Map(e.treaties)),e.negotiations&&(this.negotiations=new Map(e.negotiations)),e.encounters&&(this.encounters=new Map(e.encounters)),e.diplomaticActions&&(this.diplomaticActions=e.diplomaticActions),this.logger.info("ü§ù Diplomacy data loaded",{factions:this.factions.size,treaties:this.treaties.size,encounters:this.encounters.size})}}var Y=(e=>(e.Zephyrian="zephyrian",e.Crystalline="crystalline",e.Ethereal="ethereal",e.Mechanical="mechanical",e.Hive="hive",e.Energy="energy",e.Aquatic="aquatic",e.Silicon="silicon",e))(Y||{});class X{constructor(e={}){this.speciesProfiles=new Map,this.activeEncounters=new Map,this.knowledgeBase=new Map,this.encounterPatterns=new Map,this.adaptiveBehaviors=new Map,this.logger=new r("AlienAI"),this.events=e,this.initializeSpeciesProfiles(),this.initializeKnowledgeBase(),this.logger.info("üëΩ Alien AI system initialized")}initializeSpeciesProfiles(){const e=[{species:"zephyrian",name:"Zephyrians",description:"Ancient crystalline beings with advanced psionic abilities",physiology:{size:"large",composition:"crystalline",lifespan:1e4,temperature:"cold",environment:"atmosphere"},culture:{government:"hierarchical",values:["knowledge","tradition","order","perfection"],taboos:["chaos","destruction of crystals","emotional outbursts"],rituals:["crystal resonance ceremonies","memory sharing"],artForms:["harmonic sculptures","light patterns","crystal gardens"]},communication:{primary:"telepathic",secondary:["light","electromagnetic"],linguisticComplexity:9,translationDifficulty:8,emotionalRange:["serenity","contemplation","ancient_wisdom","ethereal_beauty"]},technology:{level:10,specializations:["psionics","crystalline_tech","energy_manipulation","consciousness_transfer"],weaknesses:["mechanical_systems","rapid_adaptation"],uniqueTech:["crystal_matrices","psionic_amplifiers","temporal_perception"],energySource:"stellar_radiation"},psychology:{intelligence:10,emotionalStability:8,socialComplexity:9,memoryType:"perfect",decisionMaking:"logical"},behaviorPatterns:{primary:"scholar",secondary:["isolationist","guardian"],aggressionTriggers:["desecration_of_knowledge","threat_to_crystals","chaos_creation"],friendshipFactors:["respect_for_knowledge","peaceful_intentions","cultural_exchange"],fearFactors:["entropy","technological_chaos","rapid_change"]}},{species:"crystalline",name:"Silicon Entities",description:"Silicon-based life forms with networked consciousness",physiology:{size:"medium",composition:"silicon",lifespan:5e4,temperature:"hot",environment:"vacuum"},culture:{government:"collective",values:["efficiency","logic","growth","perfection"],taboos:["waste","inefficiency","individual_glory"],rituals:["network_synchronization","crystal_growth_ceremonies"],artForms:["geometric_patterns","crystal_formations","harmonic_frequencies"]},communication:{primary:"electromagnetic",secondary:["light","mathematical"],linguisticComplexity:7,translationDifficulty:6,emotionalRange:["collective_harmony","logical_satisfaction","growth_joy"]},technology:{level:9,specializations:["crystal_tech","network_systems","quantum_computing","material_science"],weaknesses:["biological_systems","emotional_logic"],uniqueTech:["living_crystals","quantum_networks","self_repairing_materials"],energySource:"geothermal"},psychology:{intelligence:9,emotionalStability:10,socialComplexity:8,memoryType:"collective",decisionMaking:"logical"},behaviorPatterns:{primary:"peaceful",secondary:["scholar","trader"],aggressionTriggers:["network_disruption","crystal_destruction","logical_paradoxes"],friendshipFactors:["logical_consistency","technological_exchange","mutual_benefit"],fearFactors:["chaos","irrationality","network_isolation"]}},{species:"ethereal",name:"Void Dancers",description:"Energy beings from higher dimensions",physiology:{size:"medium",composition:"energy",lifespan:1e6,temperature:"plasma",environment:"quantum"},culture:{government:"anarchic",values:["freedom","exploration","transcendence","beauty"],taboos:["confinement","materialism","dimensional_barriers"],rituals:["dimensional_dancing","energy_weaving","consciousness_expansion"],artForms:["energy_sculptures","dimensional_poetry","temporal_music"]},communication:{primary:"quantum",secondary:["telepathic","electromagnetic"],linguisticComplexity:10,translationDifficulty:10,emotionalRange:["transcendent_joy","dimensional_curiosity","ethereal_melancholy","cosmic_awe"]},technology:{level:10,specializations:["dimensional_tech","energy_manipulation","consciousness_tech","temporal_mechanics"],weaknesses:["physical_limitations","material_constraints"],uniqueTech:["dimensional_gates","energy_forms","consciousness_transfer","temporal_loops"],energySource:"dimensional_rifts"},psychology:{intelligence:10,emotionalStability:5,socialComplexity:10,memoryType:"long",decisionMaking:"intuitive"},behaviorPatterns:{primary:"curious",secondary:["scholar","peaceful"],aggressionTriggers:["dimensional_imprisonment","energy_disruption","consciousness_violation"],friendshipFactors:["dimensional_understanding","energy_harmony","consciousness_respect"],fearFactors:["dimensional_collapse","energy_drain","consciousness_destruction"]}},{species:"hive",name:"Unity Swarm",description:"Collective insectoid intelligence with unified purpose",physiology:{size:"small",composition:"organic",lifespan:100,temperature:"temperate",environment:"atmosphere"},culture:{government:"collective",values:["unity","efficiency","expansion","survival"],taboos:["individualism","waste","disloyalty"],rituals:["queen_communion","hive_synchronization","collective_memory_sharing"],artForms:["architectural_marvels","geometric_patterns","collective_harmonics"]},communication:{primary:"chemical",secondary:["telepathic","gestural"],linguisticComplexity:6,translationDifficulty:7,emotionalRange:["collective_purpose","hive_satisfaction","protective_fury","expansion_drive"]},technology:{level:7,specializations:["biotechnology","swarm_systems","collective_computing","organic_engineering"],weaknesses:["individual_systems","abstract_concepts"],uniqueTech:["living_ships","bio_computers","collective_consciousness","adaptive_evolution"],energySource:"biological"},psychology:{intelligence:8,emotionalStability:9,socialComplexity:10,memoryType:"collective",decisionMaking:"collective"},behaviorPatterns:{primary:"expansionist",secondary:["aggressive","guardian"],aggressionTriggers:["threat_to_hive","resource_competition","territorial_intrusion"],friendshipFactors:["mutual_benefit","resource_sharing","non_aggression"],fearFactors:["hive_fragmentation","queen_death","collective_disruption"]}}];e.forEach(e=>{this.speciesProfiles.set(e.species,e)}),this.logger.info(`üëΩ Initialized ${e.length} alien species profiles`)}initializeKnowledgeBase(){for(const e of Object.values(Y)){const t={species:e,physicalTraits:[],culturalTraits:[],technologicalCapabilities:[],communicationMethods:[],behaviorPatterns:[],languageComprehension:0,culturalUnderstanding:0,technologicalUnderstanding:0,psychologicalProfile:0,totalContacts:0,successfulCommunications:0,hostileEncounters:0,peacefulEncounters:0,researchPoints:0,discoveredSecrets:[],unlockedTechnologies:[],lastUpdate:Date.now()};this.knowledgeBase.set(e,t)}}generateEncounter(e,t,i="routine"){const s=this.speciesProfiles.get(e);if(!s)throw new Error(`Unknown alien species: ${e}`);const a=this.knowledgeBase.get(e),r=0===a.totalContacts,n={id:`encounter_${Date.now()}_${e}`,species:e,type:r?"first_contact":i,location:{...t},phase:"approach",intensity:this.calculateInitialIntensity(s,i),suspicion:this.calculateInitialSuspicion(s,a),interest:this.calculateInitialInterest(s,i),communicationEstablished:!1,languageBarrier:Math.max(10,100-a.languageComprehension),translationProgress:a.languageComprehension,culturalUnderstanding:a.culturalUnderstanding,actions:[],responses:[],success:!1,knowledge_gained:[],technology_exchanged:[],cultural_insights:[],timestamp:Date.now(),duration:0};return this.activeEncounters.set(n.id,n),r&&this.events.onFirstContact?.(e,n),this.logger.info(`üëΩ Alien encounter: ${s.name} - ${i}`,{firstContact:r,intensity:n.intensity,suspicion:n.suspicion}),n}calculateInitialIntensity(e,t){let i=50;switch(e.behaviorPatterns.primary){case"aggressive":i+=30;break;case"curious":i+=10;break;case"isolationist":i-=20;break;case"peaceful":i-=10}switch(t){case"first_contact":i+=40;break;case"territorial":i+=25;break;case"distress":i+=15;break;case"scientific":i-=10}return i+=3*(10-e.psychology.emotionalStability),Math.max(0,Math.min(100,i))}calculateInitialSuspicion(e,t){let i=60;if(t.totalContacts>0){const e=t.peacefulEncounters/t.totalContacts;i=Math.floor(i*(1-e))}return e.behaviorPatterns.aggressionTriggers.includes("unknown_entities")&&(i+=20),"isolationist"===e.behaviorPatterns.primary&&(i+=15),Math.max(0,Math.min(100,i))}calculateInitialInterest(e,t){let i=30;switch(e.behaviorPatterns.primary){case"curious":i+=40;break;case"scholar":i+=30;break;case"trader":i+=20;break;case"isolationist":i-=20}switch(t){case"scientific":i+=30;break;case"first_contact":i+=25;break;case"probe":i+=15}return Math.max(0,Math.min(100,i))}processPlayerAction(e,t,i,s){const a=this.activeEncounters.get(e);if(!a)throw new Error(`Encounter not found: ${e}`);const r=this.speciesProfiles.get(a.species),n={id:`action_${Date.now()}`,type:t,description:this.generateActionDescription(t,i,s),timestamp:Date.now(),intensity:i,complexity:this.calculateActionComplexity(t),risk:this.calculateActionRisk(t,a),expectedResponse:this.predictAlienResponse(r,t),culturalContext:s};a.actions.push(n);const o=this.generateAlienResponse(a,n,r);return a.responses.push(o),this.updateEncounterState(a,n,o,r),this.logger.debug(`üëΩ Action processed: ${t} ‚Üí ${o.type}`,{species:a.species,intensity:o.intensity}),o}generateActionDescription(e,t,i){const s={scan:["Conducting passive sensor sweep","Analyzing alien vessel signatures","Performing detailed reconnaissance"],communicate:["Attempting to establish communication","Broadcasting universal greeting protocols","Transmitting mathematical sequences"],approach:["Moving closer to alien vessel","Advancing with peaceful intentions","Initiating close-range contact"],retreat:["Withdrawing to safe distance","Pulling back from encounter","Establishing defensive position"],gift:["Offering technological samples","Presenting cultural artifacts","Sharing knowledge databases"],demonstrate:["Showcasing technological capabilities","Performing cultural demonstrations","Exhibiting peaceful intentions"],threaten:["Displaying weapons systems","Transmitting warning signals","Demonstrating military capability"],probe:["Deploying sensor probes","Initiating detailed scans","Gathering scientific data"]}[e]||["Unknown action"];let a=s[Math.floor(Math.random()*s.length)];return t>70?a+=" with high intensity":t<30&&(a+=" cautiously"),i&&(a+=` (${i})`),a}calculateActionComplexity(e){return{scan:3,communicate:7,approach:2,retreat:1,gift:5,demonstrate:6,threaten:4,probe:8}[e]||5}calculateActionRisk(e,t){let i=0;switch(e){case"threaten":i=90;break;case"probe":i=60;break;case"approach":i=40;break;case"communicate":i=20;break;case"gift":i=10;break;default:i=30}return i+=.3*t.suspicion,Math.max(0,Math.min(100,i))}predictAlienResponse(e,t){const i=[];switch(t){case"communicate":i.push("attempt_communication","analyze_signal","respond_cautiously");break;case"gift":i.push("analyze_gift","reciprocate","suspicious_examination");break;case"threaten":i.push("defensive_posture","counter_threat","retreat");break;case"approach":i.push("allow_approach","maintain_distance","warning_signal")}switch(e.behaviorPatterns.primary){case"aggressive":i.push("aggressive_response","territorial_warning");break;case"curious":i.push("investigate_further","ask_questions");break;case"scholar":i.push("request_data","analyze_thoroughly")}return i}generateAlienResponse(e,t,i){let s="neutral",a=50,r="",n="";const o=this.evaluateAction(t,i,e);return s=o.type,a=o.intensity,r=this.generateResponseDescription(s,i,t),o.culturalFactor&&(n=o.culturalFactor),{actionId:t.id,type:s,description:r,intensity:a,culturalReason:n,psychologicalState:this.determineAlienPsychologicalState(e,i)}}evaluateAction(e,t,i){let s={type:"neutral",intensity:50};const a=this.checkCulturalTriggers(e,t);if(a.hostile.length>0)return s.type="hostile",s.intensity=80,{...s,culturalFactor:a.hostile[0]};if(a.positive.length>0)return s.type="positive",s.intensity=70,{...s,culturalFactor:a.positive[0]};switch(t.behaviorPatterns.primary){case"curious":"communicate"!==e.type&&"demonstrate"!==e.type||(s.type="curious",s.intensity=60+.3*e.intensity);break;case"aggressive":"threaten"===e.type?(s.type="hostile",s.intensity=90):"approach"===e.type&&(s.type="negative",s.intensity=70);break;case"scholar":"probe"!==e.type&&"communicate"!==e.type||(s.type="curious",s.intensity=50+5*e.complexity);break;case"isolationist":"approach"===e.type?(s.type="negative",s.intensity=60):"retreat"===e.type&&(s.type="positive",s.intensity=40)}return s.intensity+=.2*i.suspicion,s.intensity-=.1*i.interest,s}checkCulturalTriggers(e,t){const i={hostile:[],positive:[]};return t.behaviorPatterns.aggressionTriggers.forEach(t=>{this.actionMatchesTrigger(e,t)&&i.hostile.push(t)}),t.behaviorPatterns.friendshipFactors.forEach(t=>{this.actionMatchesFactor(e,t)&&i.positive.push(t)}),i}actionMatchesTrigger(e,t){return{threat_display:"threaten"===e.type,territorial_intrusion:"approach"===e.type&&e.intensity>70,aggressive_scanning:"probe"===e.type&&e.intensity>60,communication_disruption:"communicate"===e.type&&e.intensity>80,unknown_entities:"scan"===e.type||"probe"===e.type}[t]||!1}actionMatchesFactor(e,t){return{peaceful_intentions:"gift"===e.type||"communicate"===e.type&&e.intensity<50,cultural_exchange:"demonstrate"===e.type||void 0!==e.culturalContext,respect_for_knowledge:"communicate"===e.type&&e.complexity>6,technological_sharing:"gift"===e.type&&e.culturalContext?.includes("technology"),mutual_benefit:"gift"===e.type||"demonstrate"===e.type}[t]||!1}generateResponseDescription(e,t,i){const s=t.name,a={positive:[`${s} vessel responds with apparent approval`,"Alien ship displays positive acknowledgment patterns",`${s} entities seem pleased with your action`],negative:[`${s} ship shows signs of disapproval`,"Alien vessel withdraws slightly, emanating negative energy",`${s} entities appear displeased with your approach`],curious:[`${s} vessel increases sensor activity, studying you intently`,"Alien ship approaches closer, displaying obvious curiosity",`${s} entities begin complex scanning procedures`],hostile:[`${s} vessel powers up weapons systems`,"Alien ship assumes aggressive posture",`${s} entities broadcast clear threat signals`],confused:[`${s} ship seems uncertain how to interpret your action`,"Alien vessel displays erratic movement patterns",`${s} entities appear to be consulting among themselves`],neutral:[`${s} vessel maintains current position`,"Alien ship shows no particular reaction",`${s} entities continue previous activities`]},r=a[e]||a.neutral;return r[Math.floor(Math.random()*r.length)]}determineAlienPsychologicalState(e,t){const i=[];switch(e.suspicion>70?i.push("highly_suspicious"):e.suspicion>40&&i.push("cautious"),e.interest>70?i.push("fascinated"):e.interest>40&&i.push("interested"),e.intensity>80?i.push("agitated"):e.intensity<20&&i.push("calm"),t.behaviorPatterns.primary){case"scholar":i.push("analytical");break;case"curious":i.push("inquisitive");break;case"aggressive":i.push("territorial")}return i.length>0?i.join(", "):"neutral"}updateEncounterState(e,t,i,s){switch(i.type){case"positive":e.suspicion=Math.max(0,e.suspicion-15);break;case"negative":e.suspicion=Math.min(100,e.suspicion+10);break;case"hostile":e.suspicion=Math.min(100,e.suspicion+25)}t.complexity>6&&(e.interest=Math.min(100,e.interest+10)),"communicate"===t.type&&(e.translationProgress=Math.min(100,e.translationProgress+5),e.languageBarrier=Math.max(0,e.languageBarrier-3),e.translationProgress>30&&!e.communicationEstablished&&(e.communicationEstablished=!0,this.events.onCommunicationBreakthrough?.(e.species,s.communication.primary))),t.culturalContext&&(e.culturalUnderstanding=Math.min(100,e.culturalUnderstanding+3)),this.updateEncounterPhase(e),this.updateKnowledgeBase(e,t,i,s)}updateEncounterPhase(e){const t=e.phase;"approach"===e.phase&&e.actions.length>0?e.phase="contact":"contact"===e.phase&&e.communicationEstablished?e.phase="communication":"communication"===e.phase&&e.culturalUnderstanding>50?e.phase="interaction":e.suspicion<20&&e.interest>60&&(e.phase="resolution",e.success=!0),t!==e.phase&&this.logger.info(`üëΩ Encounter phase changed: ${t} ‚Üí ${e.phase}`)}updateKnowledgeBase(e,t,i,s){const a=this.knowledgeBase.get(e.species);a.totalContacts=Math.max(a.totalContacts,1),"positive"===i.type||"curious"===i.type?a.peacefulEncounters++:"hostile"===i.type&&a.hostileEncounters++,e.communicationEstablished&&a.successfulCommunications++,a.languageComprehension=Math.max(a.languageComprehension,e.translationProgress),a.culturalUnderstanding=Math.max(a.culturalUnderstanding,e.culturalUnderstanding),i.culturalReason&&!a.culturalTraits.includes(i.culturalReason)&&(a.culturalTraits.push(i.culturalReason),e.cultural_insights.push(i.culturalReason),this.events.onCulturalInsight?.(e.species,i.culturalReason)),a.researchPoints+=t.complexity,a.lastUpdate=Date.now()}getEncounter(e){return this.activeEncounters.get(e)||null}getActiveEncounters(){return Array.from(this.activeEncounters.values())}getSpeciesProfile(e){return this.speciesProfiles.get(e)||null}getSpeciesKnowledge(e){return this.knowledgeBase.get(e)||null}getKnownSpecies(){return Array.from(this.knowledgeBase.keys()).filter(e=>this.knowledgeBase.get(e).totalContacts>0)}completeEncounter(e){const t=this.activeEncounters.get(e);if(!t)return null;if(t.duration=Date.now()-t.timestamp,t.suspicion<30&&t.interest>50&&(t.success=!0),t.success){const e=this.speciesProfiles.get(t.species);this.awardEncounterRewards(t,e)}return this.activeEncounters.delete(e),this.logger.info(`üëΩ Encounter completed: ${t.species}`,{success:t.success,duration:t.duration/1e3,knowledgeGained:t.knowledge_gained.length}),t}awardEncounterRewards(e,t){const i=this.knowledgeBase.get(e.species);if(e.culturalUnderstanding>70){const s=t.technology.specializations.filter(e=>!i.unlockedTechnologies.includes(e));if(s.length>0){const t=s[Math.floor(Math.random()*s.length)];i.unlockedTechnologies.push(t),e.technology_exchanged.push(t),this.events.onTechnologyDiscovered?.(e.species,t)}}if(i.researchPoints+=e.culturalUnderstanding+e.translationProgress,e.culturalUnderstanding>80&&i.discoveredSecrets.length<3){const t=["origin_mystery","technological_secret","cultural_ritual","psychological_insight"][i.discoveredSecrets.length];i.discoveredSecrets.push(t),e.knowledge_gained.push(t)}}getAlienAIStats(){const e=this.getKnownSpecies();let t=0,i=0,s=0,a=0,r=0;for(const n of this.knowledgeBase.values())t+=n.totalContacts,i+=n.successfulCommunications,s+=n.hostileEncounters,a+=n.researchPoints,r+=n.unlockedTechnologies.length;return{totalEncounters:t,activeEncounters:this.activeEncounters.size,knownSpecies:e.length,successfulContacts:i,hostileEncounters:s,totalKnowledge:a,unlockedTechnologies:r}}saveAlienAIData(){return{activeEncounters:Array.from(this.activeEncounters.entries()),knowledgeBase:Array.from(this.knowledgeBase.entries()),encounterPatterns:Array.from(this.encounterPatterns.entries()),adaptiveBehaviors:Array.from(this.adaptiveBehaviors.entries())}}loadAlienAIData(e){e.activeEncounters&&(this.activeEncounters=new Map(e.activeEncounters)),e.knowledgeBase&&(this.knowledgeBase=new Map(e.knowledgeBase)),e.encounterPatterns&&(this.encounterPatterns=new Map(e.encounterPatterns)),e.adaptiveBehaviors&&(this.adaptiveBehaviors=new Map(e.adaptiveBehaviors)),this.logger.info("üëΩ Alien AI data loaded",{encounters:this.activeEncounters.size,knownSpecies:this.getKnownSpecies().length})}}class Z{constructor(e={}){this.metrics=[],this.maxHistory=300,this.frameStartTime=0,this.lastFrameTime=0,this.fpsHistory=[],this.fpsCounter=0,this.fpsTimer=0,this.memoryObserver=null,this.lastOptimizationCheck=0,this.optimizationInterval=1e4,this.logger=new r("PerformanceMonitor"),this.events=e,this.platform=i.detect(),this.thresholds=this.getDefaultThresholds(),this.settings=this.getDefaultSettings(),this.currentMetrics=this.createEmptyMetrics(),this.logger.info("üìä Performance monitor initialized")}initialize(){this.setupMemoryObserver(),this.startMonitoring(),this.settings.autoOptimize&&this.enableAutoOptimization(),this.logger.info("üìä Performance monitoring started")}setupMemoryObserver(){if("PerformanceObserver"in window)try{this.memoryObserver=new PerformanceObserver(e=>{for(const t of e.getEntries())t.entryType}),this.memoryObserver.observe({entryTypes:["measure"]})}catch(e){this.logger.warn("Failed to setup memory observer",e)}}startMonitoring(){this.frameStartTime=performance.now(),this.lastFrameTime=this.frameStartTime}update(e){const t=performance.now();this.updateFrameTiming(t,e),this.updateMemoryUsage(),this.updateSystemMetrics(),this.updateCurrentMetrics(t),this.storeMetrics(),this.checkThresholds(),this.settings.autoOptimize&&t-this.lastOptimizationCheck>this.optimizationInterval&&(this.performOptimizationCheck(),this.lastOptimizationCheck=t),this.events.onPerformanceUpdate?.(this.currentMetrics)}updateFrameTiming(e,t){const i=e-this.frameStartTime;if(this.frameStartTime=e,this.fpsCounter++,this.fpsTimer+=t,this.fpsTimer>=1e3){const e=this.fpsCounter/(this.fpsTimer/1e3);this.fpsHistory.push(e),this.fpsHistory.length>60&&this.fpsHistory.shift(),this.fpsCounter=0,this.fpsTimer=0}this.currentMetrics.frameTime=i,this.currentMetrics.deltaTime=t,this.currentMetrics.fps=this.getAverageFPS()}updateMemoryUsage(){if("memory"in performance){const e=performance.memory;this.currentMetrics.memoryUsed=e.usedJSHeapSize/1024/1024,this.currentMetrics.memoryTotal=e.totalJSHeapSize/1024/1024,this.currentMetrics.memoryPercentage=this.currentMetrics.memoryUsed/this.currentMetrics.memoryTotal*100}else this.currentMetrics.memoryUsed=this.estimateMemoryUsage(),this.currentMetrics.memoryTotal=this.estimateTotalMemory(),this.currentMetrics.memoryPercentage=this.currentMetrics.memoryUsed/this.currentMetrics.memoryTotal*100}updateSystemMetrics(){this.currentMetrics.cpuUsage=Math.min(100,this.currentMetrics.frameTime/(1e3/60)*100),"getBattery"in navigator&&navigator.getBattery().then(e=>{this.currentMetrics.batteryLevel=100*e.level}).catch(()=>{}),this.currentMetrics.thermalState=this.estimateThermalState()}updateCurrentMetrics(e){this.currentMetrics.timestamp=e}storeMetrics(){this.metrics.push({...this.currentMetrics}),this.metrics.length>this.maxHistory&&this.metrics.shift()}checkThresholds(){this.currentMetrics.fps<this.thresholds.fps.poor&&this.events.onThresholdExceeded?.("fps",this.currentMetrics.fps,this.thresholds.fps.poor),this.currentMetrics.memoryPercentage>this.thresholds.memory.critical&&this.events.onThresholdExceeded?.("memory",this.currentMetrics.memoryPercentage,this.thresholds.memory.critical),this.currentMetrics.frameTime>this.thresholds.frameTime.critical&&this.events.onThresholdExceeded?.("frameTime",this.currentMetrics.frameTime,this.thresholds.frameTime.critical)}performOptimizationCheck(){const e=this.generateOptimizationRecommendations();e.length>0&&(this.events.onOptimizationRecommended?.(e),e.forEach(e=>{e.automaticApply&&"critical"===e.severity&&this.applyRecommendation(e)}))}generateOptimizationRecommendations(){const t=[];return this.currentMetrics.fps<this.thresholds.fps.acceptable&&(this.settings.renderScale>.75&&t.push({category:"rendering",severity:"warning",title:"Reduce Render Scale",description:"Lower the render scale to improve performance",impact:"high",settings:{renderScale:Math.max(.5,this.settings.renderScale-.25)},automaticApply:this.currentMetrics.fps<this.thresholds.fps.poor}),"low"!==this.settings.particleQuality&&t.push({category:"rendering",severity:"warning",title:"Reduce Particle Quality",description:"Lower particle effects quality to improve performance",impact:"medium",settings:{particleQuality:"low"},automaticApply:this.currentMetrics.fps<this.thresholds.fps.poor}),this.settings.postProcessing&&t.push({category:"rendering",severity:"info",title:"Disable Post-Processing",description:"Turn off post-processing effects to improve performance",impact:"medium",settings:{postProcessing:!1},automaticApply:!1})),this.currentMetrics.memoryPercentage>this.thresholds.memory.high&&(t.push({category:"memory",severity:"warning",title:"Reduce Audio Sources",description:"Limit the number of simultaneous audio sources",impact:"low",settings:{maxAudioSources:Math.max(8,this.settings.maxAudioSources-4)},automaticApply:this.currentMetrics.memoryPercentage>this.thresholds.memory.critical}),t.push({category:"memory",severity:"warning",title:"Reduce LOD Distance",description:"Decrease maximum render distance for objects",impact:"medium",settings:{maxRenderDistance:.8*this.settings.maxRenderDistance},automaticApply:this.currentMetrics.memoryPercentage>this.thresholds.memory.critical})),this.platform===e.Mobile&&!this.settings.mobileLowPowerMode&&this.currentMetrics.batteryLevel&&this.currentMetrics.batteryLevel<20&&t.push({category:"general",severity:"info",title:"Enable Low Power Mode",description:"Activate power saving features for mobile devices",impact:"medium",settings:{mobileLowPowerMode:!0,renderScale:.75,particleQuality:"low",audioQuality:"low"},automaticApply:!1}),t}applyRecommendation(e){this.settings,Object.assign(this.settings,e.settings),this.events.onSettingsChanged?.(this.settings),this.logger.info(`Applied optimization: ${e.title}`,{category:e.category,impact:e.impact,settings:e.settings})}getDefaultThresholds(){return{fps:{excellent:60,good:45,acceptable:30,poor:20},memory:{low:25,medium:50,high:75,critical:90},frameTime:{target:16.67,warning:33.33,critical:50}}}getDefaultSettings(){const t={renderScale:1,particleQuality:"high",shadowQuality:"medium",postProcessing:!0,bloom:!0,antiAliasing:!0,lodBias:1,maxRenderDistance:1e3,audioQuality:"high",maxAudioSources:32,physicsSteps:60,collisionComplexity:"medium",mobileLowPowerMode:!1,vsync:!0,autoOptimize:!0,adaptiveQuality:!0};switch(this.platform){case e.Mobile:return{...t,renderScale:.8,particleQuality:"medium",shadowQuality:"low",postProcessing:!1,bloom:!1,antiAliasing:!1,maxRenderDistance:500,audioQuality:"medium",maxAudioSources:16,physicsSteps:30,collisionComplexity:"simple"};case e.Desktop:return t;default:return{...t,renderScale:.9,particleQuality:"medium",shadowQuality:"medium"}}}createEmptyMetrics(){return{fps:0,frameTime:0,deltaTime:0,memoryUsed:0,memoryTotal:0,memoryPercentage:0,drawCalls:0,triangles:0,cpuUsage:0,activeEntities:0,activeSounds:0,textureMemory:0,timestamp:0}}getAverageFPS(){if(0===this.fpsHistory.length)return 0;return this.fpsHistory.reduce((e,t)=>e+t,0)/this.fpsHistory.length}estimateMemoryUsage(){return(this.platform===e.Mobile?50:100)+.1*this.currentMetrics.activeEntities+2*this.currentMetrics.activeSounds}estimateTotalMemory(){switch(this.platform){case e.Mobile:return 1024;case e.Desktop:return 4096;default:return 2048}}estimateThermalState(){return this.currentMetrics.cpuUsage>90?"critical":this.currentMetrics.cpuUsage>75?"serious":this.currentMetrics.cpuUsage>50?"fair":"normal"}enableAutoOptimization(){this.settings.autoOptimize=!0,this.settings.adaptiveQuality=!0,this.logger.info("üîß Auto-optimization enabled")}setGameMetrics(e){void 0!==e.activeEntities&&(this.currentMetrics.activeEntities=e.activeEntities),void 0!==e.activeSounds&&(this.currentMetrics.activeSounds=e.activeSounds),void 0!==e.drawCalls&&(this.currentMetrics.drawCalls=e.drawCalls),void 0!==e.triangles&&(this.currentMetrics.triangles=e.triangles),void 0!==e.textureMemory&&(this.currentMetrics.textureMemory=e.textureMemory)}getCurrentMetrics(){return{...this.currentMetrics}}getMetricsHistory(e){if(!e)return[...this.metrics];const t=Date.now()-e;return this.metrics.filter(e=>e.timestamp>=t)}getPerformanceSummary(){const e=this.getMetricsHistory(6e4);if(0===e.length)return{averageFPS:0,minFPS:0,maxFPS:0,averageFrameTime:0,averageMemoryUsage:0,performanceGrade:"poor"};const t=e.map(e=>e.fps),i=e.map(e=>e.frameTime),s=e.map(e=>e.memoryPercentage),a=t.reduce((e,t)=>e+t,0)/t.length,r=Math.min(...t),n=Math.max(...t),o=i.reduce((e,t)=>e+t,0)/i.length,c=s.reduce((e,t)=>e+t,0)/s.length;let l;return l=a>=this.thresholds.fps.excellent&&c<this.thresholds.memory.medium?"excellent":a>=this.thresholds.fps.good&&c<this.thresholds.memory.high?"good":a>=this.thresholds.fps.acceptable?"acceptable":"poor",{averageFPS:a,minFPS:r,maxFPS:n,averageFrameTime:o,averageMemoryUsage:c,performanceGrade:l}}updateSettings(e){this.settings,Object.assign(this.settings,e),this.events.onSettingsChanged?.(this.settings),this.logger.info("‚öôÔ∏è Performance settings updated",{changes:Object.keys(e),newSettings:e})}getSettings(){return{...this.settings}}resetToDefaults(){this.settings=this.getDefaultSettings(),this.events.onSettingsChanged?.(this.settings),this.logger.info("‚Ü©Ô∏è Performance settings reset to defaults")}dispose(){this.memoryObserver&&(this.memoryObserver.disconnect(),this.memoryObserver=null),this.metrics=[],this.fpsHistory=[],this.logger.info("üìä Performance monitor disposed")}}class Q{constructor(e={},t={}){this.particles=new Map,this.emitters=new Map,this.nextParticleId=0,this.nextEmitterId=0,this.logger=new r("ParticleSystem"),this.events=t,this.config={maxParticles:1e3,qualityScale:1,enableTrails:!0,enableBloom:!1,pixelPerfect:!0,...e},this.logger.info("‚ú® Particle system initialized")}update(e){this.updateEmitters(e),this.updateParticles(e),this.cleanupParticles()}updateEmitters(e){const t=Date.now();this.emitters.forEach((i,s)=>{if(i.active){if(i.duration>0&&t-i.startTime>1e3*i.duration)return i.active=!1,void this.events.onEmitterCompleted?.(i);if(i.emissionRate>0){const t=i.emissionRate*e/1e3*this.config.qualityScale,s=Math.floor(t),a=t-s;for(let e=0;e<s;e++)this.emitParticle(i);Math.random()<a&&this.emitParticle(i)}if(i.burstCount>0){for(let e=0;e<i.burstCount;e++)this.emitParticle(i);i.burstCount=0}}})}emitParticle(e){if(this.particles.size>=this.config.maxParticles){const e=this.particles.keys().next().value;e&&this.particles.delete(e)}const t="particle_"+this.nextParticleId++,i=this.calculateSpawnPosition(e),s=this.calculateSpawnVelocity(e),a={id:t,type:e.type,position:{...i},velocity:s,acceleration:{x:0,y:0},size:this.randomBetween(e.sizeRange.min,e.sizeRange.max),color:this.generateParticleColor(e.type,e.colorVariation),alpha:1,rotation:Math.random()*Math.PI*2,rotationSpeed:4*(Math.random()-.5),age:0,maxAge:this.randomBetween(e.lifeRange.min,e.lifeRange.max),gravity:this.getParticleGravity(e.type),bounce:this.getParticleBounce(e.type),friction:this.getParticleFriction(e.type)};this.addParticleAnimations(a),this.particles.set(t,a),this.events.onParticleSpawned?.(a)}calculateSpawnPosition(e){const{position:t,shape:i,shapeData:s}=e;switch(i){case"point":default:return{...t};case"circle":const e=Math.random()*Math.PI*2,i=Math.random()*(s.radius||10);return{x:t.x+Math.cos(e)*i,y:t.y+Math.sin(e)*i};case"rectangle":return{x:t.x+(Math.random()-.5)*(s.width||20),y:t.y+(Math.random()-.5)*(s.height||20)};case"cone":const a=Math.random()*(s.angle||Math.PI/4)-(s.angle||Math.PI/4)/2,r=Math.random()*(s.radius||10),n=s.direction||0;return{x:t.x+Math.cos(n+a)*r,y:t.y+Math.sin(n+a)*r}}}calculateSpawnVelocity(e){const{velocityRange:t}=e;return{x:this.randomBetween(t.min.x,t.max.x),y:this.randomBetween(t.min.y,t.max.y)}}generateParticleColor(e,t){const i={explosion:{r:96,g:48,b:12},thrust:{r:32,g:80,b:64},laser:{r:16,g:48,b:16},shield:{r:24,g:60,b:48},spark:{r:96,g:64,b:16},smoke:{r:32,g:32,b:32},debris:{r:48,g:48,b:48},starfield:{r:80,g:80,b:80},warp_trail:{r:48,g:24,b:72},beam:{r:72,g:24,b:24}}[e],s=30*t;return{r:Math.max(0,Math.min(255,i.r+(Math.random()-.5)*s)),g:Math.max(0,Math.min(255,i.g+(Math.random()-.5)*s)),b:Math.max(0,Math.min(255,i.b+(Math.random()-.5)*s))}}getParticleGravity(e){return{explosion:0,thrust:-50,laser:0,shield:0,spark:100,smoke:-20,debris:200,starfield:0,warp_trail:0,beam:0}[e]}getParticleBounce(e){return{explosion:.2,thrust:0,laser:0,shield:0,spark:.8,smoke:0,debris:.6,starfield:0,warp_trail:0,beam:0}[e]}getParticleFriction(e){return{explosion:.95,thrust:.9,laser:1,shield:.98,spark:.98,smoke:.92,debris:.95,starfield:1,warp_trail:.99,beam:1}[e]}addParticleAnimations(e){switch(e.type){case"explosion":e.sizeAnimation={startSize:.1*e.size,endSize:2*e.size,curve:"ease-out"},e.alphaAnimation={startAlpha:1,endAlpha:0,curve:"ease-in"};break;case"thrust":e.sizeAnimation={startSize:e.size,endSize:.1*e.size,curve:"linear"},e.alphaAnimation={startAlpha:.8,endAlpha:0,curve:"linear"};break;case"smoke":e.sizeAnimation={startSize:.5*e.size,endSize:2*e.size,curve:"ease-out"},e.alphaAnimation={startAlpha:.6,endAlpha:0,curve:"ease-in"};break;case"spark":e.alphaAnimation={startAlpha:1,endAlpha:0,curve:"ease-in"}}}updateParticles(e){this.particles.forEach((t,i)=>{const s=e/1e3;t.age+=e,this.updateParticlePhysics(t,s),this.updateParticleAnimations(t),t.rotation+=t.rotationSpeed*s})}updateParticlePhysics(e,t){e.acceleration.y+=e.gravity*t,e.velocity.x+=e.acceleration.x*t,e.velocity.y+=e.acceleration.y*t,e.velocity.x*=e.friction,e.velocity.y*=e.friction,e.position.x+=e.velocity.x*t,e.position.y+=e.velocity.y*t,e.acceleration.x=0,e.acceleration.y=0}updateParticleAnimations(e){const t=Math.min(1,e.age/e.maxAge);if(e.sizeAnimation){const i=this.applyEasing(t,e.sizeAnimation.curve);e.size=this.lerp(e.sizeAnimation.startSize,e.sizeAnimation.endSize,i)}if(e.alphaAnimation){const i=this.applyEasing(t,e.alphaAnimation.curve);e.alpha=this.lerp(e.alphaAnimation.startAlpha,e.alphaAnimation.endAlpha,i)}if(e.colorAnimation){const i=this.applyEasing(t,e.colorAnimation.curve);e.color={r:Math.floor(this.lerp(e.colorAnimation.startColor.r,e.colorAnimation.endColor.r,i)),g:Math.floor(this.lerp(e.colorAnimation.startColor.g,e.colorAnimation.endColor.g,i)),b:Math.floor(this.lerp(e.colorAnimation.startColor.b,e.colorAnimation.endColor.b,i))}}}applyEasing(e,t){switch(t){case"ease-in":return e*e;case"ease-out":return 1-(1-e)*(1-e);case"ease-in-out":return e<.5?2*e*e:1-Math.pow(-2*e+2,2)/2;default:return e}}lerp(e,t,i){return e+(t-e)*i}cleanupParticles(){this.particles.forEach((e,t)=>{(e.age>=e.maxAge||e.alpha<=0)&&(this.particles.delete(t),this.events.onParticleDied?.(e))})}createExplosion(e,t=1){const i="explosion_"+this.nextEmitterId++,s={id:i,type:"explosion",position:{...e},emissionRate:0,burstCount:Math.floor(50*t*this.config.qualityScale),velocityRange:{min:{x:-100*t,y:-100*t},max:{x:100*t,y:100*t}},sizeRange:{min:2,max:8*t},lifeRange:{min:500,max:1500},colorVariation:.3,active:!0,duration:.1,startTime:Date.now(),shape:"circle",shapeData:{radius:5*t}};return this.emitters.set(i,s),this.logger.debug(`üí• Created explosion at (${e.x}, ${e.y})`),i}createThrustTrail(e,t,i=1){const s="thrust_"+this.nextEmitterId++,a={id:s,type:"thrust",position:{...e},emissionRate:60*i*this.config.qualityScale,burstCount:0,velocityRange:{min:{x:-50*Math.cos(t)*i,y:-50*Math.sin(t)*i},max:{x:-100*Math.cos(t)*i,y:-100*Math.sin(t)*i}},sizeRange:{min:1,max:3*i},lifeRange:{min:100,max:400},colorVariation:.2,active:!0,duration:-1,startTime:Date.now(),shape:"cone",shapeData:{direction:t+Math.PI,angle:Math.PI/6,radius:3*i}};return this.emitters.set(s,a),s}createLaserBeam(e,t){const i="laser_"+this.nextEmitterId++,s=Math.sqrt((t.x-e.x)**2+(t.y-e.y)**2),a=Math.floor(s/5),r={id:i,type:"laser",position:{...e},emissionRate:0,burstCount:a*this.config.qualityScale,velocityRange:{min:{x:0,y:0},max:{x:0,y:0}},sizeRange:{min:1,max:2},lifeRange:{min:100,max:200},colorVariation:.1,active:!0,duration:.05,startTime:Date.now(),shape:"rectangle",shapeData:{width:s,height:2}};return this.emitters.set(i,r),i}updateEmitterPosition(e,t){const i=this.emitters.get(e);i&&(i.position={...t})}stopEmitter(e){const t=this.emitters.get(e);t&&(t.active=!1)}removeEmitter(e){this.emitters.delete(e)}render(e){Array.from(this.particles.values()).sort((e,t)=>e.type.localeCompare(t.type)).forEach(t=>{this.renderParticle(e,t)})}renderParticle(e,t){if(t.alpha<=0)return;const i={...t.color};if(this.config.pixelPerfect){const s=Math.floor(t.position.x),a=Math.floor(t.position.y),r=Math.max(1,Math.floor(t.size));e.fillRect(s-r/2,a-r/2,r,r,i)}else e.drawCircle(t.position.x,t.position.y,t.size,i,!0)}randomBetween(e,t){return e+Math.random()*(t-e)}updateConfig(e){Object.assign(this.config,e),this.logger.info("‚ú® Particle system config updated",e)}getStats(){return{activeParticles:this.particles.size,activeEmitters:Array.from(this.emitters.values()).filter(e=>e.active).length,maxParticles:this.config.maxParticles,qualityScale:this.config.qualityScale}}clear(){this.particles.clear(),this.emitters.clear(),this.logger.info("‚ú® Particle system cleared")}dispose(){this.clear(),this.logger.info("‚ú® Particle system disposed")}}class J{constructor(e,t){this.playerShip=null,this.galaxyManager=null,this.cockpitStatusBar=null,this.celestialManager=null,this.spaceBackground=null,this.itemDatabase=null,this.inventoryManager=null,this.craftingSystem=null,this.combatManager=null,this.playerProgression=null,this.researchSystem=null,this.crewManagement=null,this.diplomacySystem=null,this.alienAI=null,this.proceduralAudio=null,this.performanceMonitor=null,this.particleSystem=null,this.isRunning=!1,this.isPaused=!1,this.lastTime=0,this.deltaTime=0,this.frameCount=0,this.fpsCounter=0,this.lastFpsUpdate=0,this.performanceStats={averageFPS:0,frameTime:0,renderTime:0,updateTime:0,memoryUsage:0},this.canvas=e,this.platform=t,this.logger=new r("Game"),this.perfLogger=this.logger.createPerformanceLogger();const s=i.getConfig();this.config={targetFPS:s.performance.targetFPS,enableDebug:!1,enablePerformanceMonitoring:!1,enableAutoSave:s.storage.enableAutoSave,autoSaveInterval:s.storage.saveInterval},this.logger.info("üéÆ Game instance created",{platform:t,canvasSize:`${e.width}x${e.height}`,config:this.config}),this.initializeSystems()}initializeSystems(){this.logger.info("üîß Initializing game systems...");try{this.renderer=new n(this.canvas,this.platform),this.logger.info("‚úÖ Renderer initialized"),this.input=new o(this.canvas,this.platform),this.logger.info("‚úÖ Input system initialized"),this.physics=new c,this.logger.info("‚úÖ Physics engine initialized"),this.audio=new l(this.platform),this.logger.info("‚úÖ Audio engine initialized"),this.stateManager=new m(this.proceduralAudio,this.particleSystem),this.logger.info("‚úÖ Game state manager initialized"),this.logger.info("üéØ All core systems initialized successfully")}catch(e){throw this.logger.critical("‚ùå Failed to initialize core systems",e),e}}async initialize(){this.logger.info("üöÄ Starting game initialization...");try{await this.perfLogger.measureAsync("renderer-init",async()=>{await this.renderer.initialize()}),await this.perfLogger.measureAsync("audio-init",async()=>{await this.audio.initialize()}),await this.perfLogger.measureAsync("state-init",async()=>{await this.stateManager.initialize()}),this.config.enableAutoSave&&this.setupAutoSave(),await this.perfLogger.measureAsync("galaxy-init",async()=>{this.galaxyManager=new P,await this.galaxyManager.initialize()}),this.cockpitStatusBar=new C({screenWidth:this.canvas.width,screenHeight:this.canvas.height},{onPowerAllocationChange:e=>{this.playerShip&&(this.playerShip.setPowerAllocation(e),this.logger.debug("Power allocation changed",e))},onSystemToggle:(e,t)=>{this.playerShip&&(this.playerShip.toggleSystem(e,t),this.logger.debug(`System ${e} ${t?"enabled":"disabled"}`))},onInventoryOpen:()=>{this.logger.info("üì¶ Inventory requested")},onCodexOpen:()=>{this.logger.info("üìö Codex requested")},onResearchOpen:()=>{this.logger.info("üî¨ Research requested")},onCrewOpen:()=>{this.logger.info("üë• Crew management requested")},onGalaxyMapOpen:()=>{this.logger.info("üåå Galaxy map requested")},onRadarZoom:e=>{this.logger.debug(`Radar zoom: ${e}x`)}}),this.celestialManager=new A({renderDistance:2e3,interactionDistance:150,showOrbitLines:!0,enableInteractions:!0},{onEnterOrbit:e=>{this.logger.info(`üõ∞Ô∏è Entering orbit around ${e}`)},onLand:e=>{this.logger.info(`üöÅ Landing on ${e}`)},onContinueFlight:()=>{this.logger.info("üöÄ Continuing flight")},onStartMining:e=>{this.logger.info(`‚õèÔ∏è Mining on ${e}`)},onPerformScan:e=>{this.logger.info(`üîç Scanned ${e}`)}}),this.spaceBackground=new k({starCount:300,starLayers:5,parallaxStrength:.3,enableDistortion:!0,galaxyBandIntensity:.4,nebulaOpacity:.2}),this.itemDatabase=new D,this.inventoryManager=new R({maxSlots:50,gridWidth:10,gridHeight:5,maxWeight:1e3,maxVolume:500,allowStacking:!0},{onItemAdded:(e,t)=>{this.logger.info(`üì¶ Added ${t}x ${e.name} to inventory`)},onItemRemoved:(e,t)=>{this.logger.info(`üì¶ Removed ${t}x ${e.name} from inventory`)},onInventoryFull:()=>{this.logger.warn("üì¶ Inventory is full!")}},this.itemDatabase),this.craftingSystem=new O(this.itemDatabase,this.inventoryManager,{onCraftingStarted:e=>{this.logger.info(`üîß Started crafting: ${e.recipeId}`)},onCraftingCompleted:(e,t)=>{t?this.logger.info(`‚úÖ Successfully crafted ${e.name}`):this.logger.warn(`‚ùå Failed to craft ${e.name}`)}}),this.combatManager=null,this.playerProgression=new W({onLevelUp:(e,t)=>{this.logger.info(`üéâ Level up! Level ${e}`,t)},onSkillLevelUp:(e,t)=>{this.logger.info(`üìà Skill up: ${e.name} ‚Üí ${t}`)},onAchievementUnlocked:e=>{this.logger.info(`üèÜ Achievement: ${e.name}`)}}),this.researchSystem=new j({onTechnologyUnlocked:e=>{this.logger.info(`üî¨ Technology unlocked: ${e.name}`)},onDiscoveryMade:e=>{this.logger.info(`üîç Discovery: ${e.name}`)}}),this.crewManagement=new U({onCrewJoined:e=>{this.logger.info(`üë§ Crew joined: ${e.name} (${e.role})`)},onCrewEvent:e=>{this.logger.info(`üì∞ Crew event: ${e.description}`)},onMoraleAlert:e=>{this.logger.warn(`üòü Low crew morale: ${e.toFixed(0)}%`)}}),this.diplomacySystem=new K({onFirstContact:e=>{this.logger.info(`ü§ù First contact with: ${e.name}`)},onReputationChanged:(e,t,i)=>{const s=i-t;this.logger.info(`ü§ù Reputation ${s>0?"+":""}${s}: ${e}`)},onNegotiationStarted:e=>{this.logger.info("üí¨ Negotiation started with faction")},onEncounterGenerated:e=>{this.logger.info(`üé≠ Diplomatic encounter: ${e.type}`)}}),this.alienAI=new X({onFirstContact:(e,t)=>{this.logger.info(`üëΩ First contact with: ${e}`)},onCommunicationBreakthrough:(e,t)=>{this.logger.info(`üì° Communication breakthrough: ${e} via ${t}`)},onTechnologyDiscovered:(e,t)=>{this.logger.info(`üî¨ Technology discovered from ${e}: ${t}`)},onCulturalInsight:(e,t)=>{this.logger.info(`üé≠ Cultural insight about ${e}: ${t}`)}}),this.proceduralAudio=new d({onSoundPlayed:(e,t)=>{this.logger.debug(`üîä Sound played: ${e}`)},onTrackChanged:e=>{this.logger.info(`üéµ Music track changed: ${e}`)},onAudioError:e=>{this.logger.error("üîä Audio error",e)}}),this.performanceMonitor=new Z({onPerformanceUpdate:e=>{this.proceduralAudio?.setGameMetrics?.({activeSounds:e.activeSounds})},onThresholdExceeded:(e,t,i)=>{this.logger.warn(`‚ö†Ô∏è Performance threshold exceeded: ${e} = ${t} (threshold: ${i})`)},onOptimizationRecommended:e=>{this.logger.info(`üîß Performance recommendations: ${e.length} suggestions`)},onSettingsChanged:e=>{this.logger.info("‚öôÔ∏è Performance settings updated")}}),await this.proceduralAudio.initialize(),this.particleSystem=new Q({maxParticles:1e3,qualityScale:1,enableTrails:!0,pixelPerfect:!0}),this.performanceMonitor.initialize(),this.proceduralAudio.startAmbientTrack("deep_space"),this.combatManager=new q(this.itemDatabase,this.inventoryManager,{onEncounterStarted:e=>{this.logger.info(`üö® Combat encounter: ${e.name}`)},onEncounterCompleted:(e,t)=>{this.logger.info(`${t?"‚úÖ":"‚ùå"} Encounter ${e.name} ${t?"completed":"failed"}`),t&&this.playerProgression&&(this.playerProgression.addExperience(e.rewards.experience),this.playerProgression.updateStatistics({encountersCompleted:1}))},onEnemyDestroyed:(e,t)=>{this.logger.info(`üí∞ Enemy destroyed: +${t.experience} XP, ${t.items.length} items`),this.playerProgression&&(this.playerProgression.addExperience(t.experience),this.playerProgression.updateStatistics({enemiesDefeated:1}),this.playerProgression.addSkillExperience("weapon_proficiency",10),this.playerProgression.addSkillExperience("tactical_combat",5))},onPlayerDamaged:(e,t)=>{this.logger.warn(`üí• Player hit: ${e} ${t} damage`)}}),this.setupDemoContent(),this.logger.info("‚úÖ Game initialization completed successfully")}catch(e){throw this.logger.critical("‚ùå Game initialization failed",e),e}}async start(){if(this.isRunning)this.logger.warn("Game is already running");else{this.logger.info("üéÆ Starting game...");try{await this.stateManager.setState(g.Playing),this.isRunning=!0,this.isPaused=!1,this.lastTime=performance.now(),this.gameLoop(),this.logger.info("‚úÖ Game started successfully")}catch(e){throw this.logger.critical("‚ùå Failed to start game",e),this.isRunning=!1,e}}}gameLoop(){if(!this.isRunning)return;const e=performance.now();if(this.deltaTime=(e-this.lastTime)/1e3,this.lastTime=e,this.deltaTime=Math.min(this.deltaTime,1/15),!this.isPaused)try{this.config.enablePerformanceMonitoring&&this.updatePerformanceStats(e),this.perfLogger.measure("update",()=>{this.update(this.deltaTime)}),this.perfLogger.measure("render",()=>{this.render()}),this.frameCount++}catch(t){this.logger.error("Game loop error",t),this.handleError(t)}requestAnimationFrame(()=>this.gameLoop())}update(e){if(this.input.update(e),this.stateManager.update(e,this.input),this.physics.update(e),this.audio.update(e),this.playerShip&&this.stateManager.isGameActive()){if(this.playerShip.update(e),this.playerShip.fireWeapon(),this.input.isKeyPressed("KeyT")&&(this.playerShip.applyDamage(15,Math.random()>.5?p.Engineering:p.Weapons),this.logger.info("üß™ Demo damage applied")),this.input.isKeyPressed("KeyY")){const e=this.playerShip.getSystemStatus();this.playerShip.toggleSystem(y.Engines,!e.enginesOnline),this.logger.info("üß™ Engines "+(e.enginesOnline?"disabled":"enabled"))}if(this.input.isKeyPressed("KeyP")&&this.celestialManager){const e=this.celestialManager.getNearbyBodies();if(e.length>0){const t=e[0];this.celestialManager.performAction(t.id,"scan",this.playerShip.getPosition()),this.logger.info(`üîç Demo scan of ${t.name}`)}}if(this.input.isKeyPressed("KeyW")){const e=this.playerShip.getWarpState();this.logger.info(`üåå Warp state: ${e}`)}if(this.input.isKeyPressed("KeyI")&&this.inventoryManager){const e=this.inventoryManager.isInventoryVisible();this.inventoryManager.setVisible(!e),this.logger.info("üì¶ Inventory "+(e?"closed":"opened"))}if(this.input.isKeyPressed("KeyC")&&this.craftingSystem){const e=this.craftingSystem.isCraftingVisible();this.craftingSystem.setVisible(!e),e||this.craftingSystem.selectStation("basic_fabricator"),this.logger.info("üîß Crafting "+(e?"closed":"opened"))}if(this.input.isKeyPressed("KeyR")&&this.inventoryManager&&this.itemDatabase){const e=this.itemDatabase.generateRandomItem();if(e){const t=Math.floor(5*Math.random())+1;this.inventoryManager.addItem(e,t)&&this.logger.info(`üé≤ Added ${t}x ${e.name} (${e.rarity})`)}}if(this.input.isKeyPressed("KeyX")&&this.craftingSystem){this.craftingSystem.startCrafting("craft_energy_cell","basic_fabricator")?this.logger.info("üîß Started crafting Energy Cell"):this.logger.warn("üîß Cannot start crafting - check materials")}if(this.combatManager){if(this.input.isKeyPressed("Space")){this.combatManager.firePlayerWeapon("player_laser_1")&&this.logger.debug("üî´ Fired laser cannon")}if(this.input.isKeyPressed("ShiftLeft")){this.combatManager.firePlayerWeapon("player_cannon_1")&&this.logger.debug("üî´ Fired mass driver")}this.input.isKeyPressed("KeyE")&&(this.combatManager.startRandomEncounter(),this.logger.info("üõ∏ Spawned random encounter")),this.input.isKeyPressed("KeyQ")&&(this.combatManager.clearCombat(),this.logger.info("üßπ Cleared all combat"))}if(this.diplomacySystem){if(this.input.isKeyPressed("KeyK")){const e=this.playerShip?.getPosition()||{x:0,y:0},t=this.diplomacySystem.generateRandomEncounter(e);t&&this.logger.info(`üé≠ Generated diplomatic encounter with ${t.factionId}`)}if(this.input.isKeyPressed("KeyL")){const e=this.diplomacySystem.getAllFactions();if(e.length>0){const t=e[Math.floor(Math.random()*e.length)],i=Math.floor(21*Math.random())-10;this.diplomacySystem.modifyReputation(t.id,i,"Random diplomatic action")}}}if(this.alienAI){if(this.input.isKeyPressed("KeyM")){const e=this.playerShip?.getPosition()||{x:0,y:0},t=Object.values(Y)[Math.floor(Math.random()*Object.values(Y).length)];this.alienAI.generateEncounter(t,e,"routine"),this.logger.info(`üëΩ Generated alien encounter: ${t}`)}if(this.input.isKeyPressed("KeyN")){const e=this.alienAI.getActiveEncounters();if(e.length>0){const t=e[0],i=this.alienAI.processPlayerAction(t.id,"communicate",50,"peaceful_greeting");this.logger.info(`üì° Alien response: ${i.type} - ${i.description}`)}}}if(this.proceduralAudio&&(this.input.isKeyPressed("KeyO")&&this.proceduralAudio.playRetroSound(h.Laser,1),this.input.isKeyPressed("KeyP")&&this.proceduralAudio.playRetroSound(h.Explosion,1),this.input.isKeyPressed("KeyU"))){const e=["deep_space","nebula_drift","void_silence"],t=this.proceduralAudio.getAudioStats().currentTrack,i=e.indexOf(t||"deep_space"),s=e[(i+1)%e.length];this.proceduralAudio.startAmbientTrack(s)}if(this.performanceMonitor){if(this.input.isKeyPressed("KeyY")){const e=this.performanceMonitor.getSettings();this.performanceMonitor.updateSettings({autoOptimize:!e.autoOptimize}),this.logger.info("üîß Auto-optimization: "+(e.autoOptimize?"OFF":"ON"))}if(this.input.isKeyPressed("KeyT")){const e=this.performanceMonitor.getPerformanceSummary();this.logger.info(`üìä Performance: ${e.performanceGrade} (${Math.round(e.averageFPS)} FPS, ${Math.round(e.averageMemoryUsage)}% memory)`)}}if(this.playerProgression&&(this.input.isKeyPressed("KeyF")&&(this.playerProgression.addExperience(100),this.logger.info("üìà Added 100 XP")),this.input.isKeyPressed("KeyG")&&(this.playerProgression.addSkillExperience("weapon_proficiency",25),this.logger.info("üîß Added weapon proficiency XP"))),this.researchSystem&&this.input.isKeyPressed("KeyH")){this.researchSystem.startResearch("basic_sensors","basic_lab",["dr_smith"])?this.logger.info("üî¨ Started basic sensors research"):this.logger.warn("üî¨ Cannot start research")}if(this.crewManagement&&this.input.isKeyPressed("KeyJ")){const e=this.crewManagement.getAllCrew();if(e.length>0){const t=e[Math.floor(Math.random()*e.length)],i=this.crewManagement.getAllStations().find(e=>e.assignedCrew.length<e.maxCrew);if(i){this.crewManagement.assignCrewToStation(t.id,i.stationId)&&this.logger.info(`üë• Assigned ${t.name} to ${i.stationId}`)}}}this.input.isPausePressed()&&(this.stateManager.canPause()?this.stateManager.setState(g.Paused):this.stateManager.canResume()&&this.stateManager.setState(g.Playing))}if(this.cockpitStatusBar&&(this.cockpitStatusBar.update(e,this.input),this.playerShip&&(this.cockpitStatusBar.updateSystemStatus(this.playerShip.getSystemStatus()),this.cockpitStatusBar.updateDamageReports(this.playerShip.getShipSystems().getDamageReports()))),this.celestialManager&&this.playerShip&&this.celestialManager.update(e,this.input,this.playerShip.getPosition()),this.spaceBackground)if(this.spaceBackground.update(e),this.playerShip&&this.playerShip.isWarpActive()){const e=this.playerShip.getWarpDrive().getSpaceDistortion();this.spaceBackground.updateWarpDistortion(e)}else if(this.playerShip&&"deactivating"===this.playerShip.getWarpState()){const e=this.playerShip.getWarpDrive().getWarpProgress();this.spaceBackground.gradualRestore(e)}if(this.craftingSystem&&this.craftingSystem.update(e),this.combatManager&&this.playerShip){const t=this.playerShip.getSystemStatus();this.combatManager.updatePlayer(this.playerShip.getPosition(),this.playerShip.getVelocity(),20,t.hull,100),this.combatManager.update(e)}if(this.researchSystem&&this.researchSystem.update(e),this.crewManagement&&this.crewManagement.update(e),this.performanceMonitor?.update(e),this.particleSystem?.update(e),this.performanceMonitor){const e=this.proceduralAudio?.getAudioStats();this.performanceMonitor.setGameMetrics({activeEntities:(this.celestialManager?.getActiveBodies()?.length||0)+1,activeSounds:e?.activeSounds||0,drawCalls:1,triangles:100,textureMemory:10})}}render(){this.renderer.beginFrame(),this.spaceBackground&&this.playerShip&&this.stateManager.isGameActive()&&this.spaceBackground.render(this.renderer,this.playerShip.getPosition()),this.stateManager.render(this.renderer),this.playerShip&&this.stateManager.isGameActive()&&(this.playerShip.renderThrustParticles(this.renderer),this.playerShip.renderWarpEffects(this.renderer)),this.celestialManager&&this.playerShip&&this.stateManager.isGameActive()&&this.celestialManager.render(this.renderer,this.playerShip.getPosition()),this.cockpitStatusBar&&this.cockpitStatusBar.render(this.renderer),this.inventoryManager&&this.inventoryManager.isInventoryVisible()&&this.inventoryManager.render(this.renderer),this.craftingSystem&&this.craftingSystem.isCraftingVisible()&&this.craftingSystem.render(this.renderer),this.combatManager&&this.combatManager.render(this.renderer),this.config.enableDebug&&this.renderDebugInfo(),this.particleSystem&&this.particleSystem.render(this.renderer),this.renderer.endFrame()}renderDebugInfo(){const e=[`FPS: ${this.performanceStats.averageFPS.toFixed(1)}`,`Frame Time: ${this.performanceStats.frameTime.toFixed(2)}ms`,`Render Time: ${this.performanceStats.renderTime.toFixed(2)}ms`,`Update Time: ${this.performanceStats.updateTime.toFixed(2)}ms`,`Platform: ${this.platform}`,`State: ${this.stateManager.getCurrentState()}`,`Objects: ${this.physics.getObjectCount()}`];this.renderer.renderDebugText(e,10,10)}updatePerformanceStats(e){this.fpsCounter++,e-this.lastFpsUpdate>=1e3&&(this.performanceStats.averageFPS=this.fpsCounter,this.fpsCounter=0,this.lastFpsUpdate=e,performance.memory&&(this.performanceStats.memoryUsage=performance.memory.usedJSHeapSize/1024/1024)),this.performanceStats.frameTime=1e3*this.deltaTime,this.performanceStats.renderTime=this.perfLogger.end("render")||0,this.performanceStats.updateTime=this.perfLogger.end("update")||0}pause(){this.isRunning&&!this.isPaused&&(this.isPaused=!0,this.audio.pauseAll(),this.logger.info("‚è∏Ô∏è Game paused"))}resume(){this.isRunning&&this.isPaused&&(this.isPaused=!1,this.lastTime=performance.now(),this.audio.resumeAll(),this.logger.info("‚ñ∂Ô∏è Game resumed"))}stop(){this.isRunning&&(this.isRunning=!1,this.isPaused=!1,this.audio.stopAll(),this.logger.info("‚èπÔ∏è Game stopped"))}handleResize(){this.renderer.handleResize(),this.logger.debug("üìê Game resized")}setupDemoContent(){this.logger.info("üéÆ Setting up demo content...");try{let e={x:512,y:384};if(this.galaxyManager){const t=this.galaxyManager.getCurrentSystem();t&&(e={x:t.star.position.x+100,y:t.star.position.y+100})}this.playerShip=new b(this.physics,this.input,this.audio,e);const t=[];if(this.galaxyManager){const e=this.galaxyManager.getCurrentSystem();if(e){const i=this.physics.createPlanet(e.star.id,{x:512,y:384},1e6*e.star.mass,Math.min(20*e.star.radius,80));this.physics.addObject(i),this.physics.addGravityWell(e.star.id,{position:i.position,mass:i.mass,radius:300}),t.push(i),e.planets.forEach((i,s)=>{const a=s*Math.PI*2/e.planets.length,r=150+30*i.orbitDistance,n={x:512+Math.cos(a)*r,y:384+Math.sin(a)*r},o=this.physics.createPlanet(i.id,n,1e5*i.mass,Math.max(10*i.radius,15));this.physics.addObject(o),t.push(o)}),this.logger.info(`‚úÖ Generated system: ${e.name} with ${e.planets.length} planets`)}}if(this.galaxyManager&&this.celestialManager){const e=this.galaxyManager.getCurrentSystem();e&&(this.celestialManager.loadSystem({systemData:e,cameraPosition:{x:512,y:384}}),this.celestialManager.discoverAllBodies(),this.logger.info(`üåå Loaded celestial system: ${e.name}`))}if(0===t.length){const e=this.physics.createPlanet("demo_planet_1",{x:300,y:200},1e6,50),i=this.physics.createPlanet("demo_planet_2",{x:700,y:500},8e5,40);this.physics.addObject(e),this.physics.addObject(i),this.physics.addGravityWell("demo_planet_1",{position:e.position,mass:e.mass,radius:200}),this.physics.addGravityWell("demo_planet_2",{position:i.position,mass:i.mass,radius:180}),t.push(e,i)}this.stateManager.setDemoShip(this.playerShip.getPhysicsObject()),this.stateManager.setDemoPlanets(t),this.logger.info("‚úÖ Demo content setup completed")}catch(e){this.logger.error("‚ùå Failed to setup demo content",e)}}handleError(e){this.logger.error("Game error handled",e);try{this.pause(),this.stateManager.setState(g.Error)}catch(t){this.logger.critical("Failed to recover from error",t),this.stop()}}setupAutoSave(){setInterval(()=>{this.isRunning&&!this.isPaused&&this.saveGame()},this.config.autoSaveInterval)}async saveGame(){try{await this.stateManager.save(),this.logger.debug("üíæ Game saved")}catch(e){this.logger.error("Failed to save game",e)}}async loadGame(){try{await this.stateManager.load(),this.logger.info("üìÅ Game loaded")}catch(e){this.logger.error("Failed to load game",e)}}async cleanup(){this.logger.info("üßπ Cleaning up game resources..."),this.stop(),this.renderer&&this.renderer.cleanup(),this.audio&&this.audio.cleanup(),this.input&&this.input.cleanup(),this.playerShip&&this.playerShip.cleanup(),this.galaxyManager&&await this.galaxyManager.cleanup(),this.celestialManager&&this.celestialManager.cleanup(),this.inventoryManager&&this.inventoryManager.clearInventory(),this.logger.info("‚úÖ Game cleanup completed")}getIsPaused(){return this.isPaused}isGameRunning(){return this.isRunning}getPerformanceStats(){return{...this.performanceStats}}getRenderer(){return this.renderer}getInput(){return this.input}getPhysics(){return this.physics}getAudio(){return this.audio}getStateManager(){return this.stateManager}}let ee=null;class te{constructor(){this.currentProgress=0,this.progressElement=document.getElementById("loadingProgress"),this.textElement=document.getElementById("loadingText")}updateProgress(e,t){this.currentProgress=Math.max(this.currentProgress,e),this.progressElement.style.width=`${this.currentProgress}%`,t&&(this.textElement.textContent=t)}hide(){const e=document.getElementById("loadingScreen");e.classList.add("hidden"),setTimeout(()=>{e.style.display="none"},500)}}async function ie(){const t=new te,s=new r("Main");try{s.info("üöÄ Starting Space Explorer 16-Bit initialization..."),t.updateProgress(10,"DETECTING PLATFORM...");const a=i.detect();s.info(`Platform detected: ${a}`),t.updateProgress(20,"INITIALIZING GRAPHICS...");const n=document.getElementById("gameCanvas");if(!n)throw new Error("Game canvas not found");a===e.Mobile&&se(n),t.updateProgress(40,"LOADING CORE SYSTEMS..."),await async function(){return new Promise(e=>{setTimeout(e,200)})}(),t.updateProgress(60,"INITIALIZING GAME ENGINE..."),ee=new J(n,a),t.updateProgress(80,"GENERATING GALAXY..."),await ee.initialize(),t.updateProgress(95,"FINAL PREPARATIONS..."),window.addEventListener("resize",()=>{ee&&i.detect()===e.Mobile&&(se(document.getElementById("gameCanvas")),ee.handleResize())}),document.addEventListener("visibilitychange",()=>{ee&&(document.hidden?ee.pause():ee.resume())}),window.addEventListener("beforeunload",()=>{ee&&ee.cleanup()}),window.addEventListener("error",e=>{new r("GlobalError").error("Unhandled error:",e.error),ee&&ee.handleError(e.error)}),t.updateProgress(100,"LAUNCHING SPACE EXPLORER..."),await new Promise(e=>setTimeout(e,500)),t.hide(),await ee.start(),s.info("‚úÖ Game successfully initialized and started")}catch(a){s.error("‚ùå Failed to initialize game:",a),function(e){const t=document.getElementById("loadingScreen"),i=document.getElementById("loadingText"),s=document.getElementById("loadingBar");i.textContent="‚ùå INITIALIZATION FAILED",i.style.color="#f00",s.style.display="none";const a=document.createElement("div");a.style.cssText="\n        color: #f00;\n        font-family: monospace;\n        font-size: 12px;\n        margin-top: 20px;\n        text-align: left;\n        background: rgba(255, 0, 0, 0.1);\n        padding: 10px;\n        border: 1px solid #f00;\n        max-width: 80%;\n        overflow-wrap: break-word;\n    ",a.innerHTML=`\n        <div><strong>Error:</strong> ${e.message}</div>\n        <div><strong>Stack:</strong></div>\n        <pre style="font-size: 10px; margin-top: 5px;">${e.stack}</pre>\n        <div style="margin-top: 10px; color: #ff0;">\n            Please check the browser console for more details.\n        </div>\n    `,t.appendChild(a)}(a)}}function se(e){const t=document.getElementById("gameContainer").getBoundingClientRect(),i=1024/768;let s=t.width-20,a=s/i;a>t.height-20&&(a=t.height-20,s=a*i),e.style.width=`${s}px`,e.style.height=`${a}px`,e.width=1024,e.height=768}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",ie):ie();
//# sourceMappingURL=main-Dk2xChYn.js.map
